{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.0.37",
    "title" : "Sample Implicit Flow OAuth2 Project",
    "description" : "This is an example of using OAuth2 Implicit Flow in a specification to describe security to your API."
  },
  "securityDefinitions" : {
    "password" : {
      "type" : "oauth2",
      "tokenUrl" : "http://example.com/oauth/token",
      "flow" : "password",
      "scopes" : {
        "write" : "allows modifying resources",
        "read" : "allows reading resources"
      }
    }
  },
  "security" : [ {
    "password" : [ "read", "write" ]
  } ],
  "tags" : [ {
    "name" : "User",
    "description" : "UP Digital - User"
  } ],
  "paths" : {
    "/users/{user_id}/dashboard" : {
      "get" : {
        "summary" : "Returns user detail for dashboard, basic information, name, surname, atc. | Use in WF: U1, AU2",
        "tags" : [ "User" ],
        "operationId" : "get_users_dashboard",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/user_dashboard"
            }
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/notifications" : {
      "get" : {
        "summary" : "Returns the user notification list. (dynamic filter) | Use in WF: Global menu",
        "tags" : [ "Notification" ],
        "operationId" : "get_notifications",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/notifications_response"
            }
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/users/{user_id}/accounts" : {
      "get" : {
        "summary" : "Returns the user account list. | Use in WF: U1, U2, AU2, AU3.1, AU4.1, AU4.1.1, AU4.1.2, AU4.1.3",
        "tags" : [ "User" ],
        "operationId" : "get_users_accounts",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/account"
              }
            }
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/users/{user_id}/confirm_cash" : {
      "post" : {
        "summary" : "Confirmation of a cash account that may have a cash account. | Use in WF: U1",
        "tags" : [ "User" ],
        "operationId" : "put_confirm_cash",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/result"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/meal_card_transfer" : {
      "post" : {
        "summary" : "Setting the user's voucher as much as he wants to convert the voucher percentage. | Use in WF: U2",
        "tags" : [ "User" ],
        "operationId" : "post_meal_card_transfer",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "card_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/meal_card_transfer_body"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/transfer_request" : {
      "post" : {
        "summary" : "Request to transfer cash to an account. | Use in WF: U1",
        "tags" : [ "User" ],
        "operationId" : "put_transfer_request",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/transfer_request_body"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/cards" : {
      "get" : {
        "summary" : "Returns the user notification list. | none",
        "tags" : [ "User" ],
        "operationId" : "get_cards",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/cards_response"
            }
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/cards/{card_id}/block" : {
      "post" : {
        "summary" : "Card blocation.  | Use in WF: U1, U2",
        "tags" : [ "Card" ],
        "operationId" : "put_card_blocation",
        "parameters" : [ {
          "name" : "card_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/result"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/transactions" : {
      "get" : {
        "summary" : "An overview of all user transactions for all accounts. (dynamic filter) | Use in WF: U4, AU6",
        "tags" : [ "User" ],
        "operationId" : "get_users_transactions",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/user_transaction_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/transactions/export" : {
      "post" : {
        "summary" : "Export the user's transaction to the selected format. The format can be either pdf or xlsx. (dynamic filter) | Use in WF: U4",
        "tags" : [ "User" ],
        "operationId" : "post_users_transactions_export",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "format",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "Possible values: \"PDF\" or \"XLSX\""
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/file"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/transfer_request_confirm" : {
      "post" : {
        "summary" : "Confirmation of transfer request. | Use in WF: ",
        "tags" : [ "User" ],
        "operationId" : "post_user_transfer_request_confirm",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "code",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : ""
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/pre_orders" : {
      "get" : {
        "summary" : "An overview of all pre-orders. (dynamic filter) | Use in WF: none",
        "tags" : [ "Pre-order" ],
        "operationId" : "get_pre_orders",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/pre_orders_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/partners/{partner_id}/favourite" : {
      "post" : {
        "summary" : "Save partner as a favourite.  | Use in WF: ",
        "tags" : [ "User" ],
        "operationId" : "post_user_partner_favourite",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "partner_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/empty_body"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      },
      "delete" : {
        "summary" : "Remove partner from favourites.  | Use in WF: ",
        "tags" : [ "User" ],
        "operationId" : "delete_user_partner_favourite",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "partner_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/empty_body"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/pre_orders/{pre_order_id}" : {
      "post" : {
        "summary" : "Pre-order detail. | Use in WF: none",
        "tags" : [ "Pre-order" ],
        "operationId" : "post_pre_order",
        "parameters" : [ {
          "name" : "pre_order_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/pre_order"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      },
      "put" : {
        "summary" : "Update or create a pre-order. | Use in WF: none",
        "tags" : [ "Pre-order" ],
        "operationId" : "put_pre_order",
        "parameters" : [ {
          "name" : "pre_order_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/pre_order"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/result_save"
              }
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      },
      "delete" : {
        "summary" : "Delete pre-order. | Use in WF: none",
        "tags" : [ "Pre-order" ],
        "operationId" : "delete_pre_order",
        "parameters" : [ {
          "name" : "pre_order_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/result"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/partners/favourite" : {
      "get" : {
        "summary" : "An overview of favorite partners. | Use in WF: none",
        "tags" : [ "User" ],
        "operationId" : "get_user_favourite_partners",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/partner_search_detail_response"
            }
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/partners/full_search" : {
      "get" : {
        "summary" : "Full text search of partners. | Use in WF: U1, U7, AU2, AU5, AU5.1",
        "tags" : [ "Partner" ],
        "operationId" : "get_partners_full_text_search",
        "parameters" : [ {
          "name" : "text",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "category_id",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "example: category_id=1&category_id=2"
        }, {
          "name" : "gps_latitude",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "gps_longitude",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "distance",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "products",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "String value can be list of product's ids separated by commastring. For example: \"9023,9024\"."
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/partner_search_detail_response"
            }
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/partners/quick_search" : {
      "get" : {
        "summary" : "Quick text search of partners. | Use in WF: Global menu",
        "tags" : [ "Partner" ],
        "operationId" : "get_partners_quick_text_search",
        "parameters" : [ {
          "name" : "text",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/partner_search_detail_response"
            }
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/products" : {
      "get" : {
        "summary" : "List of products. (dynamic filter) | Use in WF: U1, U7 [codelist]",
        "tags" : [ "Product" ],
        "operationId" : "get_products",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/products_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/categories" : {
      "get" : {
        "summary" : "List of categories. (dynamic filter) | Use in WF: U1, U7 [codelist]",
        "tags" : [ "Category" ],
        "operationId" : "get_categories",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/categories_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/modules" : {
      "get" : {
        "summary" : "A list of modules that are accessible to user. | Use in WF: U6",
        "tags" : [ "User" ],
        "operationId" : "get_users_modules",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/modules_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/news" : {
      "get" : {
        "summary" : "A list of news for user. | Use in WF: U1",
        "tags" : [ "User" ],
        "operationId" : "get_users_news",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/user_news_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/news/{news_id}" : {
      "get" : {
        "summary" : "A detail of news. | Use in WF: U1",
        "tags" : [ "User" ],
        "operationId" : "get_users_news_by_id",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "news_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/news"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/actions" : {
      "get" : {
        "summary" : "A list of events and discounts for user. | Use in WF: U5",
        "tags" : [ "User" ],
        "operationId" : "get_users_actions",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/actions_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/news" : {
      "get" : {
        "summary" : "An overview of all news. (dynamic filter) | Use in WF: U5",
        "tags" : [ "New" ],
        "operationId" : "get_news",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/news_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}" : {
      "put" : {
        "summary" : "User actualisation. | Use in WF: U3",
        "tags" : [ "User" ],
        "operationId" : "put_user",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/user"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/result_save"
              }
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/reset_password" : {
      "post" : {
        "summary" : "Changing user logins and password with confirmation. | Use in WF: U3, AU1.3",
        "tags" : [ "User" ],
        "operationId" : "put_clogin_password",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/login_password"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/cards/{card_id}/pin" : {
      "post" : {
        "summary" : "Changing the user PIN is used specifically for cafeterias. | Use in WF: U3, AU1.4",
        "tags" : [ "User" ],
        "operationId" : "post_user_card_pin",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "card_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/pin"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/cards/{card_id}/pin" : {
      "post" : {
        "summary" : "Change the PIN on the card. | Use in WF: U2",
        "tags" : [ "Card" ],
        "operationId" : "put_card_pin",
        "parameters" : [ {
          "name" : "card_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/pin"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/puk" : {
      "post" : {
        "summary" : "Changing the user's security password. | Use in WF: U3, AU4.5",
        "tags" : [ "User" ],
        "operationId" : "put_user_puk",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/puk"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/messages" : {
      "put" : {
        "summary" : "Insert message with volatile attachment. (dynamic filter) | Use in WF: Global",
        "tags" : [ "Message" ],
        "operationId" : "put_messages_info",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/message"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/result_save"
              }
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/surveys" : {
      "get" : {
        "summary" : "Overview of user surveys. Survey has to be valid (valid from - valid to). The list by user. If the user has filled in the survey, is no longer displayed. | Use in WF: (none)",
        "tags" : [ "User" ],
        "operationId" : "get_user_surveys",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/surveys_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/surveys/{survey_id}" : {
      "put" : {
        "summary" : "Filling the poll by the user. | Use in WF: (none)",
        "tags" : [ "User" ],
        "operationId" : "put_user_survey",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "survey_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/survey_item"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/result_save"
              }
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/my_reward/pdf" : {
      "get" : {
        "summary" : "Returns pdf of my rewards. | Use in WF: (none)",
        "tags" : [ "User" ],
        "operationId" : "get_user_my_reward_pdf",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/file"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/organization_units" : {
      "get" : {
        "summary" : "An overview of the organizational structure can also be filtered by clientId. (dynamic filter) | Use in WF: (none, filter: client_id)",
        "tags" : [ "Organization-unit" ],
        "operationId" : "get_organization_units",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/organization_unit_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/organization_units/{organization_unit_id}/users" : {
      "get" : {
        "summary" : "A list of people assigned to the organizational unit. | Use in WF: (none, filter: client_id)",
        "tags" : [ "Organization-unit" ],
        "operationId" : "get_organization_units_users",
        "parameters" : [ {
          "name" : "organization_unit_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/organization_unit_users_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/cashback_partners" : {
      "get" : {
        "summary" : "Partner overview for cashback, standard filtering. (dynamic filter) | Use in WF: (none)",
        "tags" : [ "Cashback-partner" ],
        "operationId" : "get_cashback_partners",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/cashbacks_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/auctions" : {
      "get" : {
        "summary" : "Overview of auctions with standard filtering, for example, by clientId. | Use in WF: (none, filter: for_all == true OR for_clients.contains(client_id))",
        "tags" : [ "Auction" ],
        "operationId" : "get_auctions",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/auction_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/auctions/{auction_id}" : {
      "get" : {
        "summary" : "Detail of auction. | Use in WF: (none)",
        "tags" : [ "Auction" ],
        "operationId" : "get_auction",
        "parameters" : [ {
          "name" : "auction_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/auction_detail"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/auctions/{auction_id}/bidding" : {
      "get" : {
        "summary" : "A list of bids for the auction, sorted by the latest bid of the largest. | Use in WF: (none)",
        "tags" : [ "Auction" ],
        "operationId" : "get_auction_bidding",
        "parameters" : [ {
          "name" : "auction_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/biddings_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      },
      "post" : {
        "summary" : "Bid over the auction. | Use in WF: (none)",
        "tags" : [ "Auction" ],
        "operationId" : "post_auction_bidding",
        "parameters" : [ {
          "name" : "auction_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/bidding_body"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/benefits" : {
      "get" : {
        "summary" : "Overview of benefits. (dynamic filter) | Use in WF: U6.1 (filter: client_id = value)",
        "tags" : [ "Benefit" ],
        "operationId" : "get_benefits",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/benefits_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/benefits/{benefit_id}" : {
      "get" : {
        "summary" : "Detail of benefit. | Use in WF: (none)",
        "tags" : [ "Benefit" ],
        "operationId" : "get_benefit",
        "parameters" : [ {
          "name" : "benefit_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/benefit"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      },
      "put" : {
        "summary" : "Order of internal benefit. | Use in WF: (none)",
        "tags" : [ "Benefit" ],
        "operationId" : "put_benefit",
        "parameters" : [ {
          "name" : "benefit_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/benefit_body"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/baskets" : {
      "get" : {
        "summary" : "Basket list, filter by class i filter by userId. The basket also has the status of being opened or sent. (dynamic filter) | Use in WF: U7.3 (filter: user_id = value AND state = 1)",
        "tags" : [ "Basket" ],
        "operationId" : "get_baskets",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/baskets_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/baskets/{basket_id}/basket_items" : {
      "get" : {
        "summary" : "List of items in the basket. | Use in WF: U7.3 (filter: state == 1)",
        "tags" : [ "Basket" ],
        "operationId" : "get_basket_items",
        "parameters" : [ {
          "name" : "basket_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/basket_items_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/baskets/{basket_id}/confirmation" : {
      "post" : {
        "summary" : "Confirmation of the basket. | Use in WF: U7.3",
        "tags" : [ "Basket" ],
        "operationId" : "post_basket_confirmation",
        "parameters" : [ {
          "name" : "basket_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/result"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/baskets/{basket_id}" : {
      "delete" : {
        "summary" : "Clear the basket. | Use in WF: U7.3",
        "tags" : [ "Basket" ],
        "operationId" : "delete_basket",
        "parameters" : [ {
          "name" : "basket_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/result"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/basket_items/{basket_item_id}" : {
      "put" : {
        "summary" : "Change item in basket (quantity). | Use in WF: U7.3",
        "tags" : [ "Basket-item" ],
        "operationId" : "put_basket_item",
        "parameters" : [ {
          "name" : "basket_item_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/quantity_body"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      },
      "delete" : {
        "summary" : "Remove item from the basket. | Use in WF: U7.3",
        "tags" : [ "Basket-item" ],
        "operationId" : "delete_basket_item",
        "parameters" : [ {
          "name" : "basket_item_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/result"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/partners/{partner_id}" : {
      "get" : {
        "summary" : "Detail of the partner. | Use in WF: U7.3, AU5.1.1, AU5.2.1",
        "tags" : [ "Partner" ],
        "operationId" : "get_partner",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/partner_detail"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/partners/{partner_id}/benefits" : {
      "get" : {
        "summary" : "List of partners benefits. | Use in WF: U7.3 (filter: state == 1)",
        "tags" : [ "Partner" ],
        "operationId" : "get_partner_benefits",
        "parameters" : [ {
          "name" : "partner_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/partner_benefits_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/benefits/{benefit_id}/order" : {
      "post" : {
        "summary" : "List of partners benefit. | Use in WF: U7.2, AU3.1, AU3.2",
        "tags" : [ "Benefit" ],
        "operationId" : "post_benefit_order",
        "parameters" : [ {
          "name" : "benefit_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/benefit_order_body"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/non_contractual_billings" : {
      "get" : {
        "summary" : "Get list of non-contractual billing. | Use in WF: none",
        "tags" : [ "non-contractual-billings" ],
        "operationId" : "get_non_contractual_billings_list",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/non_contractual_billings_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/non_contractual_billings/{non_contractual_billing_id}" : {
      "get" : {
        "summary" : "Get data of non-contractual billing. | Use in WF: none",
        "tags" : [ "non-contractual-billings" ],
        "operationId" : "get_non_contractual_billings",
        "parameters" : [ {
          "name" : "non_contractual_billing_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/non_contractual_billings"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      },
      "put" : {
        "summary" : "Insert of non-contractual billing. | Use in WF: none",
        "tags" : [ "non-contractual-billings" ],
        "operationId" : "put_non_contractual_billings",
        "parameters" : [ {
          "name" : "non_contractual_billing_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/non_contractual_billings_detail"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/non_contractual_billings/{non_contractual_billing_id}/confirmation" : {
      "post" : {
        "summary" : "Confirmaton of non-contractual billing. | Use in WF: none",
        "tags" : [ "non-contractual-billings" ],
        "operationId" : "post_non_contractual_billings_confirmation",
        "parameters" : [ {
          "name" : "non_contractual_billing_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/non_contractual_billings/{non_contractual_billing_id}/cancel" : {
      "post" : {
        "summary" : "Cancel confirmmaton of non-contractual billing. | Use in WF: none",
        "tags" : [ "non-contractual-billings" ],
        "operationId" : "post_non_contractual_billings_cancel",
        "parameters" : [ {
          "name" : "non_contractual_billing_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/partners/validation" : {
      "post" : {
        "summary" : "Validation of the Companys ID number against ARES, Justice, ... | Use in WF: U4.1",
        "tags" : [ "Partner" ],
        "operationId" : "post_partner_validation",
        "parameters" : [ {
          "name" : "registration_identification",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/partner_validation"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/categories/csp" : {
      "get" : {
        "summary" : "CSP codes of categories. | Use in WF: ",
        "tags" : [ "Category" ],
        "operationId" : "get_categories_csp",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/csp_response"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/partners/{partner_id}/products/{product_id}/available_amount" : {
      "get" : {
        "summary" : "Obtaining a possible amount for drawing on a specific product with a particular partner. | Use in WF: ",
        "tags" : [ "User" ],
        "operationId" : "get_users_partners_products_available_amount",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "partner_id",
          "in" : "path",
          "type" : "integer",
          "required" : true
        }, {
          "name" : "product_id",
          "in" : "path",
          "type" : "integer",
          "required" : true
        }, {
          "name" : "account_id",
          "in" : "query",
          "type" : "integer",
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "type" : "integer",
              "example" : 1500
            }
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/users/{user_id}/new_partner" : {
      "post" : {
        "summary" : "Request to create a new partner. | Use in WF: ",
        "tags" : [ "User" ],
        "operationId" : "post_user_new_partner",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/new_partner"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/users/{user_id}/benefits/{benefit_id}/available_amount" : {
      "get" : {
        "summary" : "Obtaining a possible amount for drawing on a specific Benefit. | Use in WF: ",
        "tags" : [ "User" ],
        "operationId" : "get_users_benefits_available_amount",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "benefit_id",
          "in" : "path",
          "type" : "integer",
          "required" : true
        }, {
          "name" : "account_id",
          "in" : "query",
          "type" : "integer",
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "type" : "integer",
              "example" : 1500
            }
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/users/{user_id}/image" : {
      "get" : {
        "summary" : "Get image of specific user. | Use in WF: ",
        "tags" : [ "User" ],
        "operationId" : "get_user_image",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "width",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "height",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/file"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      },
      "post" : {
        "summary" : "Post image to specific user. | Use in WF: ",
        "tags" : [ "User" ],
        "operationId" : "post_user_image",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/file"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/images/{image_id}" : {
      "get" : {
        "summary" : "Get image. | Use in WF: ",
        "tags" : [ "Image" ],
        "operationId" : "get_image",
        "parameters" : [ {
          "name" : "image_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "width",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "crop",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/file"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/images/{image_id}/resize" : {
      "post" : {
        "summary" : "Resize image. | Use in WF: ",
        "tags" : [ "Image" ],
        "operationId" : "post_image_resize",
        "parameters" : [ {
          "name" : "image_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "width",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "height",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/file"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    },
    "/images/{image_id}/crop" : {
      "post" : {
        "summary" : "Crop image. | Use in WF: ",
        "tags" : [ "Image" ],
        "operationId" : "post_image_crop",
        "parameters" : [ {
          "name" : "image_id",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "x",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "y",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "width",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "height",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/file"
            }
          },
          "400" : {
            "description" : "Error"
          }
        }
      }
    }
  },
  "definitions" : {
    "empty_body" : {
      "properties" : {
        "body" : {
          "type" : "string",
          "format" : "byte"
        }
      }
    },
    "pagination" : {
      "properties" : {
        "object_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1
        },
        "per_page" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10
        }
      }
    },
    "result" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "integer"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "result_save" : {
      "type" : "object",
      "allOf" : [ {
        "$ref" : "#/definitions/result"
      }, {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          }
        }
      } ]
    },
    "file" : {
      "required" : [ "file_name", "byte_data" ],
      "properties" : {
        "file_name" : {
          "type" : "string",
          "example" : "test.pdf"
        },
        "byte_data" : {
          "type" : "string",
          "format" : "byte",
          "description" : "BASE64",
          "example" : "116cfgnbfg616fgnsXb56"
        }
      }
    },
    "user_dashboard" : {
      "required" : [ "user_id", "user_name", "user_surname", "cash_allowed" ],
      "properties" : {
        "user_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "user_name" : {
          "type" : "string",
          "example" : "Jan"
        },
        "user_surname" : {
          "type" : "string",
          "example" : "Novak"
        },
        "user_salutation" : {
          "type" : "string",
          "example" : "lenoch"
        },
        "cash_allowed" : {
          "type" : "boolean",
          "example" : false
        }
      }
    },
    "notification" : {
      "required" : [ "notification_id", "date" ],
      "properties" : {
        "notification_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "date" : {
          "type" : "string",
          "format" : "datetime",
          "example" : "2018-02-06 12:00"
        },
        "description" : {
          "type" : "string",
          "example" : "Popis..."
        }
      }
    },
    "transaction_short" : {
      "required" : [ "transaction_number", "date" ],
      "properties" : {
        "transaction_number" : {
          "type" : "string",
          "example" : "1236789"
        },
        "date" : {
          "type" : "string",
          "format" : "timestamp",
          "example" : "2009-06-15T13:45:30.6170000"
        },
        "description" : {
          "type" : "string",
          "example" : "Popis..."
        },
        "amount" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 100.5
        },
        "account_validity_to" : {
          "type" : "string",
          "format" : "datetime",
          "example" : "2009-06-15 13:45"
        }
      }
    },
    "account" : {
      "required" : [ "account_id", "current_balance", "name", "point_account" ],
      "properties" : {
        "account_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "current_balance" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 100.5
        },
        "name" : {
          "type" : "string",
          "example" : "ESTRAVENKA - 3000"
        },
        "point_account" : {
          "type" : "boolean",
          "example" : true
        },
        "cards" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/card"
          }
        },
        "last_charge" : {
          "$ref" : "#/definitions/transaction_short"
        },
        "last_drawdown" : {
          "$ref" : "#/definitions/transaction_short",
          "description" : "Null value can be returned."
        },
        "sub_accounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/sub_account"
          }
        }
      }
    },
    "sub_account" : {
      "required" : [ "sub_account_id", "name", "value", "valid_from" ],
      "properties" : {
        "sub_account_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "SubAccount123"
        },
        "value" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 100.5
        },
        "validity_from" : {
          "type" : "string",
          "format" : "datetime",
          "example" : "2009-06-15 13:45"
        },
        "validity_to" : {
          "type" : "string",
          "format" : "datetime",
          "example" : "2009-06-15 13:45"
        }
      }
    },
    "card" : {
      "required" : [ "card_id", "number_short", "user_id", "valid_from", "type", "state" ],
      "properties" : {
        "card_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "valid_from" : {
          "type" : "string",
          "format" : "timestamp",
          "example" : "2009-06-15T13:45:30.6170000"
        },
        "valid_to" : {
          "type" : "string",
          "format" : "timestamp",
          "example" : "2010-03-15T13:45:30.6170000"
        },
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "1 = Benefit; 2 = E-Meal vouchers; 3 = Cash card; 4 = Benefit + E-Meal card; 5 = Alive"
        },
        "state" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "1 = Active; 2 = Blocked"
        },
        "number_short" : {
          "type" : "string",
          "example" : "0800"
        },
        "user_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "user" : {
          "$ref" : "#/definitions/user_simple"
        }
      }
    },
    "meal_card_transfer_body" : {
      "required" : [ "percent" ],
      "properties" : {
        "percent" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 123.5
        }
      }
    },
    "transfer_request_body" : {
      "required" : [ "amount", "account_number", "bank_code" ],
      "properties" : {
        "amount" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 123.5
        },
        "account_number" : {
          "type" : "string",
          "example" : "111-1478523690"
        },
        "bank_code" : {
          "type" : "string",
          "example" : "0800"
        }
      }
    },
    "transaction_data" : {
      "required" : [ "transaction_number", "date", "amount", "status", "product_id", "type", "account_id" ],
      "properties" : {
        "transaction_number" : {
          "type" : "string",
          "example" : "986408"
        },
        "date" : {
          "type" : "string",
          "format" : "timestamp",
          "example" : "2009-06-15T13:45:30.6170000"
        },
        "partner_name" : {
          "type" : "string",
          "example" : "Partner 123"
        },
        "description" : {
          "type" : "string",
          "example" : "Popisek"
        },
        "amount" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 123.5
        },
        "status" : {
          "type" : "integer",
          "example" : 1,
          "description" : "1 = Reservation; 2 = Completed; 3 = Not applied; 4 = Cancel"
        },
        "product_id" : {
          "type" : "integer",
          "example" : 1,
          "description" : "1 = Cafeterie; 2 = E-Meal card; 3 = Cash"
        },
        "type" : {
          "type" : "integer",
          "example" : 1,
          "description" : "1 = Buying a Benefit; 2 = Import points; 3 = Cash; 4 = Non-Conventional Authorization; 5 = Points conversion; 6 = Postage"
        },
        "account_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        }
      }
    },
    "user_transaction_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/transaction_data"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "product" : {
      "required" : [ "product_id", "name" ],
      "properties" : {
        "product_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "Název XYZ"
        },
        "order" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1
        }
      }
    },
    "products_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/product"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "category" : {
      "required" : [ "category_id", "name" ],
      "properties" : {
        "category_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "parent_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "Název Z"
        }
      }
    },
    "module" : {
      "required" : [ "module_id", "name" ],
      "properties" : {
        "module_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "Název X"
        }
      }
    },
    "news" : {
      "required" : [ "news_id", "date", "name" ],
      "properties" : {
        "news_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "date" : {
          "type" : "string",
          "format" : "timestamp",
          "example" : "2010-03-15T13:45:30.6170000"
        },
        "name" : {
          "type" : "string",
          "example" : "Název X"
        },
        "note" : {
          "type" : "string",
          "example" : "text..."
        },
        "perex" : {
          "type" : "string",
          "example" : "perex..."
        },
        "readed" : {
          "type" : "boolean",
          "example" : false
        },
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "1 - New; 2 - Information; 3 - Events; 4 - Order"
        },
        "documents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/document_item"
          }
        }
      }
    },
    "login_password" : {
      "required" : [ "login", "password_old", "password_new" ],
      "properties" : {
        "login" : {
          "type" : "string",
          "example" : "uzivatel"
        },
        "password_old" : {
          "type" : "string",
          "example" : "ux5FGhztel&_df46"
        },
        "password_new" : {
          "type" : "string",
          "example" : "FGhux56&66_dfu465"
        }
      }
    },
    "pin" : {
      "required" : [ "pin_old", "pin_new" ],
      "properties" : {
        "pin_old" : {
          "type" : "string",
          "example" : "8546"
        },
        "pin_new" : {
          "type" : "string",
          "example" : "9573"
        }
      }
    },
    "puk" : {
      "required" : [ "puk" ],
      "properties" : {
        "puk" : {
          "type" : "string",
          "example" : "6463"
        }
      }
    },
    "pre_order" : {
      "required" : [ "pre_order_id", "user_id", "internal_benefit_id", "name", "year" ],
      "properties" : {
        "pre_order_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "user_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1234
        },
        "internal_benefit_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 23
        },
        "name" : {
          "type" : "string",
          "example" : "Název XYZ"
        },
        "year" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2018
        },
        "months" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "required" : [ "id", "name" ],
            "properties" : {
              "key" : {
                "type" : "integer",
                "format" : "int32",
                "example" : 1
              },
              "value" : {
                "$ref" : "#/definitions/month_value"
              }
            }
          }
        }
      }
    },
    "month_value" : {
      "required" : [ "value", "value_min", "value_max", "checked" ],
      "properties" : {
        "value" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 123.5
        },
        "value_min" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 123.5
        },
        "value_max" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 123.5
        },
        "checked" : {
          "type" : "boolean",
          "example" : false
        }
      }
    },
    "partner" : {
      "required" : [ "partner_id", "name" ],
      "properties" : {
        "partner_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "Název X"
        },
        "description" : {
          "type" : "string",
          "example" : "Popis..."
        },
        "image_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 23
        }
      }
    },
    "partner_search_detail" : {
      "required" : [ "partner_id", "name" ],
      "properties" : {
        "partner_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "Název X"
        },
        "image_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 23
        },
        "location" : {
          "$ref" : "#/definitions/location"
        },
        "address" : {
          "$ref" : "#/definitions/address"
        },
        "categories" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/category"
          }
        },
        "products" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/product_item"
          }
        }
      }
    },
    "new_partner" : {
      "required" : [ "registration_number", "email", "contact", "city", "street", "post_code", "name", "phone", "web" ],
      "properties" : {
        "registration_number" : {
          "type" : "string",
          "example" : "123456789"
        },
        "email" : {
          "type" : "string",
          "format" : "email",
          "example" : "novak@email.cz"
        },
        "contact" : {
          "type" : "string",
          "example" : "Jan Novák"
        },
        "city" : {
          "type" : "string",
          "example" : "Benešov"
        },
        "street" : {
          "type" : "string",
          "example" : "Na Bezděkově"
        },
        "post_code" : {
          "type" : "string",
          "example" : "25601"
        },
        "name" : {
          "type" : "string",
          "example" : "Jan Novák"
        },
        "note" : {
          "type" : "string",
          "example" : "Description..."
        },
        "phone" : {
          "type" : "string",
          "format" : "tel",
          "example" : "+420 777 777 777"
        },
        "web" : {
          "type" : "string",
          "example" : "www.xyz.cz"
        }
      }
    },
    "action_detail" : {
      "required" : [ "action_id", "name" ],
      "properties" : {
        "action_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "Název X"
        },
        "description" : {
          "type" : "string",
          "example" : "Popis..."
        },
        "image_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 23
        }
      }
    },
    "message" : {
      "required" : [ "user_id", "text" ],
      "properties" : {
        "user_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "text" : {
          "type" : "string",
          "example" : "text ..."
        },
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "1 - Ordinary message (contact, ..); 2 - Payment issue; 3 - Problem when ordering"
        },
        "file" : {
          "$ref" : "#/definitions/file"
        }
      }
    },
    "news_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/news_item"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "news_item" : {
      "required" : [ "news_id", "name" ],
      "properties" : {
        "news_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "client_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 23
        },
        "name" : {
          "type" : "string",
          "example" : "Nazev X"
        },
        "date_from" : {
          "type" : "string",
          "format" : "datetime",
          "example" : "2018-02-06 12:00"
        },
        "date_to" : {
          "type" : "string",
          "format" : "datetime",
          "example" : "2018-02-06 12:00"
        },
        "description" : {
          "type" : "string",
          "example" : "Popis..."
        },
        "image_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 23
        },
        "perex" : {
          "type" : "string",
          "example" : "perex..."
        },
        "readed" : {
          "type" : "boolean",
          "example" : false
        }
      }
    },
    "user" : {
      "required" : [ "user_id", "organization_unit", "name", "surname", "internal_code", "login", "role_id", "generate_cart", "blocked", "dont_import_credit", "alive_licence", "valid_date_from", "valid_date_to", "send_information_about_accounts_changes_by_email", "send_information_about_accounts_changes_by_sms", "send_information_about_accounts_by_month_by_email", "send_information_about_accounts_by_month_by_sms", "send_information_about_orders_by_email", "send_information_about_orders_by_sms", "send_news_by_email", "send_news_by_sms", "language", "is_work_email_default", "client" ],
      "properties" : {
        "user_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "Jan"
        },
        "surname" : {
          "type" : "string",
          "example" : "Novák"
        },
        "internal_code" : {
          "type" : "string",
          "example" : "123456"
        },
        "work_email" : {
          "type" : "string",
          "format" : "email",
          "example" : "novak@email.cz"
        },
        "private_email" : {
          "type" : "string",
          "format" : "email",
          "example" : "novak@email.cz"
        },
        "phone" : {
          "type" : "string",
          "format" : "tel",
          "example" : "+420 777 777 777"
        },
        "birthdate" : {
          "type" : "string",
          "format" : "date",
          "example" : "2018-02-06"
        },
        "login" : {
          "type" : "string",
          "example" : "JanNovak"
        },
        "address" : {
          "$ref" : "#/definitions/address"
        },
        "bussines_place_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 23
        },
        "role_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3
        },
        "organization_unit" : {
          "$ref" : "#/definitions/organization_unit"
        },
        "generate_cart" : {
          "type" : "boolean",
          "example" : false
        },
        "blocked" : {
          "type" : "boolean",
          "example" : false
        },
        "dont_import_credit" : {
          "type" : "boolean",
          "example" : false
        },
        "alive_licence" : {
          "type" : "boolean",
          "example" : false
        },
        "valid_date_from" : {
          "type" : "string",
          "format" : "datetime",
          "example" : "2018-02-06 12:00"
        },
        "valid_date_to" : {
          "type" : "string",
          "format" : "datetime",
          "example" : "2018-02-06 12:00"
        },
        "employment_begin" : {
          "type" : "string",
          "format" : "datetime",
          "example" : "2018-02-06 12:00"
        },
        "employment_end" : {
          "type" : "string",
          "format" : "datetime",
          "example" : "2018-02-06 12:00"
        },
        "send_information_about_accounts_changes_by_email" : {
          "type" : "boolean",
          "example" : false
        },
        "send_information_about_accounts_changes_by_sms" : {
          "type" : "boolean",
          "example" : false
        },
        "send_information_about_accounts_by_month_by_email" : {
          "type" : "boolean",
          "example" : false
        },
        "send_information_about_accounts_by_month_by_sms" : {
          "type" : "boolean",
          "example" : false
        },
        "send_information_about_orders_by_email" : {
          "type" : "boolean",
          "example" : false
        },
        "send_information_about_orders_by_sms" : {
          "type" : "boolean",
          "example" : false
        },
        "send_news_by_email" : {
          "type" : "boolean",
          "example" : false
        },
        "send_news_by_sms" : {
          "type" : "boolean",
          "example" : false
        },
        "language" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "1 - CZ, 2-EN"
        },
        "puk" : {
          "type" : "string",
          "example" : "21826"
        },
        "percent_transfer" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 1.5
        },
        "is_work_email_default" : {
          "type" : "boolean",
          "example" : false
        },
        "mobile" : {
          "type" : "string",
          "format" : "tel",
          "example" : "+420 777 777 777"
        },
        "client_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        }
      }
    },
    "survey_item" : {
      "required" : [ "survey_id", "name", "valid_from", "valid_to", "client_id" ],
      "properties" : {
        "survey_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "XYZ"
        },
        "valid_from" : {
          "type" : "string",
          "format" : "timestamp",
          "example" : "2009-06-15T13:45:30.6170000"
        },
        "valid_to" : {
          "type" : "string",
          "format" : "timestamp",
          "example" : "2010-03-15T13:45:30.6170000"
        },
        "client_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "description" : {
          "type" : "string",
          "example" : "Description..."
        }
      }
    },
    "question_item" : {
      "required" : [ "question_id", "answer_values" ],
      "properties" : {
        "question_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "answer_values" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "X"
          }
        }
      }
    },
    "organization_unit" : {
      "required" : [ "organization_unit_id", "name", "client_id" ],
      "properties" : {
        "organization_unit_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "Nazev X"
        },
        "description" : {
          "type" : "string",
          "example" : "Popis..."
        },
        "client_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        }
      }
    },
    "organization_unit_user" : {
      "required" : [ "user_id", "surname", "name" ],
      "properties" : {
        "user_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "Jan"
        },
        "surname" : {
          "type" : "string",
          "example" : "Novák"
        },
        "work_email" : {
          "type" : "string",
          "format" : "email",
          "example" : "novak@email.cz"
        },
        "phone" : {
          "type" : "string",
          "format" : "tel",
          "example" : "+420 777 777 777"
        }
      }
    },
    "organization_unit_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/organization_unit"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "cashback" : {
      "required" : [ "cashback_id", "name", "provision_min", "provision_max" ],
      "properties" : {
        "cashback_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "Nazev X"
        },
        "description" : {
          "type" : "string",
          "example" : "Popis..."
        },
        "provision_min" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 100.5
        },
        "provision_max" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 100.5
        },
        "image_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "link" : {
          "type" : "string",
          "example" : "www.xyz.cz"
        }
      }
    },
    "cashbacks_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/cashback"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "auction_item" : {
      "required" : [ "auction_id", "name", "for_all" ],
      "properties" : {
        "auction_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "Nazev X"
        },
        "description" : {
          "type" : "string",
          "example" : "Popis..."
        },
        "image_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "for_all" : {
          "type" : "boolean",
          "example" : false
        },
        "for_clients" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 123
          }
        }
      }
    },
    "auction_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/auction_item"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "auction_detail" : {
      "required" : [ "auction_id", "name", "valid_from", "valid_to", "start_value" ],
      "properties" : {
        "auction_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "Nazev X"
        },
        "description" : {
          "type" : "string",
          "example" : "Popis..."
        },
        "image_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "valid_from" : {
          "type" : "string",
          "format" : "datetime",
          "example" : "2018-02-06 12:00"
        },
        "valid_to" : {
          "type" : "string",
          "format" : "datetime",
          "example" : "2018-02-06 12:00"
        },
        "start_value" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 100.5
        }
      }
    },
    "bidding_item" : {
      "required" : [ "bidding_id", "name", "surname", "date", "bidding" ],
      "properties" : {
        "bidding_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "Jan"
        },
        "surname" : {
          "type" : "string",
          "example" : "Novák"
        },
        "date" : {
          "type" : "string",
          "format" : "datetime",
          "example" : "2018-02-06 12:00"
        },
        "bidding" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 100.5
        }
      }
    },
    "bidding_body" : {
      "required" : [ "user_id", "value" ],
      "properties" : {
        "user_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "value" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 100.5
        }
      }
    },
    "benefit_item" : {
      "required" : [ "benefit_id", "name", "partner_id" ],
      "properties" : {
        "benefit_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "Nazev X"
        },
        "description" : {
          "type" : "string",
          "example" : "Popis..."
        },
        "image_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 23
        },
        "partner_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 23
        }
      }
    },
    "benefits_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/benefit_item"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "partner_benefits_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/benefit"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "benefit_body" : {
      "required" : [ "benefit_id", "price", "quantity" ],
      "properties" : {
        "benefit_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "price" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 100.5
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2
        }
      }
    },
    "basket" : {
      "required" : [ "basket_id", "user_id", "amount", "number_of_items", "state" ],
      "properties" : {
        "basket_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "user_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 23
        },
        "amount" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 100.5
        },
        "number_of_items" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2
        },
        "state" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "1 = Developed; 2 = Posted; 3 = Canceled"
        }
      }
    },
    "baskets_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/basket"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "basket_item" : {
      "required" : [ "basket_item_id", "basket_id", "benefit", "price", "quantity", "state" ],
      "properties" : {
        "basket_item_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "basket_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "benefit" : {
          "$ref" : "#/definitions/benefit_item"
        },
        "price" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 100.5
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2
        },
        "state" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "1 = Included in the basket; 3 = Canceled"
        }
      }
    },
    "quantity_body" : {
      "required" : [ "user_id", "price", "quantity" ],
      "properties" : {
        "user_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "benefit_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "branch_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "price" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 100.5
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2
        }
      }
    },
    "benefit" : {
      "required" : [ "benefit_id", "name", "type", "partner_id" ],
      "properties" : {
        "benefit_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "partner_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 23
        },
        "name" : {
          "type" : "string",
          "example" : "Nazev X"
        },
        "description" : {
          "type" : "string",
          "example" : "Popis..."
        },
        "description_order" : {
          "type" : "string",
          "example" : "Popis..."
        },
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "1 = Order from cafeterie; 2 = Contact"
        },
        "branches" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/branch"
          }
        },
        "benefit_price_items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/benefit_price_item"
          }
        }
      }
    },
    "branch" : {
      "required" : [ "branch_id", "name" ],
      "properties" : {
        "branch_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "Nazev X"
        }
      }
    },
    "benefit_price_item" : {
      "required" : [ "benefit_price_item_id", "name", "amount", "quantity", "amount_fixed", "quantity_fixed" ],
      "properties" : {
        "benefit_price_item_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 23
        },
        "name" : {
          "type" : "string",
          "example" : "Nazev X"
        },
        "amount" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 100.5
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2
        },
        "amount_fixed" : {
          "type" : "boolean",
          "example" : false
        },
        "quantity_fixed" : {
          "type" : "boolean",
          "example" : false
        }
      }
    },
    "benefit_order_body" : {
      "required" : [ "user_id", "branch_id", "benefit_item_id", "amount", "quantity" ],
      "properties" : {
        "user_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "branch_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "benefit_item_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 23
        },
        "amount" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 100.5
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2
        }
      }
    },
    "address" : {
      "required" : [ "town", "street", "zip_code" ],
      "properties" : {
        "town" : {
          "type" : "string",
          "example" : "Benešov"
        },
        "street" : {
          "type" : "string",
          "example" : "Nádražní 2000"
        },
        "zip_code" : {
          "type" : "string",
          "example" : "25601"
        }
      }
    },
    "address_gps" : {
      "required" : [ "gps_latitude", "gps_longitude" ],
      "allOf" : [ {
        "$ref" : "#/definitions/address"
      }, {
        "properties" : {
          "gps_latitude" : {
            "type" : "string",
            "example" : "23.2345"
          },
          "gps_longitude" : {
            "type" : "string",
            "example" : "23.2345"
          }
        }
      } ]
    },
    "partner_validation" : {
      "required" : [ "name", "registration_identification", "vat_identification", "address" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Nazev X"
        },
        "registration_identification" : {
          "type" : "string"
        },
        "vat_identification" : {
          "type" : "string"
        },
        "address" : {
          "$ref" : "#/definitions/address"
        }
      }
    },
    "location" : {
      "required" : [ "gps_latitude", "gps_longitude" ],
      "properties" : {
        "gps_latitude" : {
          "type" : "string",
          "example" : "23.2345"
        },
        "gps_longitude" : {
          "type" : "string",
          "example" : "23.2345"
        }
      }
    },
    "product_item" : {
      "required" : [ "product_id", "name" ],
      "properties" : {
        "product_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123,
          "description" : " 1 = monday; 2 = tuesday"
        },
        "name" : {
          "type" : "string",
          "example" : "Nazev X"
        },
        "image_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 23
        }
      }
    },
    "opening_period" : {
      "required" : [ "day_of_week", "time_from", "time_to" ],
      "properties" : {
        "day_of_week" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "0 - Sunday, 1 - Monday, 2 - Tuesday, 3 - Wednesday, 4 - Thursday, 5 - Friday, 6 - Saturday"
        },
        "time_from" : {
          "type" : "string",
          "example" : "12:53"
        },
        "time_to" : {
          "type" : "string",
          "example" : "12:35"
        }
      }
    },
    "equipment" : {
      "required" : [ "wifi", "summer_gardern", "boundary_outdoor_space", "other", "salon", "garden", "accepting_meal_ticket", "accepting_e_meal_card", "accepting_credit_cards", "accepting_online_benefits", "own_loyalty_program" ],
      "properties" : {
        "wifi" : {
          "type" : "boolean",
          "example" : false
        },
        "summer_gardern" : {
          "type" : "boolean",
          "example" : false
        },
        "boundary_outdoor_space" : {
          "type" : "boolean",
          "example" : false
        },
        "other" : {
          "type" : "boolean",
          "example" : false
        },
        "salon" : {
          "type" : "boolean",
          "example" : false
        },
        "garden" : {
          "type" : "boolean",
          "example" : false
        },
        "accepting_meal_ticket" : {
          "type" : "boolean",
          "example" : false
        },
        "accepting_e_meal_card" : {
          "type" : "boolean",
          "example" : false
        },
        "accepting_credit_cards" : {
          "type" : "boolean",
          "example" : true
        },
        "accepting_online_benefits" : {
          "type" : "boolean",
          "example" : true
        },
        "own_loyalty_program" : {
          "type" : "boolean",
          "example" : true
        }
      }
    },
    "service" : {
      "required" : [ "terrace", "reservation_online", "baby_friendly", "barrier_free", "private_events" ],
      "properties" : {
        "terrace" : {
          "type" : "boolean",
          "example" : false
        },
        "reservation_online" : {
          "type" : "boolean",
          "example" : false
        },
        "baby_friendly" : {
          "type" : "boolean",
          "example" : false
        },
        "barrier_free" : {
          "type" : "boolean",
          "example" : false
        },
        "private_events" : {
          "type" : "boolean",
          "example" : false
        }
      }
    },
    "availability" : {
      "required" : [ "parking", "parking_bicycle", "carriage", "takeaway", "food_delivery", "pets", "live_music", "smouking_area" ],
      "properties" : {
        "parking" : {
          "type" : "boolean",
          "example" : false
        },
        "parking_bicycle" : {
          "type" : "boolean",
          "example" : false
        },
        "carriage" : {
          "type" : "boolean",
          "example" : false
        },
        "takeaway" : {
          "type" : "boolean",
          "example" : false
        },
        "food_delivery" : {
          "type" : "boolean",
          "example" : false
        },
        "pets" : {
          "type" : "boolean",
          "example" : false
        },
        "live_music" : {
          "type" : "boolean",
          "example" : false
        },
        "smouking_area" : {
          "type" : "boolean",
          "example" : false
        }
      }
    },
    "partner_detail" : {
      "required" : [ "partner_id", "name" ],
      "properties" : {
        "partner_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "name" : {
          "type" : "string",
          "example" : "Nazev X"
        },
        "description" : {
          "type" : "string",
          "example" : "Popis..."
        },
        "phone" : {
          "type" : "string",
          "format" : "tel",
          "example" : "+420 777 777 777"
        },
        "email" : {
          "type" : "string",
          "format" : "email",
          "example" : "novak@email.cz"
        },
        "web" : {
          "type" : "string",
          "example" : "www.xyz.cz"
        },
        "location" : {
          "$ref" : "#/definitions/location"
        },
        "products" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/product_item"
          }
        },
        "categories" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/category"
          }
        },
        "opening_periods" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/opening_period"
          }
        },
        "equipment" : {
          "$ref" : "#/definitions/equipment"
        },
        "services" : {
          "$ref" : "#/definitions/service"
        },
        "availability" : {
          "$ref" : "#/definitions/availability"
        },
        "link_to_donappetit" : {
          "type" : "string",
          "example" : "www.xyz.cz"
        },
        "images" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 123
          }
        },
        "social_networks" : {
          "$ref" : "#/definitions/social_network"
        },
        "address" : {
          "$ref" : "#/definitions/address_gps"
        },
        "identification_number" : {
          "type" : "string",
          "example" : "9517534682",
          "description" : "IČO"
        },
        "vat_identification" : {
          "type" : "string",
          "example" : "123456789"
        }
      }
    },
    "user_news_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/news"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "partner_search_detail_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/partner_search_detail"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "non_contractual_billings_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/non_contractual_billings"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "non_contractual_billings" : {
      "required" : [ "non_contractual_billing_id", "date", "partner_name", "transaction_number", "amount", "state" ],
      "properties" : {
        "non_contractual_billing_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "date" : {
          "type" : "string",
          "format" : "datetime",
          "example" : "2018-02-06 12:00"
        },
        "partner_name" : {
          "type" : "string",
          "example" : "XYZ"
        },
        "transaction_number" : {
          "type" : "string",
          "example" : "123456789"
        },
        "amount" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 100.5
        },
        "state" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2,
          "description" : "1 - Received, 2 - Confirmed, 3 - Refused, 4 - Accepted, 5 - Paid"
        },
        "user_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        }
      }
    },
    "non_contractual_billings_detail" : {
      "required" : [ "non_contractual_billing_id", "registration_number", "city", "street", "partner_account_number", "variable_symbol", "partner_name", "amount", "card_number", "user_name", "client_name" ],
      "properties" : {
        "non_contractual_billing_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "registration_number" : {
          "type" : "string",
          "example" : "123456789"
        },
        "city" : {
          "type" : "string",
          "example" : "Benešov"
        },
        "street" : {
          "type" : "string",
          "example" : "Na Bezděkově"
        },
        "partner_account_number" : {
          "type" : "string",
          "example" : "123456789"
        },
        "variable_symbol" : {
          "type" : "string",
          "example" : "1234"
        },
        "partner_name" : {
          "type" : "string",
          "example" : "XYZ"
        },
        "amount" : {
          "type" : "number",
          "format" : "decimal",
          "example" : 100.5
        },
        "due_date" : {
          "type" : "string",
          "format" : "datetime",
          "example" : "2018-02-06 12:00"
        },
        "note" : {
          "type" : "string",
          "example" : "Poznámka..."
        },
        "phone" : {
          "type" : "string",
          "format" : "tel",
          "example" : "+420 777 777 777"
        },
        "email" : {
          "type" : "string",
          "format" : "email",
          "example" : "novak@email.cz"
        },
        "card_number" : {
          "type" : "string",
          "example" : "123456789"
        },
        "user_name" : {
          "type" : "string",
          "example" : "JanNovak"
        },
        "client_name" : {
          "type" : "string",
          "example" : "Jan Novák"
        }
      }
    },
    "csp" : {
      "required" : [ "csp_id", "name", "parent" ],
      "properties" : {
        "csp_id" : {
          "type" : "string",
          "example" : "101"
        },
        "name" : {
          "type" : "string",
          "example" : "XYZ"
        },
        "parent" : {
          "type" : "string",
          "example" : "100"
        }
      }
    },
    "csp_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/csp"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "social_network" : {
      "properties" : {
        "url_facebook" : {
          "type" : "string",
          "example" : "www.facebook.com/"
        },
        "url_twitter" : {
          "type" : "string",
          "example" : "www.twitter.com/"
        },
        "url_linkedin" : {
          "type" : "string",
          "example" : "www.linkedin.com/"
        },
        "url_google_plus" : {
          "type" : "string",
          "example" : "www.google.com/"
        },
        "url_pinterest" : {
          "type" : "string",
          "example" : "www.pinterest.com/"
        }
      }
    },
    "notifications_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/notification"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "cards_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/card"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "pre_orders_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/pre_order"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "categories_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/category"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "modules_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/module"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "actions_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/action_detail"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "surveys_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/survey_item"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "organization_unit_users_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/organization_unit_user"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "biddings_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/bidding_item"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "basket_items_response" : {
      "required" : [ "data", "pagination" ],
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/basket_item"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/pagination"
        }
      }
    },
    "user_simple" : {
      "required" : [ "user_id", "organization_unit_id", "business_place_id", "number", "surname", "name" ],
      "properties" : {
        "user_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "organization_unit_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "business_place_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "number" : {
          "type" : "string",
          "example" : "123"
        },
        "title_before" : {
          "type" : "string",
          "example" : "Ing."
        },
        "surname" : {
          "type" : "string",
          "example" : "Novák"
        },
        "name" : {
          "type" : "string",
          "example" : "Jan"
        },
        "title_after" : {
          "type" : "string",
          "example" : "Csc."
        },
        "client_id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        }
      }
    },
    "document_item" : {
      "required" : [ "document_id", "name", "is_directory", "creation_date" ],
      "properties" : {
        "document_id" : {
          "type" : "string",
          "example" : "3156651614-56146"
        },
        "name" : {
          "type" : "string",
          "example" : "XYZ"
        },
        "parent_id" : {
          "type" : "string",
          "example" : "1126516145-56146"
        },
        "is_directory" : {
          "type" : "boolean",
          "example" : false
        },
        "creation_date" : {
          "type" : "string",
          "format" : "datetime",
          "example" : "2009-06-15T13:45:30.6170000"
        },
        "file_length" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1235
        },
        "dictionary_path" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/Petr_Vesely/UP_Digital_User/1.0.0",
  "schemes" : [ "https" ]
}