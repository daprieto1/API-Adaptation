{
  "swagger" : "2.0",
  "info" : {
    "description" : "Documentación del api v2.1.1 de lavanapp",
    "version" : "2.1.1",
    "title" : "API LAVANAPP",
    "contact" : {
      "email" : "hola@lavanapp.com"
    }
  },
  "host" : "api.lavanapp.com",
  "basePath" : "/api/v211",
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/configuration" : {
      "get" : {
        "tags" : [ "configuration" ],
        "summary" : "Return the configuration detail of server",
        "parameters" : [ {
          "name" : "authorization",
          "in" : "header",
          "description" : "unauth_token/access_token o ningún token",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "platform",
          "in" : "query",
          "description" : "Plataforma desde la que se hace la solicitud",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "Versión de la plataforma",
          "required" : true,
          "type" : "string"
        } ],
        "security" : [ {
          "ApiKey" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "force_update", "min_order_amount", "currency", "token", "payment_methods", "custom_experience_incidence_type" ],
              "properties" : {
                "force_update" : {
                  "type" : "boolean"
                },
                "min_order_amount" : {
                  "type" : "string"
                },
                "currency" : {
                  "type" : "string"
                },
                "token" : {
                  "type" : "string"
                },
                "payment_methods" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "id", "name", "path_url", "img_name" ],
                    "properties" : {
                      "id" : {
                        "type" : "integer"
                      },
                      "name" : {
                        "type" : "string"
                      },
                      "path_url" : {
                        "type" : "string"
                      },
                      "img_name" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "custom_experience_incidence_type" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "id", "type", "imageUrl", "selectedImageUrl" ],
                    "properties" : {
                      "id" : {
                        "type" : "integer"
                      },
                      "type" : {
                        "type" : "string"
                      },
                      "imageUrl" : {
                        "type" : "string"
                      },
                      "selectedImageUrl" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              },
              "example" : {
                "force_update" : true,
                "min_order_amount" : "15",
                "currency" : "€",
                "token" : "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwYzUxMTQyYjVjNDhlZWZiODM1OWRmMmU4ZDM2YmQzNTczMmI3MGIwIiwiYWRtaW4iOmZhbHNlLCJjcmVhdGVkX29uIjoxNDc4MTc2NDMwLCJ0eXBlIjoidW5hdXRoIiwiZXhwIjoxOTk2NTcyODMwLCJleHBfc2Vzc2lvbiI6MTQ5NTQ1MjgzMH0.2oW9bdtULTIGZFWJ86qG-OxVlRiN-zAQ8UsI8m2Imhg",
                "payment_methods" : {
                  "id" : 1,
                  "name" : "Sipay",
                  "path_url" : "https://testing.lavanapp.com/img/android/",
                  "img_name" : "credit-card.png"
                },
                "custom_experience_incidence_type" : {
                  "id" : 1,
                  "name" : "Limpieza",
                  "imageUrl" : "https://testing.lavanapp.com/img/incidences-incons/icono-limpeza.svg",
                  "selectedImageUrl" : "https://testing.lavanapp.com/img/incidences-incons/icono-limpeza-azul.svg"
                }
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "080101" : {
                  "error_code" : "080101",
                  "error_msg" : "PLATFORM_NOT_FOUND",
                  "error_desc" : "Platform not found"
                },
                "080103" : {
                  "error_code" : "080103",
                  "error_msg" : "INCORRECT_VERSION",
                  "error_desc" : "Incorrect version"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/configuration/faq" : {
      "get" : {
        "tags" : [ "configuration" ],
        "summary" : "Return the faq",
        "parameters" : [ {
          "name" : "authorization",
          "in" : "header",
          "description" : "unauth_token/access_token",
          "required" : false,
          "type" : "string"
        } ],
        "security" : [ {
          "ApiKey" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "faqs" ],
              "properties" : {
                "faqs" : {
                  "type" : "object",
                  "properties" : {
                    "header" : {
                      "type" : "string"
                    },
                    "faq" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "required" : [ "title", "content" ],
                        "properties" : {
                          "title" : {
                            "type" : "string"
                          },
                          "content" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example" : {
                "faqs" : {
                  "header" : "Lavanapp",
                  "faq" : {
                    "title" : "¿Qué es Lavanapp?",
                    "content" : "<p>Lavanapp es la tintorería app. <p/>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "080101" : {
                  "error_code" : "080101",
                  "error_msg" : "PLATFORM_NOT_FOUND",
                  "error_desc" : "Platform not found"
                },
                "080103" : {
                  "error_code" : "080103",
                  "error_msg" : "INCORRECT_VERSION",
                  "error_desc" : "Incorrect version"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/configuration/tyc" : {
      "get" : {
        "tags" : [ "configuration" ],
        "summary" : "Return the terms and conditions",
        "parameters" : [ {
          "name" : "authorization",
          "in" : "header",
          "description" : "unauth_token/access_token",
          "required" : false,
          "type" : "string"
        } ],
        "security" : [ {
          "ApiKey" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "tyc" ],
              "properties" : {
                "tyc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "tyc" : "1. INTRODUCCIÓN <br><br> La contratación de los servicios a través del sitio web..."
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "080101" : {
                  "error_code" : "080101",
                  "error_msg" : "PLATFORM_NOT_FOUND",
                  "error_desc" : "Platform not found"
                },
                "080103" : {
                  "error_code" : "080103",
                  "error_msg" : "INCORRECT_VERSION",
                  "error_desc" : "Incorrect version"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/configuration/pdp" : {
      "get" : {
        "tags" : [ "configuration" ],
        "summary" : "Return the privacy policy",
        "parameters" : [ {
          "name" : "authorization",
          "in" : "header",
          "description" : "unauth_token/access_token",
          "required" : false,
          "type" : "string"
        } ],
        "security" : [ {
          "ApiKey" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "pdp" ],
              "properties" : {
                "pdp" : {
                  "type" : "string"
                }
              },
              "example" : {
                "pdp" : "La presente Política de Privacidad regula el tratamiento que PARAÍSO ALDEA, S.L. (en adelante, 'LAVANAPP', 'el Administrador de la Web' o 'nosotros')..."
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "080101" : {
                  "error_code" : "080101",
                  "error_msg" : "PLATFORM_NOT_FOUND",
                  "error_desc" : "Platform not found"
                },
                "080103" : {
                  "error_code" : "080103",
                  "error_msg" : "INCORRECT_VERSION",
                  "error_desc" : "Incorrect version"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/order/experience" : {
      "post" : {
        "tags" : [ "consumer experience" ],
        "summary" : "Insert consumer experience",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "Consumer experience",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/customExperienceBody"
          }
        } ],
        "security" : [ {
          "ApiKey" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "order_id" ],
              "properties" : {
                "order_id" : {
                  "type" : "integer"
                }
              },
              "example" : {
                "order_id" : 3141
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "080101" : {
                  "error_code" : "080101",
                  "error_msg" : "PLATFORM_NOT_FOUND",
                  "error_desc" : "Platform not found"
                },
                "080103" : {
                  "error_code" : "080103",
                  "error_msg" : "INCORRECT_VERSION",
                  "error_desc" : "Incorrect version"
                },
                "010802" : {
                  "error_code" : "010802",
                  "error_msg" : "ERROR_SAVING_EXPERIENCE",
                  "error_desc" : "No se ha podido guardar la encuesta."
                },
                "010803" : {
                  "error_code" : "010803",
                  "error_msg" : "INCORRECT_SCORE",
                  "error_desc" : "La puntuación debe ser un número comprendido entre le 1 y el 5."
                },
                "010804" : {
                  "error_code" : "010804",
                  "error_msg" : "INCORRECT_EXPERIENCE_INCIDENCE_FORMAT",
                  "error_desc" : "Se debe especificar un tipo de incidencia."
                },
                "010805" : {
                  "error_code" : "010805",
                  "error_msg" : "INCORRECT_EXPERIENCE_INCIDENCE_TYPE",
                  "error_desc" : "El tipo de incidencia especificado no es válido."
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/user" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create user",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "User Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "ota", "id" ],
              "properties" : {
                "ota" : {
                  "type" : "integer"
                },
                "id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "ota" : 12345,
                "id" : "2217"
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "010110" : {
                  "error_code" : "010110",
                  "error_msg" : "INVALID_REGISTRATION_TYPE",
                  "error_desc" : "Tipo de registro inválido"
                },
                "010113" : {
                  "error_code" : "010113",
                  "error_msg" : "INCORRECT_DATA",
                  "error_desc" : "Incorrect data"
                },
                "010107" : {
                  "error_code" : "010107",
                  "error_msg" : "OTP_COULD_NOT_BE_SEND",
                  "error_desc" : "OTP no se pudo enviar"
                },
                "010102" : {
                  "error_code" : "010102",
                  "error_msg" : "TEL_EXISTS",
                  "error_desc" : "Telephone exists"
                },
                "010106" : {
                  "error_code" : "010106",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "Ha habido un error con el registro. Por favor, contacta con nosotros en el 606 198 163."
                },
                "010101" : {
                  "error_code" : "010101",
                  "error_msg" : "EMAIL_EXISTS",
                  "error_desc" : "Email exists"
                },
                "010114" : {
                  "error_code" : "010114",
                  "error_msg" : "INVALID_FACEBOOK_TOKEN",
                  "error_desc" : "Ha ocurrido un error de autenticación con tu cuenta de facebook."
                },
                "010115" : {
                  "error_code" : "010115",
                  "error_msg" : "FAILED_CONNECT_FACEBOOK",
                  "error_desc" : "No se ha podido conectar con facebook."
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                },
                "010116" : {
                  "error_code" : "010116",
                  "error_msg" : "EMAIL_REQUIRED",
                  "error_desc" : "Por favor, introduce el email"
                }
              }
            }
          }
        }
      }
    },
    "/user/login" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Login user",
        "parameters" : [ {
          "name" : "Basic",
          "in" : "header",
          "description" : "encode base_64 (email:password(MD5)). Required by login with email",
          "type" : "string"
        }, {
          "name" : "body",
          "in" : "body",
          "description" : "LoginUser Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoginUserBody"
          }
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "name", "email", "phone_no", "want_news", "orders", "token" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "email" : {
                  "type" : "string"
                },
                "phone_no" : {
                  "type" : "string"
                },
                "want_news" : {
                  "type" : "string"
                },
                "orders" : {
                  "type" : "integer"
                },
                "token" : {
                  "type" : "string"
                }
              },
              "example" : {
                "id" : "2217",
                "name" : "Juan",
                "email" : "testing_android@lavanapp.com",
                "phone_no" : "536363636",
                "want_news" : "true",
                "orders" : 16,
                "token" : "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0aW5nX2FuZHJvaWRAbGF2YW5hcHAuY29tIiwiYWRtaW4iOmZhbHNlLCJjcmVhdGVkX29uIjoiMjAxNi0xMS0wMyAxMjo1NzoyNyIsInR5cGUiOiJhdXRoIiwiZXhwIjoxNDg2ODMzOTQ4LCJleHBfc2Vzc2lvbiI6MTQ4MTgyMjc0OH0.OBrpLk8o9hBCUBq7eht8QzFKY8djVoPi57cSkW45fZY"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                },
                "010201" : {
                  "error_code" : "010201",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                },
                "010203" : {
                  "error_code" : "010203",
                  "error_msg" : "CONSUMER_HAS_BEEN_BLOCKED",
                  "error_desc" : "Consumer has been blocked"
                }
              }
            }
          },
          "500" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                },
                "010204" : {
                  "error_code" : "010204",
                  "error_msg" : "TYPE_LOGIN_REQUIRED",
                  "error_desc" : "Type login required"
                },
                "010205" : {
                  "error_code" : "010205",
                  "error_msg" : "INVALID_TYPE_LOGIN",
                  "error_desc" : "Invalid type login"
                },
                "010206" : {
                  "error_code" : "010206",
                  "error_msg" : "EMAIL_REQUIRED",
                  "error_desc" : "Por favor, introduce el email"
                },
                "010207" : {
                  "error_code" : "010207",
                  "error_msg" : "INVALID_FACEBOOK_TOKEN",
                  "error_desc" : "Ha ocurrido un error de autenticación con tu cuenta de facebook."
                },
                "010208" : {
                  "error_code" : "010208",
                  "error_msg" : "FAILED_CONNECT_FACEBOOK",
                  "error_desc" : "No se ha podido conectar con facebook."
                }
              }
            }
          }
        }
      }
    },
    "/user/refresh" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Refresh a token",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "userRefresh Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RefreshUserBody"
          }
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "token" ],
              "properties" : {
                "token" : {
                  "type" : "string"
                }
              },
              "example" : {
                "token" : "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0aW5nX2FuZHJvaWRAbGF2YW5hcHAuY29tIiwiYWRtaW4iOmZhbHNlLCJjcmVhdGVkX29uIjoiMjAxNi0xMS0wMyAxMjo1NzoyNyIsInR5cGUiOiJhdXRoIiwiZXhwIjoxNDg2ODMzOTQ4LCJleHBfc2Vzc2lvbiI6MTQ4MTgyMjc0OH0.OBrpLk8o9hBCUBq7eht8QzFKY8djVoPi57cSkW45fZY"
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090201" : {
                  "error_code" : "090201",
                  "error_msg" : "TYPE_REFRESH_TOKEN_REQUIRED",
                  "error_desc" : "Type refresh token required"
                },
                "090202" : {
                  "error_code" : "090202",
                  "error_msg" : "INVALID_TYPE_REFRESH_TOKEN",
                  "error_desc" : "Invalid type refresh token"
                },
                "090203" : {
                  "error_code" : "090203",
                  "error_msg" : "PASSWOR_REQUIRED",
                  "error_desc" : "Password is required"
                },
                "090204" : {
                  "error_code" : "090204",
                  "error_msg" : "EMAIL_REQUIRED",
                  "error_desc" : "Email is required"
                },
                "090205" : {
                  "error_code" : "090205",
                  "error_msg" : "REFRESH_TOKEN_ERROR",
                  "error_desc" : "Refresh token error"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/user/recover_password" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Recover password",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "RecvoverUser Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RecoverUserBody"
          }
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "mail_send" ],
              "properties" : {
                "consumer_id" : {
                  "description" : "return consumer id if exists a consumer with the email",
                  "type" : "string"
                },
                "mail_send" : {
                  "type" : "integer"
                }
              },
              "example" : {
                "mail_send" : 1
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "010601" : {
                  "error_code" : "010601",
                  "error_msg" : "EMAIL_NOT_EXISTS",
                  "error_desc" : "email not exists"
                },
                "010604" : {
                  "error_code" : "010604",
                  "error_msg" : "EMAIL_USER_NOT_MATCH",
                  "error_desc" : "Email and user not match"
                },
                "010603" : {
                  "error_code" : "010603",
                  "error_msg" : "INVALID_EMAIL",
                  "error_desc" : "El formato del email introducido es incorrecto."
                },
                "010602" : {
                  "error_code" : "010602",
                  "error_msg" : "MAIL_NOT_SEND",
                  "error_desc" : "No se ha podido enviar el email para recuperar contraseña. Por favor, vuelve a intentarlo. Si el error persiste contacta con nosotros en el 606 198 163."
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}" : {
      "put" : {
        "tags" : [ "user" ],
        "summary" : "Updated user",
        "description" : "This can only be done by the logged in user. Login required if the token was created more than two days ago",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "user id",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "body",
          "in" : "body",
          "description" : "User Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdatedUser"
          }
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "result" ],
              "properties" : {
                "result" : {
                  "type" : "string"
                }
              },
              "example" : {
                "result" : "ok"
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "(nuevo)010505" : {
                  "error_code" : "010505",
                  "error_msg" : "INCORRECT_FORMAT_CONSUMER_NAME",
                  "error_desc" : "El nombre es incorrecto. Debe contener caracteres alfabéticos de longitud menor que 100."
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090101" : {
                  "error_code" : "090101",
                  "error_msg" : "LOGIN_SECURITY_REQUIRED",
                  "error_desc" : "Login security required"
                },
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}/change_password" : {
      "put" : {
        "tags" : [ "user" ],
        "summary" : "Updated user password",
        "description" : "This can only be done by the logged in user. Login required if the token was created more than two days ago",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "user id",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "body",
          "in" : "body",
          "description" : "User Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChangePasswordUser"
          }
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "result" ],
              "properties" : {
                "result" : {
                  "type" : "string"
                }
              },
              "example" : {
                "result" : "ok"
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "010301" : {
                  "error_code" : "010301",
                  "error_msg" : "INCORRECT_FORMAT_PWD",
                  "error_desc" : "Incorrect format password"
                },
                "010303" : {
                  "error_code" : "010303",
                  "error_msg" : "OLD_PASSWORD_NOT_MATCH",
                  "error_desc" : "Old password does not match"
                },
                "010304" : {
                  "error_code" : "010304",
                  "error_msg" : "NEW_AND_OLD_PWD_MUST_BE_DIFFERENT",
                  "error_desc" : "The new and old password must be different"
                },
                "010305" : {
                  "error_code" : "010305",
                  "error_msg" : "NEW_PWD_AND_CONFIRMATION_NOT_MATCH",
                  "error_desc" : "New password and confirmation do not match"
                },
                "010306" : {
                  "error_code" : "010306",
                  "error_msg" : "OLD_PASSWORD_REQUIRED",
                  "error_desc" : "Por favor, introduce tu contraseña"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090101" : {
                  "error_code" : "090101",
                  "error_msg" : "LOGIN_SECURITY_REQUIRED",
                  "error_desc" : "Login security required"
                },
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}/code" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Send an email or an SMS with the activation code",
        "description" : "This can only be done with a token unauthorized.",
        "parameters" : [ {
          "name" : "authorization",
          "in" : "header",
          "description" : "unauth_token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "user id",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "email or sms",
          "required" : true,
          "type" : "string"
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "ota_send_status" ],
              "properties" : {
                "ota_send_status" : {
                  "type" : "boolean"
                }
              },
              "example" : {
                "ota_send_status" : true
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "010701" : {
                  "error_code" : "010701",
                  "error_msg" : "INVALID_TOKEN",
                  "error_desc" : "Token payment does not exists"
                },
                "010111" : {
                  "error_code" : "010111",
                  "error_msg" : "ERR_INVALID_TYPE_SEND",
                  "error_desc" : "Tipo de envío inválido"
                },
                "010112" : {
                  "error_code" : "010112",
                  "error_msg" : "INVALID_USER_ID",
                  "error_desc" : "Invalid user id"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}/verify" : {
      "put" : {
        "tags" : [ "user" ],
        "summary" : "Verify user. Check OTA",
        "description" : "This can only be done with a token unauthorized.",
        "parameters" : [ {
          "name" : "authorization",
          "in" : "header",
          "description" : "unauth_token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "user id",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "body",
          "in" : "body",
          "description" : "User Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VerifyUser"
          }
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "verification_status", "token" ],
              "properties" : {
                "verification_status" : {
                  "type" : "integer"
                },
                "token" : {
                  "type" : "string"
                }
              },
              "example" : {
                "verification_status" : 1,
                "token" : "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0aW5nX2FuZHJvaWRAbGF2YW5hcHAuY29tIiwiYWRtaW4iOmZhbHNlLCJjcmVhdGVkX29uIjoiMjAxNi0xMS0wMyAxMjo1NzoyNyIsInR5cGUiOiJhdXRoIiwiZXhwIjoxNDg2OTcwNzU3LCJleHBfc2Vzc2lvbiI6MTQ4MTk1OTU1N30.4MNEr6K8-g3IAcxfXVfDXR3C4zmbAqoMtK9Jjb6XYz0"
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "010109" : {
                  "error_code" : "010109",
                  "error_msg" : "INVALID_OTA",
                  "error_desc" : "El código de verificación introducido no es correcto"
                },
                "010112" : {
                  "error_code" : "010112",
                  "error_msg" : "INVALID_USER_ID",
                  "error_desc" : "Invalid user id"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}/fcm_token" : {
      "put" : {
        "tags" : [ "user" ],
        "summary" : "Update FCM Token",
        "description" : "This can only be done with a token authorized.",
        "parameters" : [ {
          "name" : "authorization",
          "in" : "header",
          "description" : "unauth_token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "user id",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "body",
          "in" : "body",
          "description" : "FCM Token",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FcmToken"
          }
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "fcm_token" ],
              "properties" : {
                "fcm_token" : {
                  "type" : "string"
                }
              },
              "example" : {
                "fcm_token" : "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0aW5nX2FuZHJvaWRAbGF2YW5hcHAuY29tIiwiYWRtaW4iOmZhbHNlLCJjcmVhdGVkX29uIjoiMjAxNi0xMS0wMyAxMjo1NzoyNyIsInR5cGUiOiJhdXRoIiwiZXhwIjoxNDg2OTcwNzU3LCJleHBfc2Vzc2lvbiI6MTQ4MTk1OTU1N30.4MNEr6K8-g3IAcxfXVfDXR3C4zmbAqoMtK9Jjb6XYz0"
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "010109" : {
                  "error_code" : "010507",
                  "error_msg" : "FCM_TOKEN_NOT_NULL",
                  "error_desc" : "El campo fcm_token no puede ser nulo"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/product" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "Return categories with list of products",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "categories" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CategoriesProductGet"
                  },
                  "minItems" : 0,
                  "description" : "products and categories"
                }
              },
              "example" : {
                "categories" : {
                  "id" : "12",
                  "name" : "Ofertas",
                  "image" : "http://api.lavanapp.com/app/webroot/Uploads/Category/VW5TL0.png",
                  "products" : {
                    "id" : "420",
                    "name" : "5 camisas",
                    "image" : "http://api.lavanapp.com/app/webroot/Uploads/Products/LL3KK0.jpg",
                    "price" : "15.95",
                    "currency" : "€"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/product/{id}" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "Return the detail of a product",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "product id",
          "required" : true,
          "type" : "integer"
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "product" ],
              "properties" : {
                "product" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ProductDetailGet"
                  },
                  "minItems" : 0,
                  "description" : "product detail"
                }
              },
              "example" : {
                "product" : {
                  "id" : "420",
                  "category_id" : "12",
                  "name" : "5 camisas",
                  "price" : "15.95",
                  "description" : "5 camisas lavadas y planchadas.",
                  "description_large" : "Oferta de 5 camisas. Lavaremos tus camisas, las plancharemos y te las entregaremos en tu domicilio en 24 horas",
                  "image" : "http://api.lavanapp.com/app/webroot/Uploads/Products/LL3KK0.jpg",
                  "preparation_time" : "24",
                  "feature" : {
                    "id" : "1",
                    "name" : "Temperatura de lavado",
                    "values" : {
                      "id" : "1",
                      "value" : "10ºC"
                    }
                  },
                  "attribute_group" : {
                    "id" : "1",
                    "name" : "Tejidos",
                    "group_type_id" : "3",
                    "group_type" : "Select",
                    "inc_price" : "",
                    "attributes" : {
                      "id" : "1",
                      "value" : "Seda",
                      "inc_price" : "6.00"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "030101" : {
                  "error_code" : "030101",
                  "error_msg" : "PRODUCT_NOT_EXISTS",
                  "error_desc" : "Product not exists"
                },
                "030102" : {
                  "error_code" : "030102",
                  "error_msg" : "ERROR_VALIDATION_PARAMS",
                  "error_desc" : ""
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/order" : {
      "get" : {
        "tags" : [ "order" ],
        "summary" : "Return list of user orders",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "order_history_list" ],
              "properties" : {
                "order_history_list" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/OrdersGet"
                  },
                  "minItems" : 0,
                  "description" : "list of all consumer orders"
                }
              },
              "example" : {
                "order_history_list" : {
                  "id" : "2971",
                  "code" : "198F27621B7A",
                  "total_price" : "15.95",
                  "currency" : "€",
                  "product_count" : "1",
                  "created_on" : "2016-12-23 10:10:06",
                  "pickup_date" : "2016-12-15",
                  "pickup_time" : "18:00-19:00",
                  "delivery_date" : "2016-12-16",
                  "delivery_time" : "13:00-13:30",
                  "status_id" : "1",
                  "status" : "Confirmado"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "order" ],
        "summary" : "Create an order",
        "description" : "Login required if the token was created more than two days ago",
        "parameters" : [ {
          "name" : "Platform",
          "in" : "header",
          "description" : "android or ios",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "body",
          "in" : "body",
          "description" : "Order Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrderBody"
          }
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "code" ],
              "properties" : {
                "code" : {
                  "type" : "string"
                }
              },
              "example" : {
                "code" : "194899A04AFA"
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "040406" : {
                  "error_code" : "040406",
                  "error_msg" : "NOT_MATCH_CALCULATED_AND_RECEIVED_PRICE",
                  "error_desc" : "Does not match the price calculated with the price received"
                },
                "040404" : {
                  "error_code" : "040404",
                  "error_msg" : "ORDER_COULD_NOT_BE_PLACED",
                  "error_desc" : "Su pedido no pudo ser realizado, por favor intentalo de nuevo"
                },
                "040417" : {
                  "error_code" : "040417",
                  "error_msg" : "ERROR_VALIDATION_PARAMS",
                  "error_desc" : ""
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090101" : {
                  "error_code" : "090101",
                  "error_msg" : "LOGIN_SECURITY_REQUIRED",
                  "error_desc" : "Login security required"
                },
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/order/{id}" : {
      "get" : {
        "tags" : [ "order" ],
        "summary" : "Return the detail of an order",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "order id",
          "required" : true,
          "type" : "integer"
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "order" ],
              "properties" : {
                "order" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/OrderDetailGet"
                  },
                  "minItems" : 0,
                  "description" : "get an order detail"
                }
              },
              "example" : {
                "order" : {
                  "code" : "198F27621B7A",
                  "total_price" : "5.95",
                  "currency" : "€",
                  "product_count" : "1",
                  "created_on" : "2016-12-23 10:10:06",
                  "pickup_date" : "2016-12-15",
                  "pickup_time" : "18:00-19:00",
                  "delivery_date" : "2016-12-16",
                  "delivery_time" : "13:00-13:30",
                  "status_id" : "1",
                  "statuses" : {
                    "1" : {
                      "id" : "1",
                      "name" : "Confirmado",
                      "path_url" : "https://192.168.1.80/img/android/",
                      "img_name" : "cesta.png"
                    },
                    "2" : {
                      "id" : "2",
                      "name" : "Recogiendo",
                      "path_url" : "https://192.168.1.80/img/ios/",
                      "img_name" : "furgo.png"
                    }
                  },
                  "status" : "Confirmado",
                  "special_instructions" : "",
                  "coupon" : {
                    "id" : "55",
                    "name" : "ANDROIDA",
                    "discount_type_id" : "2",
                    "discount" : "10"
                  },
                  "pickup_address" : {
                    "id" : "157",
                    "name" : "Mi casa",
                    "street" : "Carretera de Canillas",
                    "street_number" : "138",
                    "complement" : "primera planta",
                    "special_instructions" : "dejar al portero",
                    "postal_code" : "28043",
                    "township" : "Madrid",
                    "city" : "Madrid",
                    "province" : "Madrid",
                    "state" : "Madrid"
                  },
                  "delivery_address" : {
                    "id" : "157",
                    "name" : "Mi casa",
                    "street" : "Carretera de Canillas",
                    "street_number" : "138",
                    "complement" : "primera planta",
                    "special_instructions" : "dejar al portero",
                    "postal_code" : "28043",
                    "township" : "Madrid",
                    "city" : "Madrid",
                    "province" : "Madrid",
                    "state" : "Madrid"
                  },
                  "products" : {
                    "id" : "420",
                    "num_products" : "1",
                    "category_id" : "12",
                    "category" : "Ofertas",
                    "product" : "5 camisas",
                    "image" : "http://api.lavanapp.com/Uploads/Products/LL3KK0.jpg",
                    "preparation_time" : "24",
                    "price" : "15.95",
                    "multiplier_value" : "",
                    "multiplier_name" : "",
                    "attribute_group" : {
                      "id" : "3",
                      "name" : "Tejidos",
                      "group_type" : "3",
                      "inc_price" : "",
                      "attributes" : {
                        "id" : "5",
                        "value" : "Lana",
                        "inc_price" : "3.00"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "040302" : {
                  "error_code" : "040302",
                  "error_msg" : "ORDER_NOT_BELONG_USER",
                  "error_desc" : "The order does not belong to the user"
                },
                "040417" : {
                  "error_code" : "040417",
                  "error_msg" : "ERROR_VALIDATION_PARAMS",
                  "error_desc" : ""
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/order/check_cart" : {
      "post" : {
        "tags" : [ "order" ],
        "summary" : "check the compatibility of cart products",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "Cart Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CartBody"
          }
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "express_service" ],
              "properties" : {
                "express_service" : {
                  "type" : "boolean"
                }
              },
              "example" : {
                "express_service" : true
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "040437" : {
                  "error_code" : "040437",
                  "error_msg" : "CART_PRODUCTS_NOT_COMPATIBLE",
                  "error_desc" : "No se pueden mezclar los productos express con otra categoría"
                },
                "040438" : {
                  "error_code" : "040438",
                  "error_msg" : "SELECT_A_TYPE_OF_EXPRES_SERVICE",
                  "error_desc" : "Debe seleccionar un tipo de servicio express"
                },
                "040439" : {
                  "error_code" : "040439",
                  "error_msg" : "SELECT_SAME_EXPRES_SERVICE",
                  "error_desc" : "Los tiempos de entrega no son iguales. Selecciona productos con el mismo tiempo de entrega."
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090101" : {
                  "error_code" : "090101",
                  "error_msg" : "LOGIN_SECURITY_REQUIRED",
                  "error_desc" : "Login security required"
                },
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/voucher" : {
      "get" : {
        "tags" : [ "voucher" ],
        "summary" : "Return information about voucher",
        "parameters" : [ {
          "name" : "coupon_code",
          "in" : "query",
          "description" : "coupon code text",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "total_order",
          "in" : "query",
          "description" : "total amount of order",
          "required" : true,
          "type" : "string"
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "name", "discount_type", "discount" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "discount_type" : {
                  "description" : "1 if discount is fixed an 2 if discount is percentage",
                  "type" : "string"
                },
                "discount" : {
                  "type" : "string"
                }
              },
              "example" : {
                "id" : "55",
                "name" : "ANDROIDA",
                "discount_type" : "2",
                "discount" : "5"
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "050101" : {
                  "error_code" : "050101",
                  "error_msg" : "COUPON_INVALID",
                  "error_desc" : "Coupon invalid"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/schedule/delivery" : {
      "post" : {
        "tags" : [ "schedule" ],
        "summary" : "Return information about available delivery schedule ",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "Delivery data Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeliveryBody"
          }
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "schedule" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Schedules"
                  },
                  "minItems" : 0,
                  "description" : "list of available date and time"
                }
              },
              "example" : {
                "schedule" : {
                  "date" : "2016-12-16",
                  "text_day" : "Mañana",
                  "closed" : false,
                  "slots" : {
                    "id" : "161",
                    "slot" : "17:00 - 18:00",
                    "closed" : false
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "060501" : {
                  "error_code" : "060501",
                  "error_msg" : "INCORRECT_PARAMS",
                  "error_desc" : "Incorrect params"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/schedule/pickup" : {
      "get" : {
        "tags" : [ "schedule" ],
        "summary" : "Return information about available pickup schedule ",
        "parameters" : [ {
          "name" : "postal_code",
          "in" : "query",
          "description" : "postal code from pickup",
          "required" : true,
          "type" : "string"
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "schedule" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Schedules"
                  },
                  "minItems" : 0,
                  "description" : "list of available date and time"
                }
              },
              "example" : {
                "schedule" : {
                  "date" : "2016-12-15",
                  "text_day" : "Hoy",
                  "closed" : false,
                  "slots" : {
                    "id" : "161",
                    "slot" : "17:00 - 18:00",
                    "closed" : false
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/state" : {
      "get" : {
        "tags" : [ "state" ],
        "summary" : "Return array with (cities) ciudades and (states) provincias",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "states" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/statescities"
                  },
                  "minItems" : 0,
                  "description" : "list of states and cities"
                }
              },
              "example" : {
                "states" : {
                  "id" : "1",
                  "name" : "A Coruña",
                  "status" : "1",
                  "cities" : {
                    "id" : "1",
                    "state_id" : "1",
                    "name" : "A Coruña",
                    "status" : "1"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/address" : {
      "get" : {
        "tags" : [ "address" ],
        "summary" : "Return information about user addresses",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddressResponse",
              "example" : {
                "addresses" : {
                  "id" : "157",
                  "name" : "Mi casa",
                  "street" : "Carretera de Canillas",
                  "street_number" : "138",
                  "complement" : "primera planta",
                  "special_instructions" : "dejar al portero",
                  "postal_code" : "28043",
                  "township" : "Madrid",
                  "city" : "Madrid",
                  "province" : "Madrid",
                  "state" : "Madrid"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "address" ],
        "summary" : "Insert a new address associated with the user",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "address data Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Address"
          }
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "address_id" ],
              "properties" : {
                "address_id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "address_id" : "265"
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "010401" : {
                  "error_code" : "010401",
                  "error_msg" : "ADDRESS_ALREADY_ASSOCIATED",
                  "error_desc" : "Address is already associated with the user"
                },
                "010403" : {
                  "error_code" : "010403",
                  "error_msg" : "ERROR_SAVING_ADDRESS",
                  "error_desc" : "Error occurred saving address"
                },
                "010404" : {
                  "error_code" : "010404",
                  "error_msg" : "ERROR_SAVING_ASSOCIATION",
                  "error_desc" : "Error occurred saving association"
                },
                "010408" : {
                  "error_code" : "010408",
                  "error_msg" : "POSTAL_CODE_NOT_WORKING",
                  "error_desc" : "Lo sentimos, Lavanapp no opera en esta zona. Estamos trabajando para ampliar nuestra área de servicio. ¡Muy pronto llegaremos hasta allí!"
                },
                "(nuevo)010409" : {
                  "error_code" : "010409",
                  "error_msg" : "STREET_CAN_NOT_BE_EMPTY",
                  "error_desc" : "La calle no puede estar vacía"
                },
                "(nuevo)010410" : {
                  "error_code" : "010410",
                  "error_msg" : "INCORRECT_LONG_STREET",
                  "error_desc" : "El número de caracteres de la calle excede del permitido (máximo 500 caracteres)"
                },
                "(nuevo)010411" : {
                  "error_code" : "010411",
                  "error_msg" : "STREET_NUMBER_CAN_NOT_BE_EMPTY",
                  "error_desc" : "El número de la calle no puede ser vacío"
                },
                "(nuevo)010412" : {
                  "error_code" : "010412",
                  "error_msg" : "INCORRECT_LONG_STREET_NUMBER",
                  "error_desc" : "El número de caracteres del número de calle excede del permitido (máximo 45 caracteres)"
                },
                "(nuevo)010413" : {
                  "error_code" : "010413",
                  "error_msg" : "INCORRECT_LONG_STREET_COMPLEMENT",
                  "error_desc" : "El número de caracteres del complemento de la calle excede del permitido (máximo 255 caracteres)"
                },
                "(nuevo)010414" : {
                  "error_code" : "010414",
                  "error_msg" : "INCORRECT_LONG_SPECIAL_INSTRUCTIONS",
                  "error_desc" : "El número de caracteres de las instrucciones especiales excede del permitido (máximo 500 caracteres)"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/address/{id}" : {
      "put" : {
        "tags" : [ "address" ],
        "summary" : "Modify an user addresses.",
        "description" : "Login required if the token was created more than two days ago. Return the same address id if not exists an order associated; else, return a new address id.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "address id",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "body",
          "in" : "body",
          "description" : "address data Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Address"
          }
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "address_id" ],
              "properties" : {
                "address_id" : {
                  "type" : "string"
                }
              },
              "example" : {
                "address_id" : "265"
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "010401" : {
                  "error_code" : "010401",
                  "error_msg" : "ADDRESS_ALREADY_ASSOCIATED",
                  "error_desc" : "Address is already associated with the user"
                },
                "010406" : {
                  "error_code" : "010406",
                  "error_msg" : "CAN_NOT_CHANGE_ADDRESS",
                  "error_desc" : "You can not change the direction"
                },
                "010408" : {
                  "error_code" : "010408",
                  "error_msg" : "POSTAL_CODE_NOT_WORKING",
                  "error_desc" : "Lo sentimos, Lavanapp no opera en esta zona. Estamos trabajando para ampliar nuestra área de servicio. ¡Muy pronto llegaremos hasta allí!"
                },
                "(nuevo)010409" : {
                  "error_code" : "010409",
                  "error_msg" : "STREET_CAN_NOT_BE_EMPTY",
                  "error_desc" : "La calle no puede estar vacía"
                },
                "(nuevo)010410" : {
                  "error_code" : "010410",
                  "error_msg" : "INCORRECT_LONG_STREET",
                  "error_desc" : "El número de caracteres de la calle excede del permitido (máximo 500 caracteres)"
                },
                "(nuevo)010411" : {
                  "error_code" : "010411",
                  "error_msg" : "STREET_NUMBER_CAN_NOT_BE_EMPTY",
                  "error_desc" : "El número de la calle no puede ser vacío"
                },
                "(nuevo)010412" : {
                  "error_code" : "010412",
                  "error_msg" : "INCORRECT_LONG_STREET_NUMBER",
                  "error_desc" : "El número de caracteres del número de calle excede del permitido (máximo 45 caracteres)"
                },
                "(nuevo)010413" : {
                  "error_code" : "010413",
                  "error_msg" : "INCORRECT_LONG_STREET_COMPLEMENT",
                  "error_desc" : "El número de caracteres del complemento de la calle excede del permitido (máximo 255 caracteres)"
                },
                "(nuevo)010414" : {
                  "error_code" : "010414",
                  "error_msg" : "INCORRECT_LONG_SPECIAL_INSTRUCTIONS",
                  "error_desc" : "El número de caracteres de las instrucciones especiales excede del permitido (máximo 500 caracteres)"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090101" : {
                  "error_code" : "090101",
                  "error_msg" : "LOGIN_SECURITY_REQUIRED",
                  "error_desc" : "Login security required"
                },
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "address" ],
        "summary" : "Delete an user addresses",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "address id",
          "required" : true,
          "type" : "integer"
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "result" ],
              "properties" : {
                "result" : {
                  "type" : "string"
                }
              },
              "example" : {
                "result" : "ok"
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "010407" : {
                  "error_code" : "010407",
                  "error_msg" : "CAN_NOT_DELETE_ADDRESS",
                  "error_desc" : "You can not delete the direction"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/paying/authorization" : {
      "get" : {
        "tags" : [ "transaction" ],
        "summary" : "Get an authorization token for payments that expires in 2 hours",
        "parameters" : [ {
          "name" : "order_id",
          "in" : "query",
          "description" : "Order identification",
          "required" : true,
          "type" : "integer"
        } ],
        "security" : [ {
          "Authorization" : [ ]
        }, {
          "ApiKey" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "x-tokenpayment" ],
              "properties" : {
                "x-tokenpayment" : {
                  "type" : "string"
                }
              },
              "example" : {
                "x-tokenpayment" : "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwYzUxMTQyYjVjNDhlZWZiODM1OWRmMmU4ZDM2YmQzNTczMmI3MGIwIiwiYWRtaW4iOmZhbHNlLCJjcmVhdGVkX29uIjoxNDg4ODA0MDY1LCJ0eXBlIjoiYXV0aCIsImV4cCI6MTQ4ODgxMTI2NSwiZXhwX3Nlc3Npb24iOjE0ODg4MTEyNjV9.i-CmvLXQ43X_0RFXwZD5BuwES5lZy4j7u5HiavT8n6o"
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "040106" : {
                  "error_code" : "040106",
                  "error_msg" : "ORDER_ID_NOT_FOUND",
                  "error_desc" : "No se encuentra el identificador del pedido."
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/paying/payment_method" : {
      "get" : {
        "tags" : [ "transaction" ],
        "summary" : "List consumer's paymente methods",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "payment_methods" ],
              "properties" : {
                "payment_methods" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Payment_methods"
                  },
                  "minItems" : 0,
                  "description" : "list of available payment methods"
                }
              },
              "example" : {
                "payment_methods" : {
                  "id" : 65,
                  "last_four_number" : null,
                  "expiration_card" : null,
                  "card_type" : null,
                  "card_holder_name" : null,
                  "email_account" : "sandbox-buyers@lavanapp.com",
                  "image_url" : null,
                  "platform_id" : 2,
                  "platform" : "PAYPAL"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "040418" : {
                  "error_code" : "040418",
                  "error_msg" : "PAYMENT_AUTHORIZATION_TOKEN_NOT_MATCH",
                  "error_desc" : "Payment authorization token does not match the logged-in user"
                },
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : "Expired token"
                },
                "090113" : {
                  "error_code" : "090113",
                  "error_msg" : "INTERNAL_ERROR_PAYMENT_TOKEN",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "transaction" ],
        "summary" : "For credit cards, returns the identifier of the new payment method created; for paypal accounts, returns the url of paypal to which would have acceded to authorize the association",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "Payment method Object",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "payment_method_type" ],
            "properties" : {
              "payment_method_type" : {
                "type" : "integer",
                "description" : "1 --> Sipay; 2 --> Paypal"
              },
              "order_id" : {
                "type" : "integer",
                "description" : "must contain the order ID when a new payment method is registered when placing an order"
              },
              "pan" : {
                "type" : "string",
                "description" : "Personal Account Number (card number) --> required for payment_method_type = 1"
              },
              "expiration" : {
                "type" : "string",
                "description" : "MMYY --> required for payment_method_type = 1"
              },
              "cardholdername" : {
                "type" : "string",
                "description" : "Cardholder name --> required for payment_method_type = 1"
              },
              "cvv" : {
                "type" : "integer",
                "description" : "Required for payment_method_type = 1"
              }
            },
            "example" : {
              "example 1:Sipay" : {
                "payment_method_type" : 1,
                "pan" : "4907272011072817",
                "expiration" : "1117",
                "cardholdername" : "Ángel Barquilla",
                "cvv" : 123,
                "order_id" : 168
              },
              "example 2:PayPal" : {
                "payment_method_type" : 2
              }
            }
          }
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "return_url" : {
                  "type" : "string",
                  "description" : "For creating a PayPal payment method"
                },
                "payment_method_id" : {
                  "type" : "integer",
                  "description" : "For creating a credit card payment method"
                }
              },
              "example" : {
                "example 1: Credit Card" : {
                  "payment_method_id" : 25
                },
                "example 2:PayPal" : {
                  "return_url" : "https://www.sandbox.paypal.com/webscr?cmd=_express-checkout&token=EC-51265042LH6335614"
                }
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "040104" : {
                  "error_code" : "040104",
                  "error_msg" : "ORDER_NOT_EXISTS",
                  "error_desc" : "Order not exists"
                },
                "040105" : {
                  "error_code" : "040105",
                  "error_msg" : "UNRECOGNIZED_SIPAY_FUNCIONALITY",
                  "error_desc" : "Unrecognized Sipay functionality"
                },
                "040202" : {
                  "error_code" : "040202",
                  "error_msg" : "INVALID_CARD",
                  "error_desc" : "Invalid card"
                },
                "040203" : {
                  "error_code" : "040203",
                  "error_msg" : "CARD_TYPE_NOT_SUPPORTED",
                  "error_desc" : "Lo sentimos, nuestro sistema no soporta el tipo de tarjeta introducido. Por favor, introduce otro método de pago."
                },
                "040204" : {
                  "error_code" : "040204",
                  "error_msg" : "INVALID_EXPIRATION_DATE",
                  "error_desc" : "La fecha de expiración introducida no es válida. Por favor, introdúcela correctamente (MM/AA)"
                },
                "040205" : {
                  "error_code" : "040205",
                  "error_msg" : "CREDIT_CARD_EXPIRED",
                  "error_desc" : "La tarjeta ha caducado. Por favor, introduce otro método de pago."
                },
                "040206" : {
                  "error_code" : "040206",
                  "error_msg" : "ERROR_OCCURRED_SAVING_CARD",
                  "error_desc" : "Ha ocurrido un erro al almacenar la tarjeta en nuestro sistema. Por favor, inténtalo de nuevo más tarde. Si el error persiste contacta con nosotros en el 606 198 163"
                },
                "040207" : {
                  "error_code" : "040207",
                  "error_msg" : "ERROR_OCCURRED_SAVING_CARD_IN_VAULT",
                  "error_desc" : "Ha ocurrido un erro al almacenar la tarjeta en nuestro sistema. Por favor, inténtalo de nuevo más tarde. Si el error persiste contacta con nosotros en el 606 198 163"
                },
                "040210" : {
                  "error_code" : "040210",
                  "error_msg" : "PAN_CAN_NOT_BE_EMPTY",
                  "error_desc" : "Introduce un número de tarjeta."
                },
                "040211" : {
                  "error_code" : "040211",
                  "error_msg" : "EXPIRATION_DATE_CAN_NOT_BE_EMPTY",
                  "error_desc" : "Introduce la fecha de expiración."
                },
                "040212" : {
                  "error_code" : "040212",
                  "error_msg" : "CARDHOLDERNAME_CAN_NOT_BE_EMPTY",
                  "error_desc" : "Introduce el nombre del titular de la tarjeta."
                },
                "040213" : {
                  "error_code" : "040213",
                  "error_msg" : "CVV_CAN_NOT_BE_EMPTY",
                  "error_desc" : "Introduce el cvv de la tarjeta."
                },
                "(nuevo)040214" : {
                  "error_code" : "040214",
                  "error_msg" : "CONECT_SIPAY_ERROR",
                  "error_desc" : "Ha ocurrido un error de conexión. Por favor, inténtalo de nuevo más tarde. Si el error persiste contacta con nosotros en el 606 198 163."
                },
                "(nuevo)040215" : {
                  "error_code" : "040215",
                  "error_msg" : "TRY_WITH_ANOTHER_CARD_102",
                  "error_desc" : "Ha habido un error con el método de pago. Por favor, inténtalo con otro diferente."
                },
                "(nuevo)040216" : {
                  "error_code" : "040216",
                  "error_msg" : "EXCEEDED_NUMBER_PIN_ATTEMPS",
                  "error_desc" : "Exceeded number of pin attempts"
                },
                "(nuevo)040217" : {
                  "error_code" : "040217",
                  "error_msg" : "DENIED_CARD",
                  "error_desc" : "Tarjeta denegada. Por favor, contacta con tu entidad o inténtalo con otra tarjeta diferente."
                },
                "(nuevo)040218" : {
                  "error_code" : "040218",
                  "error_msg" : "INCORRECT_PIN",
                  "error_desc" : "Incorrect pin."
                },
                "(nuevo)040219" : {
                  "error_code" : "040219",
                  "error_msg" : "TRY_WITH_ANOTHER_CARD_202",
                  "error_desc" : "Ha habido un error con el método de pago. Por favor, inténtalo con otro diferente."
                },
                "(nuevo)040220" : {
                  "error_code" : "040220",
                  "error_msg" : "TRY_WITH_ANOTHER_CARD_901",
                  "error_desc" : "Ha habido un error con el método de pago. Por favor, inténtalo con otro diferente."
                },
                "040410" : {
                  "error_code" : "040410",
                  "error_msg" : "EXPRESS_CHEKOUT_FAIL",
                  "error_desc" : "Express chekout fail"
                },
                "040417" : {
                  "error_code" : "040417",
                  "error_msg" : "ERROR_VALIDATION_PARAMS",
                  "error_desc" : "Aamount is 0"
                },
                "040433" : {
                  "error_code" : "040433",
                  "error_msg" : "INCORRECT_PAYMENT_PLATFORM",
                  "error_desc" : "Plataforma de pago incorrecta"
                },
                "040428" : {
                  "error_code" : "040428",
                  "error_msg" : "ERROR_SAVING_PAYPAL_TOKEN",
                  "error_desc" : "Ha habido un error en la redirección a Paypal. Por favor, inténtalo de nuevo más tarde. Si el error persiste contacta con nosotros en el 606 198 163"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "040418" : {
                  "error_code" : "040418",
                  "error_msg" : "PAYMENT_AUTHORIZATION_TOKEN_NOT_MATCH",
                  "error_desc" : "Payment authorization token does not match the logged-in user"
                },
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                },
                "090113" : {
                  "error_code" : "090113",
                  "error_msg" : "INTERNAL_ERROR_PAYMENT_TOKEN",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/paying/payment_method/{id}" : {
      "delete" : {
        "tags" : [ "transaction" ],
        "summary" : "Delete payment method",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "payment method id",
          "required" : true,
          "type" : "integer"
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "payment_deleted" ],
              "properties" : {
                "payment_deleted" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "040209" : {
                  "error_code" : "040209",
                  "error_msg" : "ERROR_OCCURRED_DELETING_METHOD_FROM_VAULT",
                  "error_desc" : "An error occurred deleting method from Sipay vault"
                },
                "040413" : {
                  "error_code" : "040413",
                  "error_msg" : "PAYMENT_METHOD_NOT_FOUND",
                  "error_desc" : "Payment method not found"
                },
                "040419" : {
                  "error_code" : "040419",
                  "error_msg" : "CAN_NOT_DELETE_PAYMENT_METHOD",
                  "error_desc" : "Ha ocurrido un error eliminando el método de pago. Por favor, inténtalo de nuevo más tarde. Si el error persiste contacta con nosotros en el 606 198 163."
                },
                "040434" : {
                  "error_code" : "040434",
                  "error_msg" : "ERROR_OCCURRED_DELETING_BILLING_AGREEMENT",
                  "error_desc" : "No se ha podido eliminar el acuerdo de pagos. Por favor, inténtalo de nuevo más tarde. Si el error persiste contacte con nosotros en el 606 198 163"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "040418" : {
                  "error_code" : "040418",
                  "error_msg" : "PAYMENT_AUTHORIZATION_TOKEN_NOT_MATCH",
                  "error_desc" : "Payment authorization token does not match the logged-in user"
                },
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                },
                "090113" : {
                  "error_code" : "090113",
                  "error_msg" : "INTERNAL_ERROR_PAYMENT_TOKEN",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/paying/pay" : {
      "post" : {
        "tags" : [ "transaction" ],
        "summary" : "Create a new billing agreement and execute the payment of the order in progress",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "Payment Object",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "order_id", "payment_method_type" ],
            "properties" : {
              "payment_method_type" : {
                "type" : "integer",
                "description" : "1 --> Sipay; 2 --> Paypal"
              },
              "payment_method_id" : {
                "type" : "integer",
                "description" : "Payment method identification"
              },
              "order_id" : {
                "type" : "integer"
              }
            },
            "example" : {
              "payment_method_id" : 65,
              "order_id" : 168,
              "payment_method_type" : 1
            }
          }
        } ],
        "security" : [ {
          "Authorization" : [ ]
        }, {
          "x-tokenpayment" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "payment_status" ],
              "properties" : {
                "payment_status" : {
                  "type" : "integer"
                }
              },
              "example" : {
                "payment_status" : 1
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "010701" : {
                  "error_code" : "010701",
                  "error_msg" : "INVALID_TOKEN",
                  "error_desc" : "Token payment does not exists"
                },
                "040104" : {
                  "error_code" : "040104",
                  "error_msg" : "ORDER_NOT_EXISTS",
                  "error_desc" : "El pedido no existe o ha expirado. Por favor, añade los artículos deseados al carrito."
                },
                "040105" : {
                  "error_code" : "040105",
                  "error_msg" : "UNRECOGNIZED_SIPAY_FUNCIONALITY",
                  "error_desc" : "Unrecognized Sipay functionality"
                },
                "040208" : {
                  "error_code" : "040208",
                  "error_msg" : "SIPAY_ERROR",
                  "error_desc" : ""
                },
                "040407" : {
                  "error_code" : "040407",
                  "error_msg" : "PAYMENT_DUPLICATED",
                  "error_desc" : "The order is already paid"
                },
                "040411" : {
                  "error_code" : "040411",
                  "error_msg" : "TRANSACTION_FAILURE",
                  "error_desc" : "Internal transaction failure"
                },
                "040413" : {
                  "error_code" : "040413",
                  "error_msg" : "PAYMENT_METHOD_NOT_FOUND",
                  "error_desc" : "Payment method not found"
                },
                "040414" : {
                  "error_code" : "040414",
                  "error_msg" : "INVALID_PAYMENT_PLATFORM",
                  "error_desc" : "Invalid payment platform"
                },
                "040417" : {
                  "error_code" : "040417",
                  "error_msg" : "ERROR_VALIDATION_PARAMS",
                  "error_desc" : "Amount is 0"
                },
                "040420" : {
                  "error_code" : "040420",
                  "error_msg" : "BILLING_IS_NOT_APPROVED",
                  "error_desc" : "Billing is not approved"
                },
                "040433" : {
                  "error_code" : "040433",
                  "error_msg" : "INCORRECT_PAYMENT_PLATFORM",
                  "error_desc" : "Plataforma de pago incorrecta."
                },
                "040424" : {
                  "error_code" : "040424",
                  "error_msg" : "PAYMENT_PLATFORM_NOT_MATCH",
                  "error_desc" : "Payment platform not match"
                },
                "040425" : {
                  "error_code" : "040425",
                  "error_msg" : "ERROR_OCCURRED_MAKING_PAYMENT",
                  "error_desc" : "Ha ocurrido un error con el pago del pedido. Por favor, inténtalo de nuevo más tarde. Si el error persiste contacta con nosotros en el 606 198 163."
                },
                "040436" : {
                  "error_code" : "040436",
                  "error_msg" : "ERROR_OCCURRED_PAYPAL_PAYMENT_METHOD",
                  "error_desc" : "Paypal no ha podido procesar el pago del pedido con el método de pago seleccionado. Por favor, seleccione otro método de pago alternativo."
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "040418" : {
                  "error_code" : "040418",
                  "error_msg" : "PAYMENT_AUTHORIZATION_TOKEN_NOT_MATCH",
                  "error_desc" : "Payment authorization token does not match the logged-in user"
                },
                "040422" : {
                  "error_code" : "040422",
                  "error_msg" : "PAYMENT_TOKEN_IS_NOT_AUTHORIZATED",
                  "error_desc" : "Payment token is not authorizated for this order"
                },
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                },
                "090113" : {
                  "error_code" : "090113",
                  "error_msg" : "INTERNAL_ERROR_PAYMENT_TOKEN",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    },
    "/paying/accept_agreement" : {
      "post" : {
        "tags" : [ "transaction" ],
        "summary" : "Accept a new billing agreement",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "Payment Object",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "paypal_token" ],
            "properties" : {
              "paypal_token" : {
                "type" : "string"
              }
            },
            "example" : {
              "paypal_token" : "EC-2EM31720MW080434Y"
            }
          }
        } ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "required" : [ "payment_method_id" ],
              "properties" : {
                "payment_method_id" : {
                  "type" : "integer"
                }
              },
              "example" : {
                "payment_method_id" : 65
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "010701" : {
                  "error_code" : "010701",
                  "error_msg" : "INVALID_TOKEN",
                  "error_desc" : "Token payment does not exists"
                },
                "040417" : {
                  "error_code" : "040417",
                  "error_msg" : "ERROR_VALIDATION_PARAMS",
                  "error_desc" : "PayPal token can not be empty"
                },
                "040420" : {
                  "error_code" : "040420",
                  "error_msg" : "BILLING_IS_NOT_APPROVED",
                  "error_desc" : "El acuerdo de pagos con Paypal no se ha aceptado. Por favor, acepta el acuerdo para realizar el pedido."
                },
                "040421" : {
                  "error_code" : "040421",
                  "error_msg" : "ERROR_OCCURRED_SAVING_AGREEMENT",
                  "error_desc" : "An error occurred while keeping the billing agreement"
                },
                "040427" : {
                  "error_code" : "040427",
                  "error_msg" : "ERROR_OCCURRED_CREATING_AGREEMENT",
                  "error_desc" : "Ha ocurrido un error creando el acuerdo de pagos con Paypal. Por favor, inténtelo de nuevo más tarde. Si el error persiste contacte con nosotros en el 606 198 163"
                },
                "040435" : {
                  "error_code" : "040435",
                  "error_msg" : "ERROR_OCCURRED_GETTING_PAYPAL_CONSUMER_DATA",
                  "error_desc" : "Ha ocurrido un error obteniendo los datos de Paypal. Por favor, inténtelo de nuevo más tarde. Si el error persiste contacte con nosotros en el 606 198 163"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090108" : {
                  "error_code" : "090108",
                  "error_msg" : "TOKEN_UNAUTHORIZED",
                  "error_desc" : "Token unauthorized"
                },
                "080102" : {
                  "error_code" : "080102",
                  "error_msg" : "INCORRECT_APIKEY",
                  "error_desc" : "Incorrect Api Key"
                },
                "090104" : {
                  "error_code" : "090104",
                  "error_msg" : "USER_LOCKED",
                  "error_desc" : "User locked"
                },
                "090105" : {
                  "error_code" : "090105",
                  "error_msg" : "UNREGISTERED_USER",
                  "error_desc" : "Unregistered user"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "type" : "object",
              "properties" : {
                "error_code" : {
                  "type" : "string"
                },
                "error_msg" : {
                  "type" : "string"
                },
                "error_desc" : {
                  "type" : "string"
                }
              },
              "example" : {
                "090102" : {
                  "error_code" : "090102",
                  "error_msg" : "WRONG_NUMBER_AUTHORIZATION_HEADERS",
                  "error_desc" : "Wrong number of Authorization Headers"
                },
                "090103" : {
                  "error_code" : "090103",
                  "error_msg" : "AUTHORIZATION_HEADERS_NO_DETECTED",
                  "error_desc" : "Authorization Headers are not detected"
                },
                "090107" : {
                  "error_code" : "090107",
                  "error_msg" : "INCORRECT_FORMAT_TOKEN",
                  "error_desc" : "Incorrect format token"
                },
                "090109" : {
                  "error_code" : "090109",
                  "error_msg" : "INTERNAL_ERROR_JWT",
                  "error_desc" : ""
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "User" : {
      "type" : "object",
      "required" : [ "name", "phone", "email", "postal_code", "want_news", "type" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "password" : {
          "description" : "Required for registration by email",
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "postal_code" : {
          "type" : "string"
        },
        "fcm_token" : {
          "type" : "string"
        },
        "want_news" : {
          "type" : "boolean"
        },
        "type" : {
          "description" : "email or facebook",
          "type" : "string"
        },
        "id" : {
          "description" : "Required for registration by facebook",
          "type" : "string"
        },
        "token" : {
          "description" : "Required for registration by facebook",
          "type" : "string"
        }
      },
      "example" : {
        "email" : {
          "name" : "Clara Muñoz",
          "password" : "25f9e794323b453885f5181f1b624d0b",
          "email" : "clara@lavanapp.com",
          "postal_code" : "28043",
          "fcm_token" : "adsfasdferewrwefr",
          "phone" : "736573661",
          "type" : "email",
          "want_news" : true,
          "id" : "",
          "token" : ""
        },
        "facebook" : {
          "name" : "Clara Muñoz",
          "password" : "",
          "email" : "clara@lavanapp.com",
          "postal_code" : "28043",
          "fcm_token" : "adsfasdferewrwefr",
          "phone" : "736573661",
          "type" : "facebook",
          "want_news" : true,
          "id" : "2578",
          "token" : "adsfasdferewrwefr"
        }
      }
    },
    "UpdatedUser" : {
      "type" : "object",
      "required" : [ "name", "want_news" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "postal_code" : {
          "type" : "string"
        },
        "want_news" : {
          "type" : "boolean"
        }
      },
      "example" : {
        "name" : "Clara Muñoz",
        "postal_code" : "28043",
        "want_news" : false
      }
    },
    "LoginUserBody" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "type" : {
          "description" : "email o facebook",
          "type" : "string"
        },
        "email" : {
          "description" : "en caso de facebook",
          "type" : "string"
        },
        "id" : {
          "description" : "id del usuario en caso de facebook",
          "type" : "string"
        },
        "token" : {
          "description" : "en caso de facebook",
          "type" : "string"
        },
        "fcm_token" : {
          "description" : "token fcm del dispositivo para firebase",
          "type" : "string"
        }
      },
      "example" : {
        "facebook" : {
          "type" : "facebook",
          "email" : "clara@lavanapp.com",
          "id" : "2217",
          "token" : "asdfjkasdfjasjdfsdfkldskmehtuicj",
          "fcm_token" : "asdfjkasdfjasjdfsdfkldskmehtuicj"
        },
        "email" : {
          "type" : "email",
          "email" : "clara@lavanapp.com",
          "id" : "",
          "token" : "",
          "fcm_token" : "asdfjkasdfjasjdfsdfkldskmehtuicj"
        }
      }
    },
    "RefreshUserBody" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "type" : {
          "description" : "email o facebook",
          "type" : "string"
        },
        "email" : {
          "description" : "en caso de facebook",
          "type" : "string"
        },
        "password" : {
          "description" : "MD5 en caso de email",
          "type" : "string"
        }
      },
      "example" : {
        "type" : "email",
        "password" : "25f9e794323b453885f5181f1b624d0b"
      }
    },
    "ChangePasswordUser" : {
      "type" : "object",
      "required" : [ "old_password", "new_password", "confirm_new_password" ],
      "properties" : {
        "old_password" : {
          "description" : "MD5",
          "type" : "string"
        },
        "new_password" : {
          "description" : "MD5",
          "type" : "string"
        },
        "confirm_new_password" : {
          "description" : "MD5",
          "type" : "string"
        }
      },
      "example" : {
        "old_password" : "6ebe76c9fb411be97b3b0d48b791a7c9",
        "new_password" : "25f9e794323b453885f5181f1b624d0b",
        "confirm_new_password" : "25f9e794323b453885f5181f1b624d0b"
      }
    },
    "VerifyUser" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "description" : "OTA code",
          "type" : "string"
        }
      },
      "example" : {
        "code" : "12345"
      }
    },
    "FcmToken" : {
      "type" : "object",
      "required" : [ "fcm_token" ],
      "properties" : {
        "fcm_token" : {
          "description" : "FCM Token",
          "type" : "string"
        }
      },
      "example" : {
        "fcm_token" : "12345"
      }
    },
    "RecoverUserBody" : {
      "type" : "object",
      "required" : [ "email" ],
      "properties" : {
        "email" : {
          "description" : "User email",
          "type" : "string"
        }
      },
      "example" : {
        "email" : "clara@lavanapp.com"
      }
    },
    "PaymentInfoTokenBody" : {
      "type" : "object",
      "required" : [ "token" ],
      "properties" : {
        "token" : {
          "description" : "User payment method token",
          "type" : "string"
        }
      },
      "example" : {
        "token" : "eyJzdWIiOiJ0ZXN0aW5nX2FuZHJvaWRAbGF2YW5hcHAuY29tIiwiYWRtaW4iOmZhbHNlLCJjcmVhdGVkX29uIjoiMjAxNi0xMS0wMyAxMjo1NzoyNyIsInR5cGUiOiJhdXRoIiwiZXhwIjoxNDg2ODMzOTQ4LCJleHBfc2Vzc2lvbiI6MTQ4MTgyMjc0OH"
      }
    },
    "OrderBody" : {
      "type" : "object",
      "required" : [ "total_price", "subtotal", "total_amount_products", "complete_amount", "pickup_date", "pickup_time", "pickup_address_id", "expected_delivery_date", "expected_delivery_time", "delivery_address_id", "products" ],
      "properties" : {
        "total_price" : {
          "type" : "string"
        },
        "subtotal" : {
          "description" : "If the price has decimals, it is rounded to two. If no coupon is applied to the order, the subtotal will be equal to the total_price",
          "type" : "string"
        },
        "total_amount_products" : {
          "description" : "The real value of the products of the cart",
          "type" : "string"
        },
        "complete_amount" : {
          "description" : "Indicates whether the customer wants to complete the order amount up to the minimum required",
          "type" : "boolean"
        },
        "pickup_date" : {
          "type" : "string"
        },
        "pickup_time" : {
          "type" : "string"
        },
        "pickup_address_id" : {
          "type" : "string"
        },
        "expected_delivery_date" : {
          "type" : "string"
        },
        "expected_delivery_time" : {
          "type" : "string"
        },
        "delivery_address_id" : {
          "type" : "string"
        },
        "special_instructions" : {
          "type" : "string"
        },
        "products" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "integer"
              },
              "quantity" : {
                "type" : "integer"
              },
              "price" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "group_id" : {
                      "description" : "group type id",
                      "type" : "integer"
                    },
                    "attribute_id" : {
                      "description" : "attribute id if the attribute selected is select or radiobutton",
                      "type" : "integer"
                    },
                    "group_value" : {
                      "description" : "value of attribute multiplier (number of square meters, for example)",
                      "type" : "string"
                    }
                  },
                  "required" : [ "group_id" ]
                }
              }
            },
            "required" : [ "id", "quantity", "price" ]
          }
        },
        "coupon_id" : {
          "type" : "string"
        }
      },
      "example" : {
        "total_price" : "10",
        "subtotal" : "20",
        "total_amount_products" : "15.95",
        "complete_amount" : true,
        "pickup_date" : "2016-12-15",
        "pickup_time" : "18:00-19:00",
        "pickup_address_id" : "157",
        "expected_delivery_date" : "2016-12-16",
        "expected_delivery_time" : "13:00-13:30",
        "delivery_address_id" : "157",
        "special_instructions" : "Dejar al vecino si no hay nadie en casa",
        "products" : [ {
          "id" : 420,
          "quantity" : 1,
          "price" : "15.95",
          "attributes" : [ {
            "group_id" : 1,
            "attribute_id" : 1,
            "group_value" : ""
          } ]
        } ],
        "coupon_id" : "55"
      }
    },
    "CartBody" : {
      "type" : "object",
      "required" : [ "products" ],
      "properties" : {
        "products" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "integer"
              },
              "quantity" : {
                "type" : "integer"
              },
              "price" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "group_id" : {
                      "description" : "group type id",
                      "type" : "integer"
                    },
                    "attribute_id" : {
                      "description" : "attribute id if the attribute selected is select or radiobutton",
                      "type" : "integer"
                    },
                    "group_value" : {
                      "description" : "value of attribute multiplier (number of square meters, for example)",
                      "type" : "string"
                    }
                  },
                  "required" : [ "group_id" ]
                }
              }
            },
            "required" : [ "id", "quantity", "price" ]
          }
        }
      },
      "example" : {
        "products" : [ {
          "id" : 420,
          "quantity" : 1,
          "price" : "15.95",
          "attributes" : [ {
            "group_id" : 1,
            "attribute_id" : 1,
            "group_value" : ""
          } ]
        } ]
      }
    },
    "DeliveryBody" : {
      "type" : "object",
      "properties" : {
        "date" : {
          "description" : "selected pickup date",
          "type" : "string"
        },
        "slot_id" : {
          "description" : "slot id",
          "type" : "string"
        },
        "postal_code" : {
          "description" : "delivery postal code",
          "type" : "string"
        },
        "products" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string"
              }
            },
            "required" : [ "id" ]
          }
        }
      },
      "required" : [ "date", "slot_id", "postal_code", "products" ],
      "example" : {
        "date" : "2016-12-16",
        "slot_id" : "161",
        "postal_code" : "28043",
        "products" : {
          "id" : "420"
        }
      }
    },
    "AddressResponse" : {
      "type" : "object",
      "properties" : {
        "addresses" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "street" : {
                "type" : "string"
              },
              "street_number" : {
                "type" : "string"
              },
              "complement" : {
                "type" : "string"
              },
              "special_instructions" : {
                "type" : "string"
              },
              "postal_code" : {
                "type" : "string"
              },
              "township" : {
                "type" : "string"
              },
              "city" : {
                "type" : "string"
              },
              "province" : {
                "type" : "string"
              },
              "state" : {
                "type" : "string"
              }
            },
            "required" : [ "id", "street", "street_number", "postal_code", "city", "state", "township", "province" ]
          }
        }
      }
    },
    "Address" : {
      "type" : "object",
      "required" : [ "street", "street_number", "postal_code" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "street" : {
          "type" : "string"
        },
        "street_number" : {
          "type" : "string"
        },
        "complement" : {
          "type" : "string"
        },
        "special_instructions" : {
          "type" : "string"
        },
        "postal_code" : {
          "type" : "string"
        },
        "township" : {
          "type" : "string"
        }
      },
      "example" : {
        "name" : "Trabajo",
        "street" : "Carretera de Canillas",
        "street_number" : "138",
        "complement" : "",
        "special_instruction" : "",
        "postal_code" : "28043",
        "township" : "Madrid"
      }
    },
    "Schedules" : {
      "type" : "object",
      "required" : [ "date", "text_day", "closed", "slots" ],
      "properties" : {
        "date" : {
          "type" : "string"
        },
        "text_day" : {
          "type" : "string"
        },
        "closed" : {
          "type" : "boolean"
        },
        "slots" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "slot" : {
                "type" : "string"
              },
              "closed" : {
                "type" : "boolean"
              }
            },
            "required" : [ "id", "slot", "closed" ]
          }
        }
      }
    },
    "Payment_methods" : {
      "type" : "object",
      "required" : [ "id", "platform_id", "platform" ],
      "properties" : {
        "id" : {
          "type" : "integer"
        },
        "last_four_number" : {
          "type" : "string"
        },
        "expiration_card" : {
          "type" : "string"
        },
        "card_type" : {
          "type" : "string"
        },
        "card_holder_name" : {
          "type" : "string"
        },
        "email_account" : {
          "type" : "string"
        },
        "image_url" : {
          "type" : "string"
        },
        "platform_id" : {
          "type" : "integer"
        },
        "platform" : {
          "type" : "string"
        }
      }
    },
    "statescities" : {
      "type" : "object",
      "required" : [ "id", "name", "status", "cities" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "cities" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "state_id" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "status" : {
                "type" : "string"
              }
            },
            "required" : [ "id", "state_id", "name", "status" ]
          }
        }
      },
      "example" : {
        "schedule" : {
          "date" : "2016-12-16",
          "text_day" : "Hoy",
          "slots" : {
            "id" : "171",
            "slot" : "12:00 - 13:00",
            "closed" : false
          }
        }
      }
    },
    "CategoriesProductGet" : {
      "type" : "object",
      "required" : [ "id", "name", "image", "products" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "image" : {
          "type" : "string"
        },
        "products" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "image" : {
                "type" : "string"
              },
              "price" : {
                "type" : "string"
              },
              "currency" : {
                "type" : "string"
              }
            },
            "required" : [ "id", "name", "image", "price", "currency" ]
          }
        }
      },
      "example" : {
        "categories" : {
          "id" : "12",
          "name" : "Ofertas",
          "image" : "http://api.lavanapp.com/app/webroot/Uploads/Category/VW5TL0.png",
          "products" : {
            "id" : "420",
            "name" : "5 camisas",
            "image" : "http://api.lavanapp.com/app/webroot/Uploads/Products/LL3KK0.jpg",
            "price" : "15.95",
            "currency" : "€"
          }
        }
      }
    },
    "ProductDetailGet" : {
      "type" : "object",
      "required" : [ "id", "category_id", "name", "price", "description", "image", "preparation_time" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "category_id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "price" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "description_large" : {
          "type" : "string"
        },
        "image" : {
          "type" : "string"
        },
        "preparation_time" : {
          "description" : "default 24",
          "type" : "string"
        },
        "features" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "values" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "value" : {
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "value" ]
                }
              }
            },
            "required" : [ "id", "name", "values" ]
          }
        },
        "attribute_group" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "group_type_id" : {
                "description" : "it could be 1,2,3,4",
                "type" : "string"
              },
              "group_type" : {
                "description" : "it could be Multiplier,Checkbox,Select,Radiobutton",
                "type" : "string"
              },
              "inc_price" : {
                "description" : "it can be empty ('') if exists attributes associated; else, 0.00 default",
                "type" : "string"
              },
              "attributes" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "value" : {
                      "type" : "string"
                    },
                    "inc_price" : {
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "value", "inc_price" ]
                }
              }
            },
            "required" : [ "id", "name", "group_type_id", "group_type" ]
          }
        }
      },
      "example" : {
        "product" : {
          "id" : "420",
          "category_id" : "12",
          "name" : "5 camisas",
          "price" : "15.95",
          "description" : "5 camisas lavadas y planchadas.",
          "description_large" : "",
          "image" : "http://api.lavanapp.com/Uploads/Products/LL3KK0.jpg",
          "preparation_time" : "24",
          "currency" : "€",
          "feature" : {
            "id" : "1",
            "name" : "Temperatura de lavado",
            "values" : {
              "id" : "1",
              "value" : "10ºC"
            }
          },
          "attribute_group" : {
            "id" : "1",
            "name" : "Tejidos",
            "group_type_id" : "3",
            "group_type" : "Select",
            "inc_price" : "",
            "attributes" : {
              "id" : "1",
              "value" : "Seda",
              "inc_price" : "5.00"
            }
          }
        }
      }
    },
    "OrdersGet" : {
      "type" : "object",
      "required" : [ "id", "code", "total_price", "currency", "product_count", "created_on", "pickup_date", "pickup_time", "delivery_date", "delivery_time", "status_id", "status" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "total_price" : {
          "type" : "string"
        },
        "currency" : {
          "type" : "string"
        },
        "product_count" : {
          "type" : "string"
        },
        "created_on" : {
          "type" : "string"
        },
        "pickup_date" : {
          "type" : "string"
        },
        "pickup_time" : {
          "type" : "string"
        },
        "delivery_date" : {
          "type" : "string"
        },
        "delivery_time" : {
          "type" : "string"
        },
        "status_id" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "OrderDetailGet" : {
      "type" : "object",
      "required" : [ "code", "total_price", "currency", "product_count", "created_on", "pickup_date", "pickup_time", "delivery_date", "delivery_time", "status_id", "status", "special_instructions", "pickup_address", "delivery_address", "products" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "total_price" : {
          "type" : "string"
        },
        "currency" : {
          "type" : "string"
        },
        "product_count" : {
          "type" : "string"
        },
        "created_on" : {
          "type" : "string"
        },
        "pickup_date" : {
          "type" : "string"
        },
        "pickup_time" : {
          "type" : "string"
        },
        "delivery_date" : {
          "type" : "string"
        },
        "delivery_time" : {
          "type" : "string"
        },
        "status_id" : {
          "description" : "1 -> Ordered, 2 -> Collecting, 3 -> Cleaning, 4 -> Delivering, 5 -> Completed",
          "type" : "string"
        },
        "statuses" : {
          "description" : "Collection of order statuses",
          "type" : "object",
          "required" : [ "id", "name", "path_url", "img_name" ],
          "properties" : {
            "id" : {
              "type" : "integer"
            },
            "name" : {
              "description" : "status name",
              "type" : "string"
            },
            "path_url" : {
              "type" : "string"
            },
            "img_name" : {
              "description" : "Name of image",
              "type" : "string"
            }
          }
        },
        "status" : {
          "description" : "Pendiente de eliminar",
          "type" : "string"
        },
        "special_instructions" : {
          "type" : "string"
        },
        "coupon" : {
          "description" : "If a coupon has not been applied, it will be null",
          "type" : "object",
          "required" : [ "id", "name", "discount_type", "discount" ],
          "properties" : {
            "id" : {
              "type" : "string"
            },
            "name" : {
              "type" : "string"
            },
            "discount_type" : {
              "description" : "1 if discount is fixed an 2 if discount is percentage",
              "type" : "string"
            },
            "discount" : {
              "description" : "Coupon discount price without being applied to the order price",
              "type" : "string"
            }
          }
        },
        "pickup_address" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AddressResponse"
          }
        },
        "delivery_address" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AddressResponse"
          }
        },
        "products" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "num_products" : {
                "type" : "string"
              },
              "category" : {
                "type" : "string"
              },
              "product" : {
                "type" : "string"
              },
              "image" : {
                "type" : "string"
              },
              "preparation_time" : {
                "type" : "string"
              },
              "price" : {
                "type" : "string"
              },
              "multiplier_value" : {
                "type" : "string",
                "description" : "cantidad del atributo de tipo 'multiplier' si lo tuviera"
              },
              "multiplier_name" : {
                "type" : "string",
                "description" : "unidad con que se mide el atributo de tipo 'multiplier' si lo tuviera"
              },
              "attribute_group" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "name" : {
                      "type" : "string"
                    },
                    "group_type" : {
                      "type" : "string"
                    },
                    "inc_price" : {
                      "type" : "string"
                    },
                    "attributes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "id" : {
                            "type" : "string"
                          },
                          "value" : {
                            "type" : "string"
                          },
                          "inc_price" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  },
                  "required" : [ "id", "name", "group_type", "attributes" ]
                }
              }
            },
            "required" : [ "num_products", "category", "product", "image", "preparation_time", "price" ]
          }
        }
      }
    },
    "customExperienceBody" : {
      "type" : "object",
      "required" : [ "order_id", "consumer_id", "stars" ],
      "properties" : {
        "order_id" : {
          "description" : "identificador del pedido",
          "type" : "integer"
        },
        "consumer_id" : {
          "description" : "identificador del cliente",
          "type" : "integer"
        },
        "stars" : {
          "description" : "puntuación del pedido (del 1 al 5)",
          "type" : "integer"
        },
        "incidence_type" : {
          "description" : "si el campo puntuación es igual o menor que 3, se debe indicar el tipo de incidencia",
          "type" : "integer"
        },
        "comments" : {
          "description" : "comentarios opcionales",
          "type" : "string"
        }
      },
      "example" : {
        "example_with_high_score" : {
          "order_id" : 3141,
          "consumer_id" : 1496,
          "stars" : 5,
          "comments" : "Fácil e intuitivo"
        },
        "ex_low_score" : {
          "order_id" : 3141,
          "consumer_id" : 1496,
          "stars" : 2,
          "incidence_type" : 1,
          "comments" : "La mancha no ha desaparecido"
        }
      }
    }
  },
  "securityDefinitions" : {
    "Authorization" : {
      "type" : "apiKey",
      "in" : "header",
      "name" : "Authorization"
    },
    "ApiKey" : {
      "type" : "apiKey",
      "in" : "header",
      "name" : "apikey"
    },
    "tokenpayment" : {
      "type" : "apiKey",
      "in" : "header",
      "name" : "tokenpayment"
    }
  }
}