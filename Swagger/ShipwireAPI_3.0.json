{
  "swagger" : "2.0",
  "info" : {
    "title" : "Shipwire APIs",
    "description" : "Api description...",
    "termsOfService" : "",
    "contact" : {
      "email" : "contact@shipwire.com"
    },
    "license" : {
      "name" : "Private License",
      "url" : "http://www.shipwire.com"
    },
    "version" : "3.0"
  },
  "securityDefinitions" : {
    "apiKey" : {
      "type" : "apiKey",
      "name" : "apiKey",
      "in" : "header"
    }
  },
  "externalDocs" : {
    "description" : "Find out more about my website",
    "url" : "http://www.shipwire.com/w/developers"
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/jpreed/Shipwire-API/4.0",
  "schemes" : [ "https", "http" ],
  "paths" : {
    "/api/v3.1/addressValidation" : {
      "post" : {
        "description" : "Validate Address",
        "summary" : "Address Validation Request",
        "operationId" : "ApiV31AddressValidationPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/AddressValidationRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "The address provided is valid",
                "resourceLocation" : null,
                "resource" : {
                  "name" : "Mr. Smith",
                  "company" : "Ingram Micro Inc.",
                  "address1" : "3351 Michelson Dr STE 100",
                  "address2" : "",
                  "address3" : "",
                  "city" : "Irvine",
                  "state" : "CA",
                  "postalCode" : "92612-0697",
                  "country" : "US",
                  "phone" : "888-555-1212",
                  "isCommercial" : 1,
                  "isPoBox" : 0
                }
              }
            }
          },
          "422" : {
            "description" : "Unexpected error in API call. See HTTP response body for details.",
            "schema" : {
              "$ref" : "#/definitions/AddressValidationRequest422Response"
            },
            "examples" : {
              "application/json" : {
                "status" : 422,
                "message" : "The address provided is invalid",
                "warnings" : {
                  "0" : {
                    "address1" : {
                      "rules" : {
                        "invalidStreetAddress" : {
                          "message" : "Invalid street address submitted",
                          "ruleValue" : {
                            "suggestedValue" : "3351 MICHELSON DR STE 100"
                          }
                        }
                      }
                    },
                    "city" : {
                      "rules" : {
                        "invalidCityAddress" : {
                          "message" : "Invalid city submitted",
                          "ruleValue" : {
                            "suggestedValue" : "IRVINE"
                          }
                        }
                      }
                    },
                    "postalCode" : {
                      "rules" : {
                        "invalidPostalCodeAddress" : {
                          "message" : "Invalid postal code submitted",
                          "ruleValue" : {
                            "suggestedValue" : 92612
                          }
                        },
                        "invalidZIP4Address" : {
                          "message" : "Invalid postal code plus4 submitted",
                          "ruleValue" : {
                            "suggestedValue" : 697.0
                          }
                        }
                      }
                    }
                  }
                },
                "errors" : {
                  "0" : {
                    "phone" : {
                      "rules" : {
                        "Regex" : {
                          "message" : "Submitted phone number 888-555-121 is invalid",
                          "ruleValue" : {
                            "pattern" : "/^(?:1(?:[. -])?)?(?:\\((?=\\d{3}\\)))?([2-9]\\d{2})(?:(?<=\\(\\d{3})\\))? ?(?:(?<=\\d{3})[.-])?([2-9]\\d{2})[. -]?(\\d{4})(?: (?i:ext)\\.? ?(\\d{1,5}))?$/",
                            "htmlPattern" : null,
                            "match" : true
                          }
                        }
                      }
                    }
                  }
                },
                "resourceLocation" : null,
                "resource" : {
                  "name" : "Mr. Smith",
                  "company" : "Ingram Micro Inc.",
                  "address1" : "3351 Michalson Dr STE 100",
                  "address2" : "",
                  "address3" : "",
                  "city" : "Irvin",
                  "state" : "CA",
                  "postalCode" : "92615-0698",
                  "country" : "US",
                  "phone" : "888-555-121",
                  "isCommercial" : 1,
                  "isPoBox" : 0
                }
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3.1/containers" : {
      "get" : {
        "description" : "Get a collection of containers filtering by isActive, warehouse ids, warehouse external ids.",
        "summary" : "Get containers",
        "operationId" : "ApiV31ContainersWarehouseIdsWarehouseIdsWarehouseExternalIdsWarehouseExternalIdsByIsActiveAndTypeGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "isActive",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "Returns containers that are active or not. Valid options are 1 or 0."
        }, {
          "name" : "warehouseIds",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "Returns all containers that exist in the provided warehouse. Single warehouse's id or comma separated list of warehouse ids."
        }, {
          "name" : "warehouseExternalIds",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "Returns all containers that exist in the provided warehouse. Single warehouse's external id or comma separated list of warehouse external ids."
        }, {
          "name" : "type",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : ""
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GetContainersResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : "https://api.shipwire.com/api/v3.1/containers?offset=0&limit=20",
                "resource" : {
                  "offset" : 0,
                  "total" : 30,
                  "previous" : null,
                  "next" : null,
                  "items" : [ {
                    "resourceLocation" : "https://api.shipwire.com/api/v3.1/containers/245641",
                    "resource" : {
                      "id" : 245641,
                      "externalId" : null,
                      "name" : "6.00 X 6.00 X 6.00 box",
                      "type" : "box",
                      "isActive" : 1,
                      "warehouseId" : 3811,
                      "warehouseExternalId" : null,
                      "basis" : 5005.0,
                      "serviceSpecificCarrierCode" : null,
                      "dimensions" : {
                        "resourceLocation" : null,
                        "resource" : {
                          "length" : 6.0,
                          "width" : 6.0,
                          "height" : 6.0,
                          "weight" : 0.26,
                          "maxWeight" : 40.0,
                          "lengthUnit" : "IN",
                          "widthUnit" : "IN",
                          "heightUnit" : "IN",
                          "weightUnit" : "LB",
                          "maxWeightUnit" : "LB"
                        }
                      },
                      "values" : {
                        "resourceLocation" : null,
                        "resource" : {
                          "costValue" : 0.0,
                          "retailValue" : 0.0,
                          "costValueCurrency" : "USD",
                          "retailValueCurrency" : "USD"
                        }
                      }
                    }
                  }, {
                    "resourceLocation" : "https://api.shipwire.com/api/v3.1/containers/245651",
                    "resource" : {
                      "id" : 245651,
                      "externalId" : null,
                      "name" : "8.00 X 8.00 X 8.00 box",
                      "type" : "box",
                      "isActive" : 1,
                      "warehouseId" : 3811,
                      "warehouseExternalId" : null,
                      "basis" : 5015.0,
                      "serviceSpecificCarrierCode" : null,
                      "dimensions" : {
                        "resourceLocation" : null,
                        "resource" : {
                          "length" : 8.0,
                          "width" : 8.0,
                          "height" : 8.0,
                          "weight" : 0.45,
                          "maxWeight" : 40.0,
                          "lengthUnit" : "IN",
                          "widthUnit" : "IN",
                          "heightUnit" : "IN",
                          "weightUnit" : "LB",
                          "maxWeightUnit" : "LB"
                        }
                      },
                      "values" : {
                        "resourceLocation" : null,
                        "resource" : {
                          "costValue" : 0.0,
                          "retailValue" : 0.0,
                          "costValueCurrency" : "USD",
                          "retailValueCurrency" : "USD"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          }
        },
        "x-unitTests" : [ {
          "request" : {
            "method" : "GET",
            "uri" : "/api/v3.1/containers?isActive={isActive}&type={type}&warehouseIds={warehouseIds}&warehouseExternalIds={warehouseExternalIds}"
          },
          "expectedResponse" : {
            "x-allowExtraHeaders" : true,
            "x-bodyMatchMode" : "RAW",
            "x-arrayOrderedMatching" : false,
            "x-arrayCheckCount" : false,
            "x-matchResponseSchema" : true,
            "headers" : {
              "Authorization" : "Basic {base64-encoded username:password}"
            },
            "body" : "{    \"status\": 200,    \"message\": \"Successful\",    \"resourceLocation\": \"https://api.shipwire.com/api/v3.1/containers?offset=0&limit=20\",    \"resource\": {        \"offset\": 0,        \"total\": 30,        \"previous\": null,        \"next\": null,        \"items\": [{            \"resourceLocation\": \"https://api.shipwire.com/api/v3.1/containers/245641\",            \"resource\": {                \"id\": 245641,                \"externalId\": null,                \"name\": \"6.00 X 6.00 X 6.00 box\",                \"type\": \"box\",                \"isActive\": 1,                \"warehouseId\": 3811,                \"warehouseExternalId\": null,                \"basis\": \"5005.00\",                \"serviceSpecificCarrierCode\": null,                \"dimensions\": {                    \"resourceLocation\": null,                    \"resource\": {                        \"length\": \"6.00\",                        \"width\": \"6.00\",                        \"height\": \"6.00\",                        \"weight\": \"0.26\",                        \"maxWeight\": \"40.0000\",                        \"lengthUnit\": \"IN\",                        \"widthUnit\": \"IN\",                        \"heightUnit\": \"IN\",                        \"weightUnit\": \"LB\",                        \"maxWeightUnit\": \"LB\"                    }                },                \"values\": {                    \"resourceLocation\": null,                    \"resource\": {                        \"costValue\": \"0.00\",                        \"retailValue\": \"0.00\",                        \"costValueCurrency\": \"USD\",                        \"retailValueCurrency\": \"USD\"                    }                }            }        }, {            \"resourceLocation\": \"https://api.shipwire.com/api/v3.1/containers/245651\",            \"resource\": {                \"id\": 245651,                \"externalId\": null,                \"name\": \"8.00 X 8.00 X 8.00 box\",                \"type\": \"box\",                \"isActive\": 1,                \"warehouseId\": 3811,                \"warehouseExternalId\": null,                \"basis\": \"5015.00\",                \"serviceSpecificCarrierCode\": null,                \"dimensions\": {                    \"resourceLocation\": null,                    \"resource\": {                        \"length\": \"8.00\",                        \"width\": \"8.00\",                        \"height\": \"8.00\",                        \"weight\": \"0.45\",                        \"maxWeight\": \"40.0000\",                        \"lengthUnit\": \"IN\",                        \"widthUnit\": \"IN\",                        \"heightUnit\": \"IN\",                        \"weightUnit\": \"LB\",                        \"maxWeightUnit\": \"LB\"                    }                },                \"values\": {                    \"resourceLocation\": null,                    \"resource\": {                        \"costValue\": \"0.00\",                        \"retailValue\": \"0.00\",                        \"costValueCurrency\": \"USD\",                        \"retailValueCurrency\": \"USD\"                    }                }            }        }]    }}"
          },
          "x-testShouldPass" : true,
          "x-testEnabled" : true,
          "x-testName" : "Get containers1",
          "x-testDescription" : "Get a collection of containers filtering by isActive, warehouse ids, warehouse external ids."
        } ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "post" : {
        "description" : "",
        "summary" : "Create a new container",
        "operationId" : "ApiV31ContainersPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CreateANewContainerResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "warnings" : { },
                "errors" : { },
                "resourceLocation" : "https://api.shipwire.com/api/v3.1/containers?offset=0&limit=20",
                "resource" : {
                  "offset" : 0,
                  "total" : 1,
                  "previous" : null,
                  "next" : null,
                  "items" : [ {
                    "resourceLocation" : "https://api.shipwire.com/api/v3.1/containers/302281",
                    "resource" : {
                      "id" : 302281,
                      "externalId" : 1002,
                      "name" : "25.00 X 5.00 X 5.00 box",
                      "type" : "box",
                      "isActive" : 1,
                      "warehouseId" : 3071,
                      "warehouseExternalId" : null,
                      "basis" : 5045.0,
                      "serviceSpecificCarrierCode" : "FDX FT",
                      "dimensions" : {
                        "resourceLocation" : null,
                        "resource" : {
                          "length" : 20.0,
                          "width" : 5.0,
                          "height" : 5.0,
                          "weight" : 0.46,
                          "maxWeight" : 40.0,
                          "lengthUnit" : "IN",
                          "widthUnit" : "IN",
                          "heightUnit" : "IN",
                          "weightUnit" : "LB",
                          "maxWeightUnit" : "LB"
                        }
                      },
                      "values" : {
                        "resourceLocation" : null,
                        "resource" : {
                          "costValue" : 10.0,
                          "retailValue" : 50.0,
                          "costValueCurrency" : "USD",
                          "retailValueCurrency" : "USD"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3.1/containers/{id}" : {
      "get" : {
        "description" : "Get a container by container's id or external id.",
        "summary" : "?Get a container",
        "operationId" : "ApiV31ContainersByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The container's id or external id."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/getAContainerResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : "https://api.shipwire.com/api/v3.1/containers/302281",
                "resource" : {
                  "id" : 302281,
                  "externalId" : 1002,
                  "name" : "25.00 X 5.00 X 5.00 box update",
                  "type" : "box",
                  "isActive" : 1,
                  "warehouseId" : 3071,
                  "warehouseExternalId" : null,
                  "basis" : 5045.0,
                  "serviceSpecificCarrierCode" : "FDX FT",
                  "dimensions" : {
                    "resourceLocation" : null,
                    "resource" : {
                      "length" : 20.0,
                      "width" : 5.0,
                      "height" : 5.0,
                      "weight" : 0.46,
                      "maxWeight" : 40.0,
                      "lengthUnit" : "IN",
                      "widthUnit" : "IN",
                      "heightUnit" : "IN",
                      "weightUnit" : "LB",
                      "maxWeightUnit" : "LB"
                    }
                  },
                  "values" : {
                    "resourceLocation" : null,
                    "resource" : {
                      "costValue" : 10.0,
                      "retailValue" : 50.0,
                      "costValueCurrency" : "USD",
                      "retailValueCurrency" : "USD"
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "put" : {
        "description" : "Modify a container based on its containers's id or external id",
        "summary" : "Update a container",
        "operationId" : "ApiV31ContainersByIdPut",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The containers's id or external id."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "$ref" : "#/definitions/UpdateAContainerRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/UpdateAContainerResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "warnings" : { },
                "errors" : { },
                "resourceLocation" : "https://api.shipwire.com/api/v3.1/containers?offset=0&limit=20",
                "resource" : {
                  "offset" : 0,
                  "total" : 1,
                  "previous" : null,
                  "next" : null,
                  "items" : [ {
                    "resourceLocation" : "https://api.shipwire.com/api/v3.1/containers/302281",
                    "resource" : {
                      "id" : 302281,
                      "externalId" : 1002,
                      "name" : "25.00 X 5.00 X 5.00 box updated",
                      "type" : "box",
                      "isActive" : 1,
                      "warehouseId" : 3071,
                      "warehouseExternalId" : null,
                      "basis" : 5045.0,
                      "serviceSpecificCarrierCode" : "FDX FT",
                      "dimensions" : {
                        "resourceLocation" : null,
                        "resource" : {
                          "length" : 20.0,
                          "width" : 5.0,
                          "height" : 5.0,
                          "weight" : 0.46,
                          "maxWeight" : 40.0,
                          "lengthUnit" : "IN",
                          "widthUnit" : "IN",
                          "heightUnit" : "IN",
                          "weightUnit" : "LB",
                          "maxWeightUnit" : "LB"
                        }
                      },
                      "values" : {
                        "resourceLocation" : null,
                        "resource" : {
                          "costValue" : 10.0,
                          "retailValue" : 50.0,
                          "costValueCurrency" : "USD",
                          "retailValueCurrency" : "USD"
                        }
                      }
                    }
                  } ]
                }
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/orders" : {
      "get" : {
        "description" : "Get an itemized list of orders.",
        "summary" : "Get orders",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expand",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Expand order data in the response, instead of accessing directly via a URL (comma separated list).\nValid values are `holds`, `items` , `returns` and `trackings`, `splitOrders`, `pieces` or simply `all`.\nSee resources `Holds`, `Items`, `Returns`, `Trackings`, `Split Orders` and `Pieces` for information on the data model returned by this parameter."
        }, {
          "name" : "commerceName",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by commerceName (comma separated list)"
        }, {
          "name" : "transactionId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by transactionId (comma separated list)"
        }, {
          "name" : "orderId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by orderId (comma separated list)"
        }, {
          "name" : "orderNo",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by orderNo (comma separated list)"
        }, {
          "name" : "referrer",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by referer (comma separated list)"
        }, {
          "name" : "externalId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by externalId (comma separated list)"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by status (comma separated list of: `processed`, `canceled`, `completed`, `delivered`, `returned`, `submitted`, `held`, `tracked`)"
        }, {
          "name" : "holdType",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by order hold type and status = `held` (comma separated list)"
        }, {
          "name" : "holdTypeNot",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by order hold type is not and status = `held` (comma separated list)"
        }, {
          "name" : "excludeInProgressHolds",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter on status = held ignoring holds less than 60 seconds old (can be combined with holdType or holdTypeNot)"
        }, {
          "name" : "updatedAfter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Only show resources updated after this date (ISO 8601 format, ex: \"2014-05-30T13:08:29-07:00\")"
        }, {
          "name" : "purchaseOrderId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by purchaseOrderId (comma separated list)"
        }, {
          "name" : "vendorId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by vendorId (comma separated list)"
        }, {
          "name" : "vendorExternalId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by vendorExternalId (comma separated list)"
        }, {
          "name" : "warehouseId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by warehouseId (comma separated list)"
        }, {
          "name" : "warehouseExternalId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by warehouseExternalId (comma separated list)"
        }, {
          "name" : "createdAfter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by order created after this date (ISO 8601 format, ex: \"2014-05-30T13:08:29-07:00\")"
        }, {
          "name" : "createdBefore",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by order created before this date (ISO 8601 format, ex: \"2014-05-30T13:08:29-07:00\")"
        }, {
          "name" : "processedAfter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by order processed after this date (ISO 8601 format, ex: \"2014-05-30T13:08:29-07:00\")"
        }, {
          "name" : "processedBefore",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by order processed before this date (ISO 8601 format, ex: \"2014-05-30T13:08:29-07:00\")"
        }, {
          "name" : "completedAfter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by order completed after this date (ISO 8601 format, ex: \"2014-05-30T13:08:29-07:00\")"
        }, {
          "name" : "completedBefore",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by order completed before this date (ISO 8601 format, ex: \"2014-05-30T13:08:29-07:00\")"
        }, {
          "name" : "shipwireAnywhere",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter Shipwire Anywhere warehouse orders: `0` = Exclude Shipwire Anywhere, `1` = Include Only Shipwire Anywhere"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Sort by field(s) (comma separated list)"
        }, {
          "name" : "sortDirection",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Sort direction: `ASC` or `DESC` (comma separated list)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "post" : {
        "description" : "Create a new order.",
        "summary" : "Create an order",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "expand",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Expand order data in the response, instead of accessing directly via a URL (comma separated list).\nValid values are `holds`, `items` , `returns` and `trackings`, `splitOrders`, `pieces` or simply `all`.\nSee resources `Holds`, `Items`, `Returns`, `Trackings`, `Split Orders` and `Pieces` for information on the data model returned by this parameter."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "See GETLIST response"
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/orders/{id} or /api/v3/orders/E{externalId}" : {
      "get" : {
        "description" : "Get information about this order.",
        "summary" : "Get order",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersOrApiV3OrdersEByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        }, {
          "name" : "expand",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Expand order data in the response, instead of providing URIs to the data.\nValid values are `holds`, `items` , `returns` and `trackings`, `splitOrders`, `pieces` or simply `all`.\nSee resources `Holds`, `Items`, `Returns`, `Trackings`, `Split Orders` and `Pieces` for information on the data model returned by this parameter."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "put" : {
        "description" : "Modify information about this order.",
        "summary" : "Update an order",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersOrApiV3OrdersEByIdAndExternalIdPut",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "expand",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Expand order data in the response, instead of providing URIs to the data.\nValid values are `holds`, `items` , `returns` and `trackings`, `splitOrders`, `pieces` or simply `all`.\nSee resources `Holds`, `Items`, `Returns`, `Trackings`, `Split Orders` and `Pieces` for information on the data model returned by this parameter."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "See GETLIST response body"
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/orders/{id}/cancel or /api/v3/orders/E{externalId}/cancel" : {
      "post" : {
        "description" : "Cancel this order.",
        "summary" : "Cancel an order",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersCancelOrApiV3OrdersECancelByIdAndExternalIdPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/orders/{id}/items or /api/v3/orders/E{externalId}/items" : {
      "get" : {
        "description" : "Get the contents of this order.",
        "summary" : "Get items detail",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersItemsOrApiV3OrdersEItemsByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/orders/{id}/holds or /api/v3/orders/E{externalId}/holds" : {
      "get" : {
        "description" : "Get the list of holds, if any, on an order.",
        "summary" : "Get holds detail",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersHoldsOrApiV3OrdersEHoldsByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        }, {
          "name" : "includeCleared",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Include holds that are cleared (0: no, 1: yes)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/orders/{id}/trackings or /api/v3/orders/E{externalId}/trackings" : {
      "get" : {
        "description" : "Get tracking information for this order.",
        "summary" : "Get trackings detail",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersTrackingsOrApiV3OrdersETrackingsByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "post" : {
        "description" : "Create new trackings endpoint works only for shipwire anywhere warehouse orders.",
        "summary" : "Create tracking for an order",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersTrackingsOrApiV3OrdersETrackingsByIdAndExternalIdPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "$ref" : "#/definitions/CreateTrackingForAnOrderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "See trackings GETLIST response"
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/orders/{id}/commercialInvoice or /api/v3/orders/E{externalId}/commercialInvoice" : {
      "get" : {
        "description" : "Get the shipping order Commercial Invoice of this order.",
        "summary" : "Get shipping order Commercial Invoice",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersCommercialInvoiceOrApiV3OrdersECommercialInvoiceByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/orders/{id}/packingList or /api/v3/orders/E{externalId}/packingList" : {
      "get" : {
        "description" : "Get the shipping order Packing List of this order.",
        "summary" : "Get shipping order Packing List",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersPackingListOrApiV3OrdersEPackingListByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/orders/{id}/shippingLabel or /api/v3/orders/E{externalId}/shippingLabel" : {
      "get" : {
        "description" : "Get the shipping order Shipping Label of this order.",
        "summary" : "Get shipping order Shipping Label",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersShippingLabelOrApiV3OrdersEShippingLabelByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GetShippingOrderShippingLabelResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : "https://api.shipwire.com/api/v3/orders/12345/shippingLabel",
                "resource" : {
                  "orderId" : 12345,
                  "externalId" : null,
                  "warehouseId" : 84141,
                  "warehouseExternalId" : "external-retailer11",
                  "vendorId" : 20321,
                  "vendorExternalId" : null,
                  "documentLocation" : "https://api.shipwire.com/api/v3/orders/12345/shippingLabel"
                }
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/orders/{id}/splitOrders or /api/v3/orders/E{externalId}/splitOrders" : {
      "get" : {
        "description" : "Get Split Orders information for this order.",
        "summary" : "Get Split Orders detail",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersSplitOrdersOrApiV3OrdersESplitOrdersByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "See GETLIST response body"
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/orders/{id}/pieces or /api/v3/orders/E{externalId}/pieces" : {
      "get" : {
        "description" : "Get the shipping pieces of this order.",
        "summary" : "Get shipping pieces",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersPiecesOrApiV3OrdersEPiecesByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/orders/{id}/extendedAttributes or /api/v3/orders/E{externalId}/extendedAttributes" : {
      "get" : {
        "description" : "Get the shipping order extended attributes of this order.",
        "summary" : "Get shipping order extended attributes",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersExtendedAttributesOrApiV3OrdersEExtendedAttributesByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/orders/{id}/returns or /api/v3/orders/E{externalId}/returns" : {
      "get" : {
        "description" : "Get any returns associated with this order.",
        "summary" : "Get returns detail",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersReturnsOrApiV3OrdersEReturnsByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "See Returns API GETLIST response body"
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/orders/{id}/holds/clear or /api/v3/orders/E{externalId}/holds/clear" : {
      "post" : {
        "description" : "clear hold on this order.",
        "summary" : "Clear the hold",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersHoldsClearOrApiV3OrdersEHoldsClearByIdAndExternalIdPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ClearTheHoldResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Manual hold cleared (if exists)",
                "resourceLocation" : null
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/orders/{id}/markProcessed or /api/v3/orders/E{externalId}/markProcessed" : {
      "post" : {
        "description" : "Mark this order to processed state. This endpoint works only for shipwire anywhere warehouse orders.",
        "summary" : "Mark the order processed",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersMarkProcessedOrApiV3OrdersEMarkProcessedByIdAndExternalIdPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/MarkTheOrderProcessedResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : null
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/orders/{id}/markSubmitted or /api/v3/orders/E{externalId}/markSubmitted" : {
      "post" : {
        "description" : "Mark this order to submitted state. This endpoint works only for shipwire anywhere warehouse orders.",
        "summary" : "Mark the order submitted",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersMarkSubmittedOrApiV3OrdersEMarkSubmittedByIdAndExternalIdPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/MarkTheOrderSubmittedResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : null
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/orders/{id}/markComplete or /api/v3/orders/E{externalId}/markComplete" : {
      "post" : {
        "description" : "Mark this order to complete state. This endpoint works only for shipwire anywhere warehouse orders.",
        "summary" : "Mark the order completed",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV3OrdersMarkCompleteOrApiV3OrdersEMarkCompleteByIdAndExternalIdPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The order's external ID (must be prefixed with \"E\")."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/MarkTheOrderCompletedResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : null
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3.1/orders/generateLabels/{id}" : {
      "get" : {
        "description" : "Get Job status by Job ID",
        "summary" : "Get Generate Labels Job status and PDF download URL",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV31OrdersGenerateLabelsAPIByIdAndAcceptGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "description" : "The Job ID returned when the POST request was made"
        }, {
          "name" : "accept",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "To retrieve successfully generated labels use query parameter `?accept=pdf` or use header `Content-Type: application/pdf`"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "post" : {
        "description" : "Asynchronously generate labels for multiple orders. The Job will return a combined PDF download URL. Job status can be retrieved via polling or webhook subscription.\nAPI will return HTTP 422 if one of the following conditions are true:\n+ Order IDs are invalid\n+ Orders are on hold\n+ Orders' status is not `processed` or `submitted`\n+ Orders' warehouse is not Shipwire Anywhere none-routing only",
        "summary" : "Initiate Generate Labels Job",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV31OrdersGenerateLabelsAPIByIdAndAcceptPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "description" : "The Job ID returned when the POST request was made"
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "accept",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "To retrieve successfully generated labels use query parameter `?accept=pdf` or use header `Content-Type: application/pdf`"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "+ Body\n            See: GET response\n\n    + Schema\n            See: GET schema"
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3.1/orders/generatePackingLists/{id}" : {
      "get" : {
        "description" : "Get Job status by Job ID",
        "summary" : "Get Generate Packing Lists Job status and PDF download URL",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV31OrdersGeneratePackingListsAPIByIdAndAcceptGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "description" : "The Job ID returned when the POST request was made"
        }, {
          "name" : "accept",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "To retrieve successfully generated labels use query parameter `?accept=pdf` or use header `Content-Type: application/pdf`"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "+ Body\n\n                See: Multiple shipping labels GET response\n\n    + Schema\n                See: Multiple shipping labels GET schema response"
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "post" : {
        "description" : "Asynchronously generate packing lists for multiple orders. The Job will return a combined PDF download URL. Job status can be retrieved via polling or webhook subscription.\nAPI will return HTTP 422 if order IDs are invalid",
        "summary" : "Initiate Generate Packing Lists Job",
        "tags" : [ "Orders" ],
        "operationId" : "ApiV31OrdersGeneratePackingListsAPIByIdAndAcceptPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "description" : "The Job ID returned when the POST request was made"
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "accept",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "To retrieve successfully generated labels use query parameter `?accept=pdf` or use header `Content-Type: application/pdf`"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "+ Body\n            See: Multiple shipping labels GET response\n\n    + Schema\n            See: Multiple shipping labels GET schema"
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/products" : {
      "get" : {
        "description" : "Get an itemized list of products.",
        "summary" : "Get collection",
        "tags" : [ "Products" ],
        "operationId" : "ApiV3ProductsGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expand",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Expand specific product data in the response -comma separated list.\nValid values are: `all`, `alternateNames`, `alternativeDescriptions`, `masterCase`, `enqueuedDimensions`, `flags`, `dimensions`, `technicalData`, `innerPack`, `pallet`, `values`, `kitContent`, `inclusionRules`, and `virtualKitContent`."
        }, {
          "name" : "description",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter products by matching their \"description\" property."
        }, {
          "name" : "sku",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter products by matching their \"sku\" property."
        }, {
          "name" : "storageConfiguration",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter products by matching their \"storageConfiguration\" property.\nValid values are: `INDIVIDUAL_ITEM`, `INNER_PACK`, `MASTER_CASE`, `PALLET`, `KIT`."
        }, {
          "name" : "classification",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter products by their classification.\nValid values are `baseProduct`, `kit`, `virtualKit`, `marketingInsert`."
        }, {
          "name" : "includeArchived",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter products by their archived status.\nValid values are: `onlyArchived`, `includeArchived`, `excludeArchived`."
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter products by their status -comma separated list.\nValid values are `notinuse`, `instock`, `outofstock`."
        }, {
          "name" : "flow",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter products by their current step in the flow.\nValid values are `manage`, `kit`, `virtualKit`, `order`, `receiving`, and `quote`."
        }, {
          "name" : "ids",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter products by their ID -comma separated list."
        }, {
          "name" : "externalId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filters products by their externalId -comma seperated list"
        }, {
          "name" : "vendorId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filters products by vendorId -comma seperated list"
        }, {
          "name" : "vendorExternalId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filters products by vendorEXternalId -comma seperated list"
        }, {
          "name" : "skus",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter products by their SKU -comma separated list."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "// /products {    \"status\": 200,    \"message\": \"Successful\",    \"resourceLocation\": \"https://api.shipwire.com/api/v3/products?offset=0&limit=20&expand=all\",    \"resource\": {        \"previous\": null,        \"next\": null,        \"total\": 74,        \"items\": [            {                \"sku\": \"baseProduct1\",                \"classification\": \"baseProduct\",                ...            },            {                \"sku\": \"marketingInsert1\",                \"classification\": \"marketingInsert\",                ...            },            {                \"sku\": \"kit1\",                \"classification\": \"kit\",                ...            },            {                \"sku\": \"virtualKit1\",                \"classification\": \"virtualKit\",                ...            }        ]    }}"
            }
          }
        },
        "x-unitTests" : [ {
          "request" : {
            "method" : "GET",
            "uri" : "/api/v3/products"
          },
          "expectedResponse" : {
            "x-allowExtraHeaders" : true,
            "x-bodyMatchMode" : "RAW",
            "x-arrayOrderedMatching" : false,
            "x-arrayCheckCount" : false,
            "x-matchResponseSchema" : true,
            "headers" : { },
            "body" : "// /products {    \"status\": 200,    \"message\": \"Successful\",    \"resourceLocation\": \"https://api.shipwire.com/api/v3/products?offset=0&limit=20&expand=all\",    \"resource\": {        \"previous\": null,        \"next\": null,        \"total\": 74,        \"items\": [            {                \"sku\": \"baseProduct1\",                \"classification\": \"baseProduct\",                ...            },            {                \"sku\": \"marketingInsert1\",                \"classification\": \"marketingInsert\",                ...            },            {                \"sku\": \"kit1\",                \"classification\": \"kit\",                ...            },            {                \"sku\": \"virtualKit1\",                \"classification\": \"virtualKit\",                ...            }        ]    }}"
          },
          "x-testShouldPass" : true,
          "x-testEnabled" : true,
          "x-testName" : "Get collection1",
          "x-testDescription" : "Get an itemized list of products."
        } ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "put" : {
        "description" : "Modify products of any classification.",
        "summary" : "Update products in the collection",
        "tags" : [ "Products" ],
        "operationId" : "ApiV3ProductsPut",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "See the `getlist products` response for each classification."
            }
          }
        },
        "x-unitTests" : [ {
          "request" : {
            "method" : "PUT",
            "uri" : "/api/v3/products",
            "body" : "/*** You can modify multiple Products in one PUT request. To do so, list all Product resources inside a JSON array, declare the classification, and send that in the PUT body.* See each classification endpoint for details.** [*    {*        “classification”:kit,*        (product resource)*        ...*    },*    {*        “classification”:baseProduct,*        (product resource)*        ...*    },*    {*        ...*    },*    ...* ]** Where \"product resource\" is any resource that is individually defined under:* POST /api/v3/product (base product)* POST /api/v3/products (marketing insert)* POST /api/v3/products (kit)* POST /api/v3/products (virtual kit)*/See the `Create products` request."
          },
          "expectedResponse" : {
            "x-allowExtraHeaders" : true,
            "x-bodyMatchMode" : "RAW",
            "x-arrayOrderedMatching" : false,
            "x-arrayCheckCount" : false,
            "x-matchResponseSchema" : true,
            "headers" : { },
            "body" : "See the `getlist products` response for each classification."
          },
          "x-testShouldPass" : true,
          "x-testEnabled" : true,
          "x-testName" : "Update products in the collection1",
          "x-testDescription" : "Modify products of any classification."
        } ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "post" : {
        "description" : "Create new products of any classification.",
        "summary" : "Add products to the collection",
        "tags" : [ "Products" ],
        "operationId" : "ApiV3ProductsPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "Create new products of any classification.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "/*** You can receive resources of any of the four classifications.* refere to the specific resources for the response body. ** POST /api/v3/product (base product)* POST /api/v3/products (marketing insert)* POST /api/v3/products (kit)* POST /api/v3/products (virtual kit)*//{    \"status\": 200,    \"resourceLocation\": \"https://api.shipwire.com/api/v3/products?offset=0&limit=1&expand=all\",    \"message\": \"Successful\",    \"resource\": {        \"previous\": null,        \"next\": null,        \"total\": 2,        \"items\": [            {                \"resourceLocation\": \"http://api.shipwire.com/api/v3/products/baseProducts/1097\",                \"resource\": {                    \"classification\": \"baseProduct\",                    \"batteryConfiguration\": \"ISBATTERY\",                    \"masterCase\": {                        \"resourceLocation\": null,                        \"resource\": {                            \"sku\": \"singleMaster2\",                            \"dimensions\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"weight\": \"4.00\",                                    \"heightUnit\": \"IN\",                                    \"height\": \"4.0\",                                    \"weightUnit\": \"LB\",                                    \"width\": \"4.0\",                                    \"length\": \"4.0\",                                    \"lengthUnit\": \"IN\",                                    \"widthUnit\": \"IN\"                                }                            },                            \"values\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"costValueCurrency\": \"USD\",                                    \"wholesaleValue\": \"2.00\",                                    \"costValue\": \"1.00\",                                    \"wholesaleValueCurrency\": \"USD\",                                    \"retailValue\": \"4.00\",                                    \"retailValueCurrency\": \"USD\"                                }                            },                            \"externalId\": \"narp3\",                            \"individualItemsPerCase\": 10,                            \"flags\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"isPackagedReadyToShip\": 0                                }                            },                            \"productId\": 1099,                            \"description\": \"masterdesc\"                        }                    },                    \"itemCount\": 1,                    \"id\": 1097,                    \"sku\": \"baseball\",                    \"archivedDate\": null,                    \"enqueuedDimensions\": {                        \"resourceLocation\": \"http://api.shipwire.com/api/v3/products/baseProducts/1097/enqueuedDimensions?offset=0&limit=20&expand=all\",                        \"resource\": {                            \"previous\": null,                            \"next\": null,                            \"total\": 0,                            \"items\": [                            ],                            \"offset\": 0                        }                    },                    \"dimensions\": {                        \"resourceLocation\": null,                        \"resource\": {                            \"weight\": \"1.00\",                            \"heightUnit\": \"IN\",                            \"height\": \"1.0\",                            \"weightUnit\": \"LB\",                            \"width\": \"1.0\",                            \"length\": \"1.0\",                            \"lengthUnit\": \"IN\",                            \"widthUnit\": \"IN\"                        }                    },                    \"innerPack\": {                        \"resourceLocation\": null,                        \"resource\": {                            \"sku\": \"singleInner2\",                            \"dimensions\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"weight\": \"2.00\",                                    \"heightUnit\": \"IN\",                                    \"height\": \"2.0\",                                    \"weightUnit\": \"LB\",                                    \"width\": \"2.0\",                                    \"length\": \"2.0\",                                    \"lengthUnit\": \"IN\",                                    \"widthUnit\": \"IN\"                                }                            },                            \"values\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"costValueCurrency\": \"USD\",                                    \"wholesaleValue\": \"2.00\",                                    \"costValue\": \"1.00\",                                    \"wholesaleValueCurrency\": \"USD\",                                    \"retailValue\": \"4.00\",                                    \"retailValueCurrency\": \"USD\"                                }                            },                            \"externalId\": \"narp2\",                            \"individualItemsPerCase\": 2,                            \"flags\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"isPackagedReadyToShip\": 0                                }                            },                            \"productId\": 1098,                            \"description\": \"innerdesc\"                        }                    },                    \"pallet\": {                        \"resourceLocation\": null,                        \"resource\": {                            \"sku\": \"singlePallet2\",                            \"dimensions\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"weight\": \"8.00\",                                    \"heightUnit\": \"IN\",                                    \"height\": \"8.0\",                                    \"weightUnit\": \"LB\",                                    \"width\": \"8.0\",                                    \"length\": \"8.0\",                                    \"lengthUnit\": \"IN\",                                    \"widthUnit\": \"IN\"                                }                            },                            \"values\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"costValueCurrency\": \"USD\",                                    \"wholesaleValue\": \"2.00\",                                    \"costValue\": \"1.00\",                                    \"wholesaleValueCurrency\": \"USD\",                                    \"retailValue\": \"4.00\",                                    \"retailValueCurrency\": \"USD\"                                }                            },                            \"externalId\": \"narp4\",                            \"individualItemsPerCase\": 1000,                            \"flags\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"isPackagedReadyToShip\": 0                                }                            },                            \"productId\": 1100,                            \"description\": \"palletdesc\"                        }                    },                    \"externalId\": \"narp\",                    \"alternateNames\": {                        \"resourceLocation\": \"http://api.shipwire.com/api/v3/products/baseProducts/1097/alternateNames?offset=0&limit=20&expand=all\",                        \"resource\": {                            \"previous\": null,                            \"next\": null,                            \"total\": 1,                            \"items\": [                                {                                    \"resourceLocation\": null,                                    \"resource\": {                                        \"externalId\": \"narp\",                                        \"name\": \"alias2\",                                        \"productId\": 1097                                    }                                }                            ],                            \"offset\": 0                        }                    },                    \"values\": {                        \"resourceLocation\": null,                        \"resource\": {                            \"costValueCurrency\": \"USD\",                            \"wholesaleValue\": \"2.00\",                            \"costValue\": \"1.00\",                            \"wholesaleValueCurrency\": \"USD\",                            \"retailValue\": \"4.00\",                            \"retailValueCurrency\": \"USD\"                        }                    },                    \"status\": \"notinuse\",                    \"category\": \"TOYS_SPORTS_HOBBIES\",                    \"description\": \"The best sports watch. Ever.\",                    \"flags\": {                        \"resourceLocation\": null,                        \"resource\": {                            \"isMedia\": 0,                            \"isDeletable\": 1,                            \"hasPallet\": 1,                            \"isPackagedReadyToShip\": 0,                            \"hasMasterCase\": 1,                            \"isFragile\": 0,                            \"isArchivable\": 1,                            \"isLiquid\": 1,                            \"isDangerous\": 0,                            \"isPerishable\": 0,                            \"hasEditRestrictions\": 0,                            \"hasInnerPack\": 1,                            \"isAdult\": 1                        }                    },                    \"creationDate\": \"2015-02-09T14:37:48-08:00\",                    \"hsCode\": \"010612\",                    \"htscode\": \"0063079075\",                    \"eccn\": \"123456\",                    \"countryOfOrigin\": \"US\",                    \"storageConfiguration\": \"INDIVIDUAL_ITEM\",                    \"technicalData\": {                        \"resourceLocation\": null,                        \"resource\": {                            \"battery\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"capacityUnit\": null,                                    \"capacity\": \"6.000\",                                    \"batteryWeight\": \"3.000\",                                    \"numberOfCells\": 7,                                    \"type\": \"ALKALINE\",                                    \"numberOfBatteries\": 5,                                    \"productId\": 1097                                }                            }                        }                    }                }            },            {                \"resourceLocation\": \"http://api.shipwire.com/api/v3/products/virtualKits/500000034\",                \"resource\": {                    \"id\": 500000034,                    \"externalId\": null,                    \"sku\": \"myVirtualKit\",                    \"creationDate\": \"2015-02-09T14:44:07-08:00\",                    \"description\": \"This is my virtual kit.\",                    \"status\": \"outofstock\",                    \"virtualKitContent\": {                        \"resourceLocation\": \"http://api.shipwire.com/api/v3/products/virtualKits/500000034/content?offset=0&limit=20&expand=all\",                        \"resource\": {                            \"offset\": 0,                            \"total\": 2,                            \"previous\": null,                            \"next\": null,                            \"items\": [                                {                                    \"resourceLocation\": null,                                    \"resource\": {                                        \"productId\": 447,                                        \"externalId\": \"zip\",                                        \"quantity\": 2                                    }                                },                                {                                    \"resourceLocation\": null,                                    \"resource\": {                                        \"productId\": 435,                                        \"externalId\": \"shazzam\",                                        \"quantity\": 8                                    }                                }                            ]                        }                    },                    \"flags\": {                        \"resourceLocation\": null                    }                }            },            {                ...            }        ],        \"offset\": 0    }}"
            }
          }
        },
        "x-unitTests" : [ {
          "request" : {
            "method" : "POST",
            "uri" : "/api/v3/products",
            "body" : "/*** You can create multiple Products in one POST request.* To do so, list all Product resources inside a JSON array, * declare the classification, and send that in the POST body.* See each classification endpoint for details.**    [*        {*            “classification”:kit,*            (product resource)*            ...*        },*        {*            “classification”:baseProduct,*            (product resource)*            ...*        },*        {*        ...*        },*        ...*    ]** Where \"product resource\" is any resource that is individually defined under:* POST /api/v3/product (base product)* POST /api/v3/products (marketing insert)* POST /api/v3/products (kit)* POST /api/v3/products (virtual kit)*//[    {        \"sku\": \"sportsWatch\",        \"externalId\": \"narp\",        \"vendorId\": 34,        \"vendorExternalId\": \"veid34\"        \"classification\": \"baseProduct\",        \"description\": \"The best sports watch. Ever.\",        \"hsCode\": \"010612\",        \"htscode\": \"0063079075\",        \"eccn\": \"123456\",        \"countryOfOrigin\": \"US\",        \"category\": \"TOYS_SPORTS_HOBBIES\",        \"batteryConfiguration\": \"ISBATTERY\",        \"values\": {            \"costValue\": 1,            \"wholesaleValue\": 2,            \"retailValue\": 4,            \"costCurrency\": \"USD\",            \"wholesaleCurrency\": \"USD\",            \"retailCurrency\": \"USD\"        },        \"alternateNames\": [            {                \"name\": \"SuperSportsWatch1\"            }        ],        \"alternateDescriptions\": [            {                \"description\": \"I am German\"            }        ],        \"dimensions\": {            \"length\": 1,            \"width\": 1,            \"height\": 1,            \"weight\": 1        },        \"technicalData\": {            \"battery\": {                \"type\": \"ALKALINE\",                \"batteryWeight\": 3,                \"numberOfBatteries\": 5,                \"capacity\": 6,                \"numberOfCells\": 7,                \"capacityUnit\": \"WATTHOUR\"            }        },        \"flags\": {            \"isPackagedReadyToShip\": 0,            \"isFragile\": 1,            \"isDangerous\": 0,            \"isPerishable\": 0,            \"isMedia\": 0,            \"isAdult\": 1,            \"isLiquid\": 0,            \"hasInnerPack\": 1,            \"hasMasterCase\": 1,            \"hasPallet\": 1        },        \"innerPack\": {            \"individualItemsPerCase\": 2,            \"externalId\": \"narp2\",            \"sku\": \"singleInner2\",            \"description\": \"innerdesc\",            \"values\": {                \"costValue\": 1,                \"wholesaleValue\": 2,                \"retailValue\": 4,                \"costCurrency\": \"USD\",                \"wholesaleCurrency\": \"USD\",                \"retailCurrency\": \"USD\"            },            \"dimensions\": {                \"length\": 2,                \"width\": 2,                \"height\": 2,                \"weight\": 2            },            \"flags\": {                \"isPackagedReadyToShip\": 0            }        },        \"masterCase\": {            \"individualItemsPerCase\": 10,            \"externalId\": \"narp3\",            \"sku\": \"singleMaster2\",            \"description\": \"masterdesc\",            \"values\": {                \"costValue\": 1,                \"wholesaleValue\": 2,                \"retailValue\": 4,                \"costCurrency\": \"USD\",                \"wholesaleCurrency\": \"USD\",                \"retailCurrency\": \"USD\"            },            \"dimensions\": {                \"length\": 4,                \"width\": 4,                \"height\": 4,                \"weight\": 4            },            \"flags\": {                \"isPackagedReadyToShip\": 0            }        },        \"pallet\": {            \"individualItemsPerCase\": 1000,            \"externalId\": \"narp4\",            \"sku\": \"singlePallet2\",            \"description\": \"palletdesc\",            \"values\": {                \"costValue\": 1,                \"wholesaleValue\": 2,                \"retailValue\": 4,                \"costCurrency\": \"USD\",                \"wholesaleCurrency\": \"USD\",                \"retailCurrency\": \"USD\"            },            \"dimensions\": {                \"length\": 8,                \"width\": 8,                \"height\": 8,                \"weight\": 8            },            \"flags\": {                \"isPackagedReadyToShip\": 0            }        }    },    {        \"sku\": \"myVirtualKit\",        \"externalId\": \"vkiteid43\",        \"classification\": \"virtualKit\",        \"description\": \"This is my virtual kit.\",        \"virtualKitContent\": [            {                \"productId\": 447,                \"quantity\": 2            },            {                \"externalId\": \"shazzam\",                \"quantity\": 8            }        ]    },    {        ...    }]"
          },
          "expectedResponse" : {
            "x-allowExtraHeaders" : true,
            "x-bodyMatchMode" : "RAW",
            "x-arrayOrderedMatching" : false,
            "x-arrayCheckCount" : false,
            "x-matchResponseSchema" : true,
            "headers" : { },
            "body" : "/*** You can receive resources of any of the four classifications.* refere to the specific resources for the response body. ** POST /api/v3/product (base product)* POST /api/v3/products (marketing insert)* POST /api/v3/products (kit)* POST /api/v3/products (virtual kit)*//{    \"status\": 200,    \"resourceLocation\": \"https://api.shipwire.com/api/v3/products?offset=0&limit=1&expand=all\",    \"message\": \"Successful\",    \"resource\": {        \"previous\": null,        \"next\": null,        \"total\": 2,        \"items\": [            {                \"resourceLocation\": \"http://api.shipwire.com/api/v3/products/baseProducts/1097\",                \"resource\": {                    \"classification\": \"baseProduct\",                    \"batteryConfiguration\": \"ISBATTERY\",                    \"masterCase\": {                        \"resourceLocation\": null,                        \"resource\": {                            \"sku\": \"singleMaster2\",                            \"dimensions\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"weight\": \"4.00\",                                    \"heightUnit\": \"IN\",                                    \"height\": \"4.0\",                                    \"weightUnit\": \"LB\",                                    \"width\": \"4.0\",                                    \"length\": \"4.0\",                                    \"lengthUnit\": \"IN\",                                    \"widthUnit\": \"IN\"                                }                            },                            \"values\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"costValueCurrency\": \"USD\",                                    \"wholesaleValue\": \"2.00\",                                    \"costValue\": \"1.00\",                                    \"wholesaleValueCurrency\": \"USD\",                                    \"retailValue\": \"4.00\",                                    \"retailValueCurrency\": \"USD\"                                }                            },                            \"externalId\": \"narp3\",                            \"individualItemsPerCase\": 10,                            \"flags\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"isPackagedReadyToShip\": 0                                }                            },                            \"productId\": 1099,                            \"description\": \"masterdesc\"                        }                    },                    \"itemCount\": 1,                    \"id\": 1097,                    \"sku\": \"baseball\",                    \"archivedDate\": null,                    \"enqueuedDimensions\": {                        \"resourceLocation\": \"http://api.shipwire.com/api/v3/products/baseProducts/1097/enqueuedDimensions?offset=0&limit=20&expand=all\",                        \"resource\": {                            \"previous\": null,                            \"next\": null,                            \"total\": 0,                            \"items\": [                            ],                            \"offset\": 0                        }                    },                    \"dimensions\": {                        \"resourceLocation\": null,                        \"resource\": {                            \"weight\": \"1.00\",                            \"heightUnit\": \"IN\",                            \"height\": \"1.0\",                            \"weightUnit\": \"LB\",                            \"width\": \"1.0\",                            \"length\": \"1.0\",                            \"lengthUnit\": \"IN\",                            \"widthUnit\": \"IN\"                        }                    },                    \"innerPack\": {                        \"resourceLocation\": null,                        \"resource\": {                            \"sku\": \"singleInner2\",                            \"dimensions\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"weight\": \"2.00\",                                    \"heightUnit\": \"IN\",                                    \"height\": \"2.0\",                                    \"weightUnit\": \"LB\",                                    \"width\": \"2.0\",                                    \"length\": \"2.0\",                                    \"lengthUnit\": \"IN\",                                    \"widthUnit\": \"IN\"                                }                            },                            \"values\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"costValueCurrency\": \"USD\",                                    \"wholesaleValue\": \"2.00\",                                    \"costValue\": \"1.00\",                                    \"wholesaleValueCurrency\": \"USD\",                                    \"retailValue\": \"4.00\",                                    \"retailValueCurrency\": \"USD\"                                }                            },                            \"externalId\": \"narp2\",                            \"individualItemsPerCase\": 2,                            \"flags\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"isPackagedReadyToShip\": 0                                }                            },                            \"productId\": 1098,                            \"description\": \"innerdesc\"                        }                    },                    \"pallet\": {                        \"resourceLocation\": null,                        \"resource\": {                            \"sku\": \"singlePallet2\",                            \"dimensions\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"weight\": \"8.00\",                                    \"heightUnit\": \"IN\",                                    \"height\": \"8.0\",                                    \"weightUnit\": \"LB\",                                    \"width\": \"8.0\",                                    \"length\": \"8.0\",                                    \"lengthUnit\": \"IN\",                                    \"widthUnit\": \"IN\"                                }                            },                            \"values\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"costValueCurrency\": \"USD\",                                    \"wholesaleValue\": \"2.00\",                                    \"costValue\": \"1.00\",                                    \"wholesaleValueCurrency\": \"USD\",                                    \"retailValue\": \"4.00\",                                    \"retailValueCurrency\": \"USD\"                                }                            },                            \"externalId\": \"narp4\",                            \"individualItemsPerCase\": 1000,                            \"flags\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"isPackagedReadyToShip\": 0                                }                            },                            \"productId\": 1100,                            \"description\": \"palletdesc\"                        }                    },                    \"externalId\": \"narp\",                    \"alternateNames\": {                        \"resourceLocation\": \"http://api.shipwire.com/api/v3/products/baseProducts/1097/alternateNames?offset=0&limit=20&expand=all\",                        \"resource\": {                            \"previous\": null,                            \"next\": null,                            \"total\": 1,                            \"items\": [                                {                                    \"resourceLocation\": null,                                    \"resource\": {                                        \"externalId\": \"narp\",                                        \"name\": \"alias2\",                                        \"productId\": 1097                                    }                                }                            ],                            \"offset\": 0                        }                    },                    \"values\": {                        \"resourceLocation\": null,                        \"resource\": {                            \"costValueCurrency\": \"USD\",                            \"wholesaleValue\": \"2.00\",                            \"costValue\": \"1.00\",                            \"wholesaleValueCurrency\": \"USD\",                            \"retailValue\": \"4.00\",                            \"retailValueCurrency\": \"USD\"                        }                    },                    \"status\": \"notinuse\",                    \"category\": \"TOYS_SPORTS_HOBBIES\",                    \"description\": \"The best sports watch. Ever.\",                    \"flags\": {                        \"resourceLocation\": null,                        \"resource\": {                            \"isMedia\": 0,                            \"isDeletable\": 1,                            \"hasPallet\": 1,                            \"isPackagedReadyToShip\": 0,                            \"hasMasterCase\": 1,                            \"isFragile\": 0,                            \"isArchivable\": 1,                            \"isLiquid\": 1,                            \"isDangerous\": 0,                            \"isPerishable\": 0,                            \"hasEditRestrictions\": 0,                            \"hasInnerPack\": 1,                            \"isAdult\": 1                        }                    },                    \"creationDate\": \"2015-02-09T14:37:48-08:00\",                    \"hsCode\": \"010612\",                    \"htscode\": \"0063079075\",                    \"eccn\": \"123456\",                    \"countryOfOrigin\": \"US\",                    \"storageConfiguration\": \"INDIVIDUAL_ITEM\",                    \"technicalData\": {                        \"resourceLocation\": null,                        \"resource\": {                            \"battery\": {                                \"resourceLocation\": null,                                \"resource\": {                                    \"capacityUnit\": null,                                    \"capacity\": \"6.000\",                                    \"batteryWeight\": \"3.000\",                                    \"numberOfCells\": 7,                                    \"type\": \"ALKALINE\",                                    \"numberOfBatteries\": 5,                                    \"productId\": 1097                                }                            }                        }                    }                }            },            {                \"resourceLocation\": \"http://api.shipwire.com/api/v3/products/virtualKits/500000034\",                \"resource\": {                    \"id\": 500000034,                    \"externalId\": null,                    \"sku\": \"myVirtualKit\",                    \"creationDate\": \"2015-02-09T14:44:07-08:00\",                    \"description\": \"This is my virtual kit.\",                    \"status\": \"outofstock\",                    \"virtualKitContent\": {                        \"resourceLocation\": \"http://api.shipwire.com/api/v3/products/virtualKits/500000034/content?offset=0&limit=20&expand=all\",                        \"resource\": {                            \"offset\": 0,                            \"total\": 2,                            \"previous\": null,                            \"next\": null,                            \"items\": [                                {                                    \"resourceLocation\": null,                                    \"resource\": {                                        \"productId\": 447,                                        \"externalId\": \"zip\",                                        \"quantity\": 2                                    }                                },                                {                                    \"resourceLocation\": null,                                    \"resource\": {                                        \"productId\": 435,                                        \"externalId\": \"shazzam\",                                        \"quantity\": 8                                    }                                }                            ]                        }                    },                    \"flags\": {                        \"resourceLocation\": null                    }                }            },            {                ...            }        ],        \"offset\": 0    }}"
          },
          "x-testShouldPass" : true,
          "x-testEnabled" : true,
          "x-testName" : "Add products to the collection1",
          "x-testDescription" : "Create new products of any classification."
        } ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/products/{id} or /api/v3/products/E{externalId}" : {
      "get" : {
        "description" : "Get information about a product.",
        "summary" : "Get a product",
        "tags" : [ "Products" ],
        "operationId" : "ApiV3ProductsOrApiV3ProductsEByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The products's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The product's external ID (must be prefixed with \"E\")."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "/**\n* You can get one Product at a time through GET request with id/externalId.\n* GET /api/v3/products/id (base product's id/externalId)\n* GET /api/v3/products/id (marketing insert's id/externalId)\n* GET /api/v3/products/id (kit's id/externalId)\n* GET /api/v3/products/id (virtual kit's id/externalId)\n*/\nSee the `GETLIST products` response for each classification"
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "put" : {
        "description" : "Modify a product.",
        "summary" : "Update a product",
        "tags" : [ "Products" ],
        "operationId" : "ApiV3ProductsOrApiV3ProductsEByIdAndExternalIdPut",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The products's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The product's external ID (must be prefixed with \"E\")."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "See the `GETLIST products` response for each classification."
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/products/retire" : {
      "post" : {
        "description" : "Indicates that the listed products will not longer be used.",
        "summary" : "Retire products",
        "tags" : [ "Products" ],
        "operationId" : "ApiV3ProductsRetirePost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "$ref" : "#/definitions/RetireProductsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RetireProductsResponse"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/purchaseOrders" : {
      "get" : {
        "description" : "Get an itemized list of purchase orders.",
        "summary" : "Get orders",
        "tags" : [ "PurchaseOrders" ],
        "operationId" : "ApiV3PurchaseOrdersGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expand",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Expand purchase order data in the response, instead of accessing directly via a URL (comma separated list).\nValid values are `holds`, `items` , and `trackings`, or simply `all`.\nSee resources `Holds`, `Items`, and `Trackings` for information on the data model returned by this parameter."
        }, {
          "name" : "transactionId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by transaction Id (comma separated list)"
        }, {
          "name" : "purchaseOrderId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by purchase order Id (comma separated list)"
        }, {
          "name" : "orderNo",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by order number (comma separated list)"
        }, {
          "name" : "referrer",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by referer (comma separated list)"
        }, {
          "name" : "updatedAfter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Only show resources updated after this date (ISO 8601 format, ex: \"2014-05-30T13: 08: 29-07: 00\")"
        }, {
          "name" : "externalId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by externalId (comma separated list)"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by status (comma separated list of: `canceled`, `needsApproval`, `onHold`, `pending`, `inProgress`, `partiallyCompleted`, `completed`)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "post" : {
        "description" : "Create a new purchase order.",
        "summary" : "Create a purchase order",
        "tags" : [ "PurchaseOrders" ],
        "operationId" : "ApiV3PurchaseOrdersPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "expand",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Expand purchase order data in the response, instead of accessing directly via a URL (comma separated list).\nValid values are `holds`, `items`, and `trackings`, or simply `all`.\nSee resources `Holds` (not implemented), `Items`, and `Trackings` for information on the data model returned by this parameter."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "See GETLIST response"
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/purchaseOrders/{id} or /api/v3/purchaseOrders/E{externalId}" : {
      "get" : {
        "description" : "Get information about this purchase order.",
        "summary" : "Get purchase order",
        "tags" : [ "PurchaseOrders" ],
        "operationId" : "ApiV3PurchaseOrdersOrApiV3PurchaseOrdersEByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's external ID (must be prefixed with \"E\")."
        }, {
          "name" : "expand",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Expand purchase order data in the response, instead of providing URIs to the data.\nValid values are `holds`, `items` , and `trackings`, or simply `all`.\nSee resources `Holds` (not implemented), `Items`, and `Trackings` for information on the data model returned by this parameter."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "put" : {
        "description" : "Modify information about this purchase order.",
        "summary" : "Update a purchase order",
        "tags" : [ "PurchaseOrders" ],
        "operationId" : "ApiV3PurchaseOrdersOrApiV3PurchaseOrdersEByIdAndExternalIdPut",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's external ID (must be prefixed with \"E\")."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "expand",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Expand purchase order data in the response, instead of providing URIs to the data.\nValid values are `holds`, `items` , and `trackings`, or simply `all`.\nSee resources `Holds` (not implemented), `Items`, and `Trackings` for information on the data model returned by this parameter."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "See GETLIST response body"
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/purchaseOrders/{id}/cancel or /api/v3/purchaseOrders/E{externalId}/cancel" : {
      "post" : {
        "description" : "Cancel this purchase order.",
        "summary" : "Cancel an order",
        "tags" : [ "PurchaseOrders" ],
        "operationId" : "ApiV3PurchaseOrdersCancelOrApiV3PurchaseOrdersECancelByIdAndExternalIdPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's external ID (must be prefixed with \"E\")."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/purchaseOrders/{id}/hold or /api/v3/purchaseOrders/E{externalId}/hold" : {
      "post" : {
        "description" : "Place a hold on this purchase order.",
        "summary" : "Hold a Purchase order",
        "tags" : [ "PurchaseOrders" ],
        "operationId" : "ApiV3PurchaseOrdersHoldOrApiV3PurchaseOrdersEHoldByIdAndExternalIdPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's external ID (must be prefixed with \"E\")."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/HoldAPurchaseOrderResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Manual hold placed",
                "resourceLocation" : null
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/purchaseOrders/{id}/hold/clear or /api/v3/purchaseOrders/E{externalId}/hold/clear" : {
      "post" : {
        "description" : "Clear manual holds on a given purchase order.\nIt cannot be used to clear other types of holds that may be placed by Shipwire.",
        "summary" : "Clear any manual holds on this purchase order",
        "tags" : [ "PurchaseOrders" ],
        "operationId" : "ApiV3PurchaseOrdersHoldClearOrApiV3PurchaseOrdersEHoldClearByIdAndExternalIdPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's external ID (must be prefixed with \"E\")."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ClearAnyManualHoldsOnThisPurchaseOrderResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Manual hold cleared (if exists)",
                "resourceLocation" : null
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/purchaseOrders/{id}/holds or /api/v3/purchaseOrders/E{externalId}/holds" : {
      "get" : {
        "description" : "Get the list of holds, if any, on an purchaseOrders.",
        "summary" : "Get holds detail",
        "tags" : [ "PurchaseOrders" ],
        "operationId" : "ApiV3PurchaseOrdersHoldsOrApiV3PurchaseOrdersEHoldsByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase orders's external ID (must be prefixed with \"E\")."
        }, {
          "name" : "includeCleared",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Include holds that are cleared (0: no, 1: yes)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/purchaseOrders/{id}/items or /api/v3/purchaseOrders/E{externalId}/items" : {
      "get" : {
        "description" : "Get the contents of this purchase order.",
        "summary" : "Get items detail",
        "tags" : [ "PurchaseOrders" ],
        "operationId" : "ApiV3PurchaseOrdersItemsOrApiV3PurchaseOrdersEItemsByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's external ID (must be prefixed with \"E\")."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GetItemsDetailResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : "https://api.shipwire.com/api/v3/purchaseOrders/704891/items?offset=0&limit=20",
                "resource" : {
                  "offset" : 0,
                  "total" : 1,
                  "previous" : null,
                  "next" : null,
                  "items" : [ {
                    "resourceLocation" : null,
                    "resource" : {
                      "retailerLineNo" : null,
                      "sku" : "BP1iz5h",
                      "retailerSku" : null,
                      "supplierSku" : null,
                      "upc" : null,
                      "description" : null,
                      "quantity" : 1,
                      "unitOfMeasure" : null,
                      "retailValue" : 123.57,
                      "wholesaleValue" : 92.67,
                      "costValue" : 30.88,
                      "discountAmount" : 0,
                      "taxAmount" : 0,
                      "extendedAttributes" : {
                        "resourceLocation" : null,
                        "resource" : {
                          "offset" : 0,
                          "total" : 1,
                          "previous" : null,
                          "next" : null,
                          "items" : [ {
                            "resourceLocation" : null,
                            "resource" : {
                              "name" : "Product Origin",
                              "value" : "US",
                              "type" : "string"
                            }
                          } ]
                        }
                      },
                      "lineId" : 998361,
                      "productId" : 6379661,
                      "productExternalId" : null,
                      "purchaseOrderId" : 704891,
                      "purchaseOrderExternalId" : null,
                      "status" : "Pending"
                    }
                  } ]
                }
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/purchaseOrders/{id}/trackings or /api/v3/purchaseOrders/E{externalId}/trackings" : {
      "get" : {
        "description" : "Get tracking information for this purchase order.",
        "summary" : "Get trackings detail",
        "tags" : [ "PurchaseOrders" ],
        "operationId" : "ApiV3PurchaseOrdersTrackingsOrApiV3PurchaseOrdersETrackingsByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's external ID (must be prefixed with \"E\")."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/purchaseOrders/{id}/orders or /api/v3/purchaseOrders/E{externalId}/orders" : {
      "get" : {
        "description" : "Get order information for this purchase order.",
        "summary" : "Get orders detail",
        "tags" : [ "PurchaseOrders" ],
        "operationId" : "ApiV3PurchaseOrdersOrdersOrApiV3PurchaseOrdersEOrdersByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's external ID (must be prefixed with \"E\")."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "See GET order's API resource"
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/purchaseOrders/{id}/extendedAttributes or /api/v3/purchaseOrders/E{externalId}/extendedAttributes" : {
      "get" : {
        "description" : "Get the purchaseOrders extended attributes of this order.",
        "summary" : "Get purchaseOrders extended attributes",
        "tags" : [ "PurchaseOrders" ],
        "operationId" : "ApiV3PurchaseOrdersExtendedAttributesOrApiV3PurchaseOrdersEExtendedAttributesByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase orders's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase orders's external ID (must be prefixed with \"E\")."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/purchaseOrders/{id}/approve or /api/v3/purchaseOrders/E{externalId}/approve" : {
      "post" : {
        "description" : "Approve this purchase order.",
        "summary" : "Approve the Purchase Order",
        "tags" : [ "PurchaseOrders" ],
        "operationId" : "ApiV3PurchaseOrdersApproveOrApiV3PurchaseOrdersEApproveByIdAndExternalIdPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's ID."
        }, {
          "name" : "externalId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The purchase order's external ID (must be prefixed with \"E\")."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ApproveThePurchaseOrderResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Purchase order approved",
                "resourceLocation" : null
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/rate" : {
      "post" : {
        "description" : "Generate a real-time shipping quote.",
        "summary" : "Generate rates",
        "tags" : [ "Rates" ],
        "operationId" : "ApiV3RatePost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3.1/rate" : {
      "post" : {
        "description" : "Generate a real-time shipping quote and provide more shipping options.\nRate 3.1 is a transitional version while we explore what we would like\nto see in a v4 API. The request structure is mostly unchanged, with just\nthe additonal \"returnAllRates\" option. The response structure provides\nthe same information as V3 Rate, but it more succinctly groups shipping\nmethods per rated shipment with a map indicating which methods are\nrecommended.",
        "summary" : "Generate rates1",
        "tags" : [ "Rates" ],
        "operationId" : "ApiV31RatePost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/receivings" : {
      "get" : {
        "description" : "Get an itemized list of receivings.",
        "summary" : "Get list of advance ship notices",
        "tags" : [ "Receivings" ],
        "operationId" : "ApiV3ReceivingsGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expand",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Expand receivings data in the response, instead of accessing directly via a URL (comma separated list).\nValid values are `holds`, `instructionsRecipients`, `items` , `shipments`, `labels' and `trackings`, or simply `all`.\nSee resources `Holds`, `Instruction Recipients`, `Items`, `Shipments`, `labels` and `Trackings` for information on the data model returned by this parameter."
        }, {
          "name" : "commerceName",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by commerceName (comma separated list)"
        }, {
          "name" : "transactionId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by transactionId (comma separated list)"
        }, {
          "name" : "externalId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by externalId (comma separated list)"
        }, {
          "name" : "orderId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by orderId (comma separated list)"
        }, {
          "name" : "orderNo",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by orderNo (comma separated list)"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by status (comma separated list of: 'processed', 'canceled', 'completed', 'delivered', 'returned', 'submitted', 'held', 'tracked')"
        }, {
          "name" : "updatedAfter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Only show resources updated after this date (ISO 8601 format, ex: \"2014-05-30T13:08:29-07:00\")"
        }, {
          "name" : "warehouseId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by warehouseId (comma separated list)"
        }, {
          "name" : "warehouseExternalId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by warehouseExternalId (comma separated list)"
        }, {
          "name" : "vendorId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by vendorId"
        }, {
          "name" : "vendorExternalId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by vendorExternalId"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "post" : {
        "description" : "Create a new receiving.",
        "summary" : "Create an advance ship notice",
        "tags" : [ "Receivings" ],
        "operationId" : "ApiV3ReceivingsPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "expand",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Expand receivings data in the response, instead of accessing directly via a URL (comma separated list).\nValid values are `holds`, `instructionsRecipients`, `items` , `shipments`, `labels' and `trackings`, or simply `all`.\nSee resources `Holds`, `Instruction Recipients`, `Items`, `Shipments`, `labels` and `Trackings` for information on the data model returned by this parameter."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "See GETLIST response body"
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/receivings/{id}" : {
      "get" : {
        "description" : "Get information about this receiving.",
        "summary" : "Get advance ship notice",
        "tags" : [ "Receivings" ],
        "operationId" : "ApiV3ReceivingsByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The advance ship notice's ID."
        }, {
          "name" : "expand",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Expand advance ship notice data in the response, instead of accessing directly via a URL (comma separated list).\nValid values are `holds`, `instructionsRecipients`, `items` , `shipments`, `labels` and `trackings`, or simply `all`.\nSee resources `Holds`, `Instruction Recipients`, `Items`, `Shipments`, `labels` and `Trackings` for information on the data model returned by this parameter."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "put" : {
        "description" : "Modify information about this receiving.",
        "summary" : "Update an advance ship notice",
        "tags" : [ "Receivings" ],
        "operationId" : "ApiV3ReceivingsByIdPut",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The advance ship notice's ID."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "expand",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Expand advance ship notice data in the response, instead of accessing directly via a URL (comma separated list).\nValid values are `holds`, `instructionsRecipients`, `items` , `shipments`, `labels` and `trackings`, or simply `all`.\nSee resources `Holds`, `Instruction Recipients`, `Items`, `Shipments`, `labels` and `Trackings` for information on the data model returned by this parameter."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "See GETLIST response body"
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/receivings/{id}/cancel" : {
      "post" : {
        "description" : "Cancel this receiving.",
        "summary" : "Cancel a receiving order",
        "tags" : [ "Receivings" ],
        "operationId" : "ApiV3ReceivingsCancelByIdPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The advance ship notice's ID."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CancelAReceivingOrderResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "resourceLocation" : null,
                "message" : "Receiving was cancelled"
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/receivings/{id}/labels/cancel" : {
      "post" : {
        "description" : "Cancel shipping labels on this receiving.",
        "summary" : "Cancel a receiving label",
        "tags" : [ "Receivings" ],
        "operationId" : "ApiV3ReceivingsLabelsCancelByIdPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The advance ship notice's ID."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CancelAReceivingLabelResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "resourceLocation" : null,
                "message" : "Labels cancelled"
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/receivings/{id}/holds" : {
      "get" : {
        "description" : "Get the list of holds, if any, on this receiving.",
        "summary" : "Get holds detail",
        "tags" : [ "Receivings" ],
        "operationId" : "ApiV3ReceivingsHoldsByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The advance ship notice's ID."
        }, {
          "name" : "includeCleared",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Include holds that are cleared (0: no, 1: yes)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/receivings/{id}/instructionsRecipients" : {
      "get" : {
        "description" : "Get email recipients and instructions for this receiving.",
        "summary" : "Get instructions recipients details",
        "tags" : [ "Receivings" ],
        "operationId" : "ApiV3ReceivingsInstructionsRecipientsByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The advance ship notice's ID."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/receivings/{id}/extendedAttributes" : {
      "get" : {
        "description" : "Get the extended attributes of this receiving.",
        "summary" : "Get receiving extended attributes",
        "tags" : [ "Receivings" ],
        "operationId" : "ApiV3ReceivingsExtendedAttributesByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The receiving's ID."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/receivings/{id}/items" : {
      "get" : {
        "description" : "Get the contents of this receiving.",
        "summary" : "Get items detail",
        "tags" : [ "Receivings" ],
        "operationId" : "ApiV3ReceivingsItemsByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The advance ship notice's ID."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/receivings/{id}/shipments" : {
      "get" : {
        "description" : "Get shipping dimension and container information.",
        "summary" : "Get shipment details",
        "tags" : [ "Receivings" ],
        "operationId" : "ApiV3ReceivingsShipmentsByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The advance ship notice's ID."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/receivings/{id}/trackings" : {
      "get" : {
        "description" : "Get tracking information for this receiving.",
        "summary" : "Get trackings detail",
        "tags" : [ "Receivings" ],
        "operationId" : "ApiV3ReceivingsTrackingsByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The advance ship notice's ID."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/receivings/{id}/labels" : {
      "get" : {
        "description" : "Get labels information for this receiving.\nTo retrieve the labels as PDF add the following header to the request:\nAccept: application/pdf",
        "summary" : "Get labels detail",
        "tags" : [ "Receivings" ],
        "operationId" : "ApiV3ReceivingsLabelsByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The advance ship notice's ID."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3.1/receivings/{id}/markComplete" : {
      "post" : {
        "description" : "Mark this receivings order as complete. This endpoint works only for shipwire anywhere warehouses.",
        "summary" : "Mark the receiving completed",
        "tags" : [ "Receivings" ],
        "operationId" : "ApiV31ReceivingsMarkCompleteByIdPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The advance ship notice's ID."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/MarkTheReceivingCompletedResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : null
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/returns" : {
      "get" : {
        "description" : "Get an itemized list of returns.",
        "summary" : "Get list of return orders",
        "tags" : [ "Returns" ],
        "operationId" : "ApiV3ReturnsGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expand",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Expand returns data in the response, instead of accessing directly via a URL (comma separated list).\nValid values are `holds`, `items` , `labels`, `originalOrder` and `trackings`, or simply `all`.\nSee resources `Holds`, `Items`, `labels` and `Trackings` for information on the data model returned by this parameter."
        }, {
          "name" : "commerceName",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by commerceName (comma separated list)"
        }, {
          "name" : "transactionId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by transactionId (comma separated list)"
        }, {
          "name" : "externalId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by externalId (comma separated list)"
        }, {
          "name" : "orderId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by orderId (comma separated list)"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by status (comma separated list of: 'processed', 'canceled', 'completed', 'delivered', 'returned', 'submitted', 'held', 'tracked')"
        }, {
          "name" : "updatedAfter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Only show resources updated after this date (ISO 8601 format, ex: \"2014-05-30T13:08:29-07:00\")"
        }, {
          "name" : "warehouseId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by warehouseId (comma separated list)"
        }, {
          "name" : "warehouseExternalId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by warehouseExternalId (comma separated list)"
        }, {
          "name" : "vendorId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by vendorId"
        }, {
          "name" : "vendorExternalId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter by vendorExternalId"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "post" : {
        "description" : "Create a new return.",
        "summary" : "Create an return order",
        "tags" : [ "Returns" ],
        "operationId" : "ApiV3ReturnsPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "$ref" : "#/definitions/CreateAnReturnOrderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "See GETLIST response body"
            }
          }
        },
        "x-unitTests" : [ {
          "request" : {
            "method" : "POST",
            "uri" : "/api/v3/returns",
            "headers" : {
              "Content-Type" : "application/json"
            },
            "body" : "{    \"externalId\": \"eId123\",    \"originalOrder\":{        \"id\":673    },    \"items\":[        {\"sku\":\"Laura-s_Pen\",\"quantity\":1}    ],    \"options\":{        \"generatePrepaidLabel\": 1,        \"emailCustomer\": 1,        \"warehouseId\": 11,        \"warehouseExternalId\": 12,        \"warehouseRegion\": \"LAX\"    }}"
          },
          "expectedResponse" : {
            "x-allowExtraHeaders" : true,
            "x-bodyMatchMode" : "RAW",
            "x-arrayOrderedMatching" : false,
            "x-arrayCheckCount" : false,
            "x-matchResponseSchema" : true,
            "headers" : { },
            "body" : "See GETLIST response body"
          },
          "x-testShouldPass" : true,
          "x-testEnabled" : true,
          "x-testName" : "Create an return order1",
          "x-testDescription" : "Create a new return."
        } ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/returns/{id}" : {
      "get" : {
        "description" : "Get information about this return.",
        "summary" : "Get return order",
        "tags" : [ "Returns" ],
        "operationId" : "ApiV3ReturnsByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The return order's ID."
        }, {
          "name" : "expand",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Expand return order data in the response, instead of accessing directly via a URL (comma separated list).\nValid values are `holds`, `items`, `originalOrder`, `labels` and `trackings`, or simply `all`.\nSee resources `Holds`, `Items`, `Labels` and `Trackings` for information on the data model returned by this parameter."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/returns/{id}/cancel" : {
      "post" : {
        "description" : "Cancel this return.",
        "summary" : "Cancel a receiving order",
        "tags" : [ "Returns" ],
        "operationId" : "ApiV3ReturnsCancelByIdPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The return order's ID."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CancelReturnOrderResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "resourceLocation" : null,
                "message" : "Return Order cancelled"
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/returns/{id}/holds" : {
      "get" : {
        "description" : "Get the list of holds, if any, on this return.",
        "summary" : "Get holds detail",
        "tags" : [ "Returns" ],
        "operationId" : "ApiV3ReturnsHoldsByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The return order's ID."
        }, {
          "name" : "includeCleared",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Include holds that are cleared (0: no, 1: yes)"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/returns/{id}/items" : {
      "get" : {
        "description" : "Get the contents of this return.",
        "summary" : "Get items detail",
        "tags" : [ "Returns" ],
        "operationId" : "ApiV3ReturnsItemsByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The return order's ID."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/returns/{id}/trackings" : {
      "get" : {
        "description" : "Get tracking information for this return.",
        "summary" : "Get trackings detail",
        "tags" : [ "Returns" ],
        "operationId" : "ApiV3ReturnsTrackingsByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The return order's ID."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/returns/{id}/labels" : {
      "get" : {
        "description" : "Get the shipping labels for this return.\nTo retrieve the labels as PDF add the following header to the request:\nAccept: application/pdf",
        "summary" : "Get label details",
        "tags" : [ "Returns" ],
        "operationId" : "ApiV3ReturnsLabelsByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The return order's ID."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3.1/returns/{id}/markComplete" : {
      "post" : {
        "description" : "Mark this return order as complete. This endpoint works only for shipwire anywhere warehouses.",
        "summary" : "Mark return completed",
        "tags" : [ "Returns" ],
        "operationId" : "ApiV31ReturnsMarkCompleteByIdPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The return's ID."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/MarkReturnCompletedResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : null
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3.1/returns/generateLabels/{id}" : {
      "get" : {
        "description" : "Get Job status by Job ID",
        "summary" : "Get Generate Return Labels Job status and PDF download URL",
        "tags" : [ "Returns" ],
        "operationId" : "ApiV31ReturnsGenerateLabelsAPIByIdAndAcceptGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "description" : "The Job ID returned when the POST request was made"
        }, {
          "name" : "accept",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "To retrieve successfully generated labels use query parameter `?accept=pdf` or use header `Content-Type: application/pdf`"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "post" : {
        "description" : "Asynchronously generate return labels for multiple orders. The Job will return a combined PDF download URL. Job status can be retrieved via polling or webhook subscription.\nAPI will return HTTP 422 if order IDs (or external order IDs) are invalid",
        "summary" : "Initiate Generate Return Labels Job",
        "tags" : [ "Returns" ],
        "operationId" : "ApiV31ReturnsGenerateLabelsAPIByIdAndAcceptPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "description" : "The Job ID returned when the POST request was made"
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "object"
          }
        }, {
          "name" : "accept",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "To retrieve successfully generated labels use query parameter `?accept=pdf` or use header `Content-Type: application/pdf`"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "string"
            },
            "examples" : {
              "text/plain" : "+ Body\n            See: GET response\n\n    + Schema\n            See: GET schema"
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/stock" : {
      "get" : {
        "description" : "Get stock information for your products.",
        "summary" : "Get stock availability",
        "tags" : [ "Stock" ],
        "operationId" : "ApiV3StockGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parentId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Product ID or external ID"
        }, {
          "name" : "sku",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filters by SKU, comma-separated list can be specified"
        }, {
          "name" : "productId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filters by product ID (Shipwire platform), comma-separated list can be specified"
        }, {
          "name" : "productExternalId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filters by product ID (Client platform), comma-separated list can be specified"
        }, {
          "name" : "warehouseId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filters by warehouse ID (Shipwire platform), comma-separated list can be specified"
        }, {
          "name" : "warehouseExternalId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filters by warehouse ID (Client platform), comma-separated list can be specified"
        }, {
          "name" : "warehouseRegion",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filters by warehouse Region, comma-separated list can be specified"
        }, {
          "name" : "warehouseArea",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filters by warehouse Area (continents and countries), comma-separated list can be specified"
        }, {
          "name" : "channelName",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Sets channelName for the request"
        }, {
          "name" : "includeEmpty",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "If set to '1' then empty resources will be displayed as well"
        }, {
          "name" : "vendorId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Vendor ID list (comma-separated)"
        }, {
          "name" : "vendorExternalId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Vendor external ID list (comma-separated)"
        }, {
          "name" : "disableAutoBreakLots",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Disable Auto Break Lots"
        }, {
          "name" : "mode",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Valid values: IncludingHigherLevelQuantitiesWithLots (default if account is setup to break lots), IncludingHigherLevelQuantitiesWithoutLots, NotIncludingHigherLevelQuantitiesWithLots (default if account is not setup to break lots), NotIncludingHigherLevelQuantitiesWithoutLots"
        }, {
          "name" : "includeEmptyShipwireAnywhere",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Include Empty Shipwire Anywhere"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/stock/adjust" : {
      "post" : {
        "description" : "Adjust inventory levels. Only applicable to Shipwire Anywhere warehouses.",
        "summary" : "Adjust inventory",
        "tags" : [ "Stock" ],
        "operationId" : "ApiV3StockAdjustPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3.1/vendors" : {
      "get" : {
        "description" : "Get a collection of vendors filtering by vendor ids, external ids, vendor names, vendor status.",
        "summary" : "Get vendors",
        "operationId" : "ApiV31VendorsNameNameStatusStatusByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "Vendor's id, supports comma separated list"
        }, {
          "name" : "externalId",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "Vendor's external id, supports comma separated list"
        }, {
          "name" : "name",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "Vendor's name, supports comma separated list"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "Vendor's status. Valid status values are `active`, `pending`, and `inactive`"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GetVendorsResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : "https://api.shipwire.com/api/v3.1/vendors?offset=0&limit=20",
                "resource" : {
                  "offset" : 0,
                  "total" : 2,
                  "previous" : null,
                  "next" : null,
                  "items" : [ {
                    "resourceLocation" : "https://api.shipwire.com/api/v3.1/vendors/2861",
                    "resource" : {
                      "id" : 2861,
                      "name" : "Widget Mega Factory",
                      "status" : "active",
                      "description" : "",
                      "externalId" : 1000,
                      "address" : {
                        "resourceLocation" : null,
                        "resource" : {
                          "name" : "Colonel Sanders",
                          "email" : "customercare@widgets.com",
                          "phone" : "555-555-5555",
                          "fax" : "555-555-5555",
                          "address1" : "123 Indio way",
                          "address2" : "",
                          "address3" : "",
                          "city" : "Sunnyvale",
                          "state" : "CA",
                          "postalCode" : 94085,
                          "country" : "US"
                        }
                      },
                      "extendedAttributes" : {
                        "resourceLocation" : "https://api.shipwire.com/api/v3.1/vendors/2861/extendedAttributes?offset=0&limit=20",
                        "resource" : {
                          "offset" : 0,
                          "total" : 2,
                          "previous" : null,
                          "next" : null,
                          "items" : [ {
                            "resourceLocation" : null,
                            "resource" : {
                              "name" : "alternateEmail",
                              "value" : "customercare2@widgets.com",
                              "type" : "string"
                            }
                          }, {
                            "resourceLocation" : null,
                            "resource" : {
                              "name" : "category",
                              "value" : "Mega Widgets",
                              "type" : "string"
                            }
                          } ]
                        }
                      }
                    }
                  }, {
                    "resourceLocation" : "https://api.shipwire.com/api/v3.1/vendors/2851",
                    "resource" : {
                      "id" : 2851,
                      "name" : "Cool Widgets Dot Com",
                      "status" : "inactive",
                      "description" : "",
                      "externalId" : 1001,
                      "address" : {
                        "resourceLocation" : null,
                        "resource" : {
                          "name" : "Bob Ross",
                          "email" : "",
                          "phone" : "555-555-5555",
                          "fax" : "",
                          "address1" : "321 Indio way",
                          "address2" : "",
                          "address3" : "",
                          "city" : "Mountain View",
                          "state" : "CA",
                          "postalCode" : 94035,
                          "country" : "US"
                        }
                      },
                      "extendedAttributes" : {
                        "resourceLocation" : "https://api.shipwire.com/api/v3.1/vendors/2851/extendedAttributes?offset=0&limit=20",
                        "resource" : {
                          "offset" : 0,
                          "total" : 1,
                          "previous" : null,
                          "next" : null,
                          "items" : [ {
                            "resourceLocation" : null,
                            "resource" : {
                              "name" : "alternatePhoneNumber",
                              "value" : "800 (555) 123-4567",
                              "type" : "string"
                            }
                          } ]
                        }
                      }
                    }
                  } ]
                }
              }
            }
          }
        },
        "x-unitTests" : [ {
          "request" : {
            "method" : "GET",
            "uri" : "/api/v3.1/vendors?id={id}&externalId={externalId}&name={name}&status={status}"
          },
          "expectedResponse" : {
            "x-allowExtraHeaders" : true,
            "x-bodyMatchMode" : "RAW",
            "x-arrayOrderedMatching" : false,
            "x-arrayCheckCount" : false,
            "x-matchResponseSchema" : true,
            "headers" : {
              "Authorization" : "Basic {base64-encoded username:password}"
            },
            "body" : "{    \"status\": 200,    \"message\": \"Successful\",    \"resourceLocation\": \"https://api.shipwire.com/api/v3.1/vendors?offset=0&limit=20\",    \"resource\": {        \"offset\": 0,        \"total\": 2,        \"previous\": null,        \"next\": null,        \"items\": [            {                \"resourceLocation\": \"https://api.shipwire.com/api/v3.1/vendors/2861\",                \"resource\": {                    \"id\": 2861,                    \"name\": \"Widget Mega Factory\",                    \"status\": \"active\",                    \"description\": \"\",                    \"externalId\": \"1000\",                    \"address\": {                        \"resourceLocation\": null,                        \"resource\": {                            \"name\": \"Colonel Sanders\",                            \"email\": \"customercare@widgets.com\",                            \"phone\": \"555-555-5555\",                            \"fax\": \"555-555-5555\",                            \"address1\": \"123 Indio way\",                            \"address2\": \"\",                            \"address3\": \"\",                            \"city\": \"Sunnyvale\",                            \"state\": \"CA\",                            \"postalCode\": \"94085\",                            \"country\": \"US\"                        }                    },                    \"extendedAttributes\": {                        \"resourceLocation\": \"https://api.shipwire.com/api/v3.1/vendors/2861/extendedAttributes?offset=0&limit=20\",                        \"resource\": {                            \"offset\": 0,                            \"total\": 2,                            \"previous\": null,                            \"next\": null,                            \"items\": [                                {                                    \"resourceLocation\": null,                                    \"resource\": {                                        \"name\": \"alternateEmail\",                                        \"value\": \"customercare2@widgets.com\",                                        \"type\": \"string\"                                    }                                },                                {                                    \"resourceLocation\": null,                                    \"resource\": {                                        \"name\": \"category\",                                        \"value\": \"Mega Widgets\",                                        \"type\": \"string\"                                    }                                }                            ]                        }                    }                }            },            {                \"resourceLocation\": \"https://api.shipwire.com/api/v3.1/vendors/2851\",                \"resource\": {                    \"id\": 2851,                    \"name\": \"Cool Widgets Dot Com\",                    \"status\": \"inactive\",                    \"description\": \"\",                    \"externalId\": \"1001\",                    \"address\": {                        \"resourceLocation\": null,                        \"resource\": {                            \"name\": \"Bob Ross\",                            \"email\": \"\",                            \"phone\": \"555-555-5555\",                            \"fax\": \"\",                            \"address1\": \"321 Indio way\",                            \"address2\": \"\",                            \"address3\": \"\",                            \"city\": \"Mountain View\",                            \"state\": \"CA\",                            \"postalCode\": \"94035\",                            \"country\": \"US\"                        }                    },                    \"extendedAttributes\": {                        \"resourceLocation\": \"https://api.shipwire.com/api/v3.1/vendors/2851/extendedAttributes?offset=0&limit=20\",                        \"resource\": {                            \"offset\": 0,                            \"total\": 1,                            \"previous\": null,                            \"next\": null,                            \"items\": [                                {                                    \"resourceLocation\": null,                                    \"resource\": {                                        \"name\": \"alternatePhoneNumber\",                                        \"value\": \"800 (555) 123-4567\",                                        \"type\": \"string\"                                    }                                }                            ]                        }                    }                }            }        ]    }}"
          },
          "x-testShouldPass" : true,
          "x-testEnabled" : true,
          "x-testName" : "Get vendors1",
          "x-testDescription" : "Get a collection of vendors filtering by vendor ids, external ids, vendor names, vendor status."
        } ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "post" : {
        "description" : "Create a new vendor",
        "summary" : "Create a new vendor",
        "operationId" : "ApiV31VendorsPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "$ref" : "#/definitions/CreateANewVendorRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CreateANewVendorResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "warnings" : { },
                "errors" : { },
                "resourceLocation" : "https://api.developer.corp.shipwire.com/api/v3.1/vendors?offset=0&limit=1",
                "resource" : {
                  "offset" : 0,
                  "total" : 1,
                  "previous" : null,
                  "next" : null,
                  "items" : [ {
                    "resourceLocation" : "https://api.developer.corp.shipwire.com/api/v3.1/vendors/2911",
                    "resource" : {
                      "id" : 2911,
                      "name" : "Honest Widget Company",
                      "status" : "active",
                      "description" : "An honest widget company",
                      "externalId" : 1002,
                      "address" : {
                        "resourceLocation" : null,
                        "resource" : {
                          "name" : "Honest Abe",
                          "email" : "customersupport@widgets.com",
                          "phone" : "555-555-5555",
                          "fax" : "555-555-5556",
                          "address1" : "789 Indio way",
                          "address2" : "",
                          "address3" : "",
                          "city" : "Sunnyvale",
                          "state" : "CA",
                          "postalCode" : 94085,
                          "country" : "US"
                        }
                      },
                      "extendedAttributes" : {
                        "resourceLocation" : "https://api.developer.corp.shipwire.com/api/v3.1/vendors/2911/extendedAttributes?offset=0&limit=20",
                        "resource" : {
                          "offset" : 0,
                          "total" : 1,
                          "previous" : null,
                          "next" : null,
                          "items" : [ {
                            "resourceLocation" : null,
                            "resource" : {
                              "name" : "alternateEmail",
                              "value" : "customersupport2@widgets.com",
                              "type" : "string"
                            }
                          } ]
                        }
                      }
                    }
                  } ]
                }
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3.1/vendors/{id}" : {
      "get" : {
        "description" : "Get a vendor by vendor's id or external id.",
        "summary" : "Get a vendor",
        "operationId" : "ApiV31VendorsByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The vendor's id or external id."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GetAVendorResponse"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "put" : {
        "description" : "Modify a vendor based on its vendor's id or external id",
        "summary" : "Update a vendor",
        "operationId" : "ApiV31VendorsByIdPut",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The vendor's id or external id."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "$ref" : "#/definitions/UpdateAVendorRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/UpdateAVendorResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "warnings" : { },
                "errors" : { },
                "resourceLocation" : "https://api.shipwire.com/api/v3.1/vendors?offset=0&limit=20",
                "resource" : {
                  "offset" : 0,
                  "total" : 1,
                  "previous" : null,
                  "next" : null,
                  "items" : [ {
                    "resourceLocation" : "https://api.shipwire.com/api/v3.1/vendors/2861",
                    "resource" : {
                      "id" : 2861,
                      "name" : "Updated Vendor Name",
                      "status" : "active",
                      "description" : "This is the updated description",
                      "externalId" : 1002,
                      "address" : {
                        "resourceLocation" : null,
                        "resource" : {
                          "name" : "Updated Contact Name",
                          "email" : "updated@widgets.com",
                          "phone" : "555-555-5555",
                          "fax" : "555-555-5555",
                          "address1" : "123 Indio way",
                          "address2" : "",
                          "address3" : "",
                          "city" : "Sunnyvale",
                          "state" : "CA",
                          "postalCode" : 94085,
                          "country" : "US"
                        }
                      },
                      "extendedAttributes" : {
                        "resourceLocation" : "https://api.shipwire.com/api/v3.1/vendors/2861/extendedAttributes?offset=0&limit=20",
                        "resource" : {
                          "offset" : 0,
                          "total" : 1,
                          "previous" : null,
                          "next" : null,
                          "items" : [ {
                            "resourceLocation" : null,
                            "resource" : {
                              "name" : "alternateEmail",
                              "value" : "customercare2@widgets.com",
                              "type" : "string"
                            }
                          } ]
                        }
                      }
                    }
                  } ]
                }
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3.1/vendors/{id}/retire" : {
      "post" : {
        "description" : "Indicates that the vendor will not longer be used. If the vendor is not associated with any orders, products, or warehouses\nthe vendor will be deleted. Otherwise the vendor will have its status set to \"inactive\".",
        "summary" : "Retire a vendor",
        "operationId" : "ApiV31VendorsRetireByIdPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The vendor's id or external id."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RetireAVendorResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Deleted.",
                "resourceLocation" : null
              }
            }
          },
          "404" : {
            "description" : "Unexpected error in API call. See HTTP response body for details.",
            "schema" : {
              "$ref" : "#/definitions/RetireAVendor404Response"
            },
            "examples" : {
              "application/json" : {
                "status" : 404,
                "message" : "Vendor not found",
                "resourceLocation" : null
              }
            }
          },
          "422" : {
            "description" : "Unexpected error in API call. See HTTP response body for details.",
            "schema" : {
              "$ref" : "#/definitions/RetireAVendor404Response"
            },
            "examples" : {
              "application/json" : {
                "status" : 422,
                "message" : "Cannot delete: Vendor is associated with products, warehouses, and orders. Vendor status set to 'inactive'",
                "resourceLocation" : null
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3.1/vendors/{id}/extendedAttributes" : {
      "get" : {
        "description" : "Get a vendor's extended attributes",
        "summary" : "Get a vendors extended attributes",
        "operationId" : "ApiV31VendorsExtendedAttributesByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The vendor's id or external id."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GetAVendorsExtendedAttributesResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : "https://api.developer.corp.shipwire.com/api/v3.1/vendors/2901/extendedAttributes?offset=0&limit=20",
                "resource" : {
                  "offset" : 0,
                  "total" : 1,
                  "previous" : null,
                  "next" : null,
                  "items" : [ {
                    "resourceLocation" : null,
                    "resource" : {
                      "name" : "alternateEmail",
                      "value" : "customersupport@widgets.com",
                      "type" : "string"
                    }
                  } ]
                }
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3.1/warehouses" : {
      "get" : {
        "description" : "Get a collection of warehouses",
        "summary" : "Get warehouses",
        "operationId" : "ApiV31WarehousesNameNameVendorIdVendorIdVendorExternalIdVendorExternalIdCountryCountryGeneratesLabelsGeneratesLabelsTypeTypeByIdAndExternalIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "Filter by warehouse ids, supports comma separated list"
        }, {
          "name" : "externalId",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "Filter by warehouse external ids, supports comma separated list"
        }, {
          "name" : "name",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "Filter by warehouse names, supports comma separated list"
        }, {
          "name" : "vendorId",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "Filter by associated vendor's id, supports comma separated list"
        }, {
          "name" : "vendorExternalId",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "Filter by associated vendor's external id, supports comma separated list"
        }, {
          "name" : "country",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "Filter by country, supports comma separated list"
        }, {
          "name" : "generatesLabels",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "Filter by warehouses that require label generation"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "Filter by type (\"SHIPWIRE\", \"SHIPWIRE_ANYWHERE\")"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "post" : {
        "description" : "",
        "summary" : "Create a new warehouse",
        "operationId" : "ApiV31WarehousesPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "$ref" : "#/definitions/CreateANewWarehouseRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3.1/warehouses/{id}" : {
      "get" : {
        "description" : "Get a warehouse by id or external id.",
        "summary" : "Get a warehouse",
        "operationId" : "ApiV31WarehousesByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The warehouse id or external id."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "put" : {
        "description" : "Modify a warehouse based on its id or external id",
        "summary" : "Update a warehouse",
        "operationId" : "ApiV31WarehousesByIdPut",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The warehouse's id or external id."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "$ref" : "#/definitions/UpdateAWarehouseRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3.1/warehouses/{id}/retire" : {
      "post" : {
        "description" : "Indicates that the warehouse will not longer be used. If the warehouse is not associated with any active vendors or orders\nthe warehouse will be deleted. Otherwise the warehouse will have its \"isActive\" property set to false.",
        "summary" : "Retire a warehouse",
        "operationId" : "ApiV31WarehousesRetireByIdPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Warehouse id or external id."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RetireAWarehouseResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Deleted.",
                "resourceLocation" : null
              }
            }
          },
          "404" : {
            "description" : "Unexpected error in API call. See HTTP response body for details.",
            "schema" : {
              "$ref" : "#/definitions/RetireAWarehouse404Response"
            },
            "examples" : {
              "application/json" : {
                "status" : 404,
                "message" : "Warehouse not found",
                "resourceLocation" : null
              }
            }
          },
          "422" : {
            "description" : "Unexpected error in API call. See HTTP response body for details.",
            "schema" : {
              "$ref" : "#/definitions/RetireAWarehouse404Response"
            },
            "examples" : {
              "application/json" : {
                "status" : 422,
                "message" : "Cannot delete: Warehouse is associated with vendors and orders. Warehouse set to inactive",
                "resourceLocation" : null
              }
            }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3.1/warehouses/{id}/containers" : {
      "get" : {
        "description" : "",
        "summary" : "Get containers associated with a warehouse",
        "operationId" : "ApiV31WarehousesContainersByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "The warehouse id or external id."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object"
            },
            "examples" : { }
          }
        },
        "x-unitTests" : [ ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/webhooks" : {
      "get" : {
        "description" : "List all Webhooks",
        "summary" : "List all Webhooks",
        "tags" : [ "Webhooks" ],
        "operationId" : "ApiV3WebhooksGet",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ListAllWebhooksResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : "https://api.shipwire.com/api/v3/webhooks?offset=0&limit=20",
                "resource" : {
                  "offset" : 0,
                  "total" : 1,
                  "previous" : null,
                  "next" : null,
                  "items" : [ {
                    "resourceLocation" : "https://api.shipwire.com/api/v3/webhooks/882",
                    "resource" : {
                      "id" : 882,
                      "topic" : "v1.stock.transition",
                      "url" : "https://stephensearles.com"
                    }
                  } ]
                }
              }
            }
          }
        },
        "x-unitTests" : [ {
          "request" : {
            "method" : "GET",
            "uri" : "/api/v3/webhooks"
          },
          "expectedResponse" : {
            "x-allowExtraHeaders" : true,
            "x-bodyMatchMode" : "RAW",
            "x-arrayOrderedMatching" : false,
            "x-arrayCheckCount" : false,
            "x-matchResponseSchema" : true,
            "headers" : {
              "Content-Type" : "application/json"
            },
            "body" : "{        \"status\": 200,        \"message\": \"Successful\",        \"resourceLocation\": \"https://api.shipwire.com/api/v3/webhooks?offset=0&limit=20\",        \"resource\": {                \"offset\": 0,                \"total\": 1,                \"previous\": null,                \"next\": null,                \"items\": [{                        \"resourceLocation\": \"https://api.shipwire.com/api/v3/webhooks/882\",                        \"resource\": {                                \"id\": 882,                                \"topic\": \"v1.stock.transition\",                                \"url\": \"https://stephensearles.com\"                        }                }]        }}"
          },
          "x-testShouldPass" : true,
          "x-testEnabled" : true,
          "x-testName" : "List all Webhooks1",
          "x-testDescription" : "List all Webhooks"
        } ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "post" : {
        "description" : "Create a subscription",
        "summary" : "Create a subscription",
        "tags" : [ "Webhooks" ],
        "operationId" : "ApiV3WebhooksPost",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "$ref" : "#/definitions/CreateASubscriptionRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CreateASubscriptionResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : "https://api.shipwire.com/api/v3/webhooks?offset=0&limit=1",
                "resource" : {
                  "offset" : 0,
                  "total" : 1,
                  "previous" : null,
                  "next" : null,
                  "items" : [ {
                    "resourceLocation" : "https://api.shipwire.com/api/v3/webhooks/921",
                    "resource" : {
                      "id" : 921,
                      "topic" : "stock.transition",
                      "url" : "https://stephensearles.com"
                    }
                  } ]
                }
              }
            }
          }
        },
        "x-unitTests" : [ {
          "request" : {
            "method" : "POST",
            "uri" : "/api/v3/webhooks",
            "headers" : {
              "Content-Type" : "application/json"
            },
            "body" : "{        \"topic\": \"orders\",        \"url\": \"https://yourdomain.com/get/webhooks/here\"}"
          },
          "expectedResponse" : {
            "x-allowExtraHeaders" : true,
            "x-bodyMatchMode" : "RAW",
            "x-arrayOrderedMatching" : false,
            "x-arrayCheckCount" : false,
            "x-matchResponseSchema" : true,
            "headers" : {
              "Content-Type" : "application/json"
            },
            "body" : "{        \"status\": 200,        \"message\": \"Successful\",        \"resourceLocation\": \"https://api.shipwire.com/api/v3/webhooks?offset=0&limit=1\",        \"resource\": {                \"offset\": 0,                \"total\": 1,                \"previous\": null,                \"next\": null,                \"items\": [{                        \"resourceLocation\": \"https://api.shipwire.com/api/v3/webhooks/921\",                        \"resource\": {                                \"id\": 921,                                \"topic\": \"stock.transition\",                                \"url\": \"https://stephensearles.com\"                        }                }]        }}"
          },
          "x-testShouldPass" : true,
          "x-testEnabled" : true,
          "x-testName" : "Create a subscription1",
          "x-testDescription" : "Create a subscription"
        } ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/webhooks/{id}" : {
      "get" : {
        "description" : "Get a single subscription",
        "summary" : "Retrieve a webhook",
        "tags" : [ "Webhooks" ],
        "operationId" : "ApiV3WebhooksByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "number",
          "format" : "double",
          "description" : "Numeric `id` of the Webhook."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RetrieveAWebhookResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : "https://api.shipwire.com/api/v3/webhooks/882",
                "resource" : {
                  "id" : 882,
                  "topic" : "v1.stock.transition",
                  "url" : "https://stephensearles.com"
                }
              }
            }
          }
        },
        "x-unitTests" : [ {
          "request" : {
            "method" : "GET",
            "uri" : "/api/v3/webhooks/1"
          },
          "expectedResponse" : {
            "x-allowExtraHeaders" : true,
            "x-bodyMatchMode" : "RAW",
            "x-arrayOrderedMatching" : false,
            "x-arrayCheckCount" : false,
            "x-matchResponseSchema" : true,
            "headers" : {
              "Content-Type" : "application/json"
            },
            "body" : "{        \"status\": 200,        \"message\": \"Successful\",        \"resourceLocation\": \"https://api.shipwire.com/api/v3/webhooks/882\",        \"resource\": {                \"id\": 882,                \"topic\": \"v1.stock.transition\",                \"url\": \"https://stephensearles.com\"        }}"
          },
          "x-testShouldPass" : true,
          "x-testEnabled" : true,
          "x-testName" : "Retrieve a webhook1",
          "x-testDescription" : "Get a single subscription"
        } ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "put" : {
        "description" : "Update a subscription",
        "summary" : "Update a subscription",
        "tags" : [ "Webhooks" ],
        "operationId" : "ApiV3WebhooksByIdPut",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "number",
          "format" : "double",
          "description" : "Numeric `id` of the Webhook."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "",
          "schema" : {
            "$ref" : "#/definitions/UpdateASubscriptionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/UpdateASubscriptionResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : "https://api.shipwire.com/api/v3/webhooks/882",
                "resource" : {
                  "id" : 882,
                  "topic" : "v1.stock.transition",
                  "url" : "https://stephensearles.com/"
                }
              }
            }
          }
        },
        "x-unitTests" : [ {
          "request" : {
            "method" : "PUT",
            "uri" : "/api/v3/webhooks/1",
            "headers" : {
              "Content-Type" : "application/json"
            },
            "body" : "{        \"topic\": \"orders.created\",        \"url\": \"https://yourdomain.com/get/webhooks/here\"}"
          },
          "expectedResponse" : {
            "x-allowExtraHeaders" : true,
            "x-bodyMatchMode" : "RAW",
            "x-arrayOrderedMatching" : false,
            "x-arrayCheckCount" : false,
            "x-matchResponseSchema" : true,
            "headers" : {
              "Content-Type" : "application/json"
            },
            "body" : "{        \"status\": 200,        \"message\": \"Successful\",        \"resourceLocation\": \"https://api.shipwire.com/api/v3/webhooks/882\",        \"resource\": {                \"id\": 882,                \"topic\": \"v1.stock.transition\",                \"url\": \"https://stephensearles.com/\"        }}"
          },
          "x-testShouldPass" : true,
          "x-testEnabled" : true,
          "x-testName" : "Update a subscription1",
          "x-testDescription" : "Update a subscription"
        } ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "delete" : {
        "description" : "Delete a subscription",
        "summary" : "Remove a subscription",
        "tags" : [ "Webhooks" ],
        "operationId" : "ApiV3WebhooksByIdDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "number",
          "format" : "double",
          "description" : "Numeric `id` of the Webhook."
        } ],
        "responses" : {
          "204" : {
            "description" : ""
          }
        },
        "x-unitTests" : [ {
          "request" : {
            "method" : "DELETE",
            "uri" : "/api/v3/webhooks/1"
          },
          "expectedResponse" : {
            "x-allowExtraHeaders" : true,
            "x-bodyMatchMode" : "NONE",
            "x-arrayOrderedMatching" : false,
            "x-arrayCheckCount" : false,
            "x-matchResponseSchema" : true,
            "headers" : { }
          },
          "x-testShouldPass" : true,
          "x-testEnabled" : true,
          "x-testName" : "Remove a subscription1",
          "x-testDescription" : "Delete a subscription"
        } ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/secret" : {
      "get" : {
        "description" : "List all Secrets",
        "summary" : "List all secrets",
        "tags" : [ "Webhooks" ],
        "operationId" : "ApiV3SecretGet",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ListAllSecretsResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : "https://api.shipwire.com/secret?offset=0&limit=20",
                "resource" : {
                  "offset" : 0,
                  "total" : 1,
                  "previous" : null,
                  "next" : null,
                  "items" : [ {
                    "resourceLocation" : "https://api.shipwire.com/secret/111",
                    "resource" : {
                      "id" : 111,
                      "secret" : "9d573f...6015c",
                      "expiration" : null
                    }
                  } ]
                }
              }
            }
          }
        },
        "x-unitTests" : [ {
          "request" : {
            "method" : "GET",
            "uri" : "/api/v3/secret"
          },
          "expectedResponse" : {
            "x-allowExtraHeaders" : true,
            "x-bodyMatchMode" : "RAW",
            "x-arrayOrderedMatching" : false,
            "x-arrayCheckCount" : false,
            "x-matchResponseSchema" : true,
            "headers" : {
              "Content-Type" : "application/json"
            },
            "body" : "{        \"status\": 200,        \"message\": \"Successful\",        \"resourceLocation\": \"https://api.shipwire.com/secret?offset=0&limit=20\",        \"resource\": {                \"offset\": 0,                \"total\": 1,                \"previous\": null,                \"next\": null,                \"items\": [{                        \"resourceLocation\": \"https://api.shipwire.com/secret/111\",                        \"resource\": {                                \"id\": 111,                                \"secret\": \"9d573f...6015c\",                                \"expiration\": null                        }                }]        }}"
          },
          "x-testShouldPass" : true,
          "x-testEnabled" : true,
          "x-testName" : "List all secrets1",
          "x-testDescription" : "List all Secrets"
        } ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "post" : {
        "description" : "Create a new secret",
        "summary" : "Create a secret",
        "tags" : [ "Webhooks" ],
        "operationId" : "ApiV3SecretPost",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "201" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CreateASecretResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : "https://api.shipwire.com/secret/111",
                "resource" : {
                  "id" : 111,
                  "secret" : "9d573f...6015c",
                  "expiration" : null
                }
              }
            }
          }
        },
        "x-unitTests" : [ {
          "request" : {
            "method" : "POST",
            "uri" : "/api/v3/secret"
          },
          "expectedResponse" : {
            "x-allowExtraHeaders" : true,
            "x-bodyMatchMode" : "RAW",
            "x-arrayOrderedMatching" : false,
            "x-arrayCheckCount" : false,
            "x-matchResponseSchema" : true,
            "headers" : {
              "Content-Type" : "application/json"
            },
            "body" : "{        \"status\": 200,        \"message\": \"Successful\",        \"resourceLocation\": \"https://api.shipwire.com/secret/111\",        \"resource\": {                \"id\": 111,                \"secret\": \"9d573f...6015c\",                \"expiration\": null        }}"
          },
          "x-testShouldPass" : true,
          "x-testEnabled" : true,
          "x-testName" : "Create a secret1",
          "x-testDescription" : "Create a new secret"
        } ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    },
    "/api/v3/secret/{id}" : {
      "get" : {
        "description" : "Get a single secret",
        "summary" : "Retrieve a secret",
        "tags" : [ "Webhooks" ],
        "operationId" : "ApiV3SecretByIdGet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "number",
          "format" : "double",
          "description" : "Numeric `id` of the secret."
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/RetrieveASecretResponse"
            },
            "examples" : {
              "application/json" : {
                "status" : 200,
                "message" : "Successful",
                "resourceLocation" : "https://api.shipwire.com/secret/111",
                "resource" : {
                  "id" : 111,
                  "secret" : "9d573f...6015c",
                  "expiration" : null
                }
              }
            }
          }
        },
        "x-unitTests" : [ {
          "request" : {
            "method" : "GET",
            "uri" : "/api/v3/secret/1"
          },
          "expectedResponse" : {
            "x-allowExtraHeaders" : true,
            "x-bodyMatchMode" : "RAW",
            "x-arrayOrderedMatching" : false,
            "x-arrayCheckCount" : false,
            "x-matchResponseSchema" : true,
            "headers" : {
              "Content-Type" : "application/json"
            },
            "body" : "{        \"status\": 200,        \"message\": \"Successful\",        \"resourceLocation\": \"https://api.shipwire.com/secret/111\",        \"resource\": {                \"id\": 111,                \"secret\": \"9d573f...6015c\",                \"expiration\": null        }}"
          },
          "x-testShouldPass" : true,
          "x-testEnabled" : true,
          "x-testName" : "Retrieve a secret1",
          "x-testDescription" : "Get a single secret"
        } ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      },
      "delete" : {
        "description" : "Delete a subscription",
        "summary" : "Remove a subscription1",
        "tags" : [ "Webhooks" ],
        "operationId" : "ApiV3SecretByIdDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "number",
          "format" : "double",
          "description" : "Numeric `id` of the secret."
        } ],
        "responses" : {
          "204" : {
            "description" : ""
          }
        },
        "x-unitTests" : [ {
          "request" : {
            "method" : "DELETE",
            "uri" : "/api/v3/secret/1"
          },
          "expectedResponse" : {
            "x-allowExtraHeaders" : true,
            "x-bodyMatchMode" : "NONE",
            "x-arrayOrderedMatching" : false,
            "x-arrayCheckCount" : false,
            "x-matchResponseSchema" : true,
            "headers" : { }
          },
          "x-testShouldPass" : true,
          "x-testEnabled" : true,
          "x-testName" : "Remove a subscription11",
          "x-testDescription" : "Delete a subscription"
        } ],
        "x-operation-settings" : {
          "CollectParameters" : false,
          "AllowDynamicQueryParameters" : false,
          "AllowDynamicFormParameters" : false,
          "IsMultiContentStreaming" : false
        }
      }
    }
  },
  "definitions" : {
    "AddressValidationRequestResponse" : {
      "title" : "Address Validation Request response",
      "example" : {
        "status" : 200,
        "message" : "The address provided is valid",
        "resourceLocation" : null,
        "resource" : {
          "name" : "Mr. Smith",
          "company" : "Ingram Micro Inc.",
          "address1" : "3351 Michelson Dr STE 100",
          "address2" : "",
          "address3" : "",
          "city" : "Irvine",
          "state" : "CA",
          "postalCode" : "92612-0697",
          "country" : "US",
          "phone" : "888-555-1212",
          "isCommercial" : 1,
          "isPoBox" : 0
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "resourceLocation", "resource" ]
    },
    "AddressValidationRequest422Response" : {
      "title" : "Address Validation Request 422 response",
      "example" : {
        "status" : 422,
        "message" : "The address provided is invalid",
        "warnings" : {
          "0" : {
            "address1" : {
              "rules" : {
                "invalidStreetAddress" : {
                  "message" : "Invalid street address submitted",
                  "ruleValue" : {
                    "suggestedValue" : "3351 MICHELSON DR STE 100"
                  }
                }
              }
            },
            "city" : {
              "rules" : {
                "invalidCityAddress" : {
                  "message" : "Invalid city submitted",
                  "ruleValue" : {
                    "suggestedValue" : "IRVINE"
                  }
                }
              }
            },
            "postalCode" : {
              "rules" : {
                "invalidPostalCodeAddress" : {
                  "message" : "Invalid postal code submitted",
                  "ruleValue" : {
                    "suggestedValue" : 92612
                  }
                },
                "invalidZIP4Address" : {
                  "message" : "Invalid postal code plus4 submitted",
                  "ruleValue" : {
                    "suggestedValue" : 697.0
                  }
                }
              }
            }
          }
        },
        "errors" : {
          "0" : {
            "phone" : {
              "rules" : {
                "Regex" : {
                  "message" : "Submitted phone number 888-555-121 is invalid",
                  "ruleValue" : {
                    "pattern" : "/^(?:1(?:[. -])?)?(?:\\((?=\\d{3}\\)))?([2-9]\\d{2})(?:(?<=\\(\\d{3})\\))? ?(?:(?<=\\d{3})[.-])?([2-9]\\d{2})[. -]?(\\d{4})(?: (?i:ext)\\.? ?(\\d{1,5}))?$/",
                    "htmlPattern" : null,
                    "match" : true
                  }
                }
              }
            }
          }
        },
        "resourceLocation" : null,
        "resource" : {
          "name" : "Mr. Smith",
          "company" : "Ingram Micro Inc.",
          "address1" : "3351 Michalson Dr STE 100",
          "address2" : "",
          "address3" : "",
          "city" : "Irvin",
          "state" : "CA",
          "postalCode" : "92615-0698",
          "country" : "US",
          "phone" : "888-555-121",
          "isCommercial" : 1,
          "isPoBox" : 0
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "warnings" : {
          "description" : "",
          "type" : "object"
        },
        "errors" : {
          "description" : "",
          "type" : "object"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "warnings", "errors", "resourceLocation", "resource" ]
    },
    "GetContainersResponse" : {
      "title" : "Get containers response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : "https://api.shipwire.com/api/v3.1/containers?offset=0&limit=20",
        "resource" : {
          "offset" : 0,
          "total" : 30,
          "previous" : null,
          "next" : null,
          "items" : [ {
            "resourceLocation" : "https://api.shipwire.com/api/v3.1/containers/245641",
            "resource" : {
              "id" : 245641,
              "externalId" : null,
              "name" : "6.00 X 6.00 X 6.00 box",
              "type" : "box",
              "isActive" : 1,
              "warehouseId" : 3811,
              "warehouseExternalId" : null,
              "basis" : 5005.0,
              "serviceSpecificCarrierCode" : null,
              "dimensions" : {
                "resourceLocation" : null,
                "resource" : {
                  "length" : 6.0,
                  "width" : 6.0,
                  "height" : 6.0,
                  "weight" : 0.26,
                  "maxWeight" : 40.0,
                  "lengthUnit" : "IN",
                  "widthUnit" : "IN",
                  "heightUnit" : "IN",
                  "weightUnit" : "LB",
                  "maxWeightUnit" : "LB"
                }
              },
              "values" : {
                "resourceLocation" : null,
                "resource" : {
                  "costValue" : 0.0,
                  "retailValue" : 0.0,
                  "costValueCurrency" : "USD",
                  "retailValueCurrency" : "USD"
                }
              }
            }
          }, {
            "resourceLocation" : "https://api.shipwire.com/api/v3.1/containers/245651",
            "resource" : {
              "id" : 245651,
              "externalId" : null,
              "name" : "8.00 X 8.00 X 8.00 box",
              "type" : "box",
              "isActive" : 1,
              "warehouseId" : 3811,
              "warehouseExternalId" : null,
              "basis" : 5015.0,
              "serviceSpecificCarrierCode" : null,
              "dimensions" : {
                "resourceLocation" : null,
                "resource" : {
                  "length" : 8.0,
                  "width" : 8.0,
                  "height" : 8.0,
                  "weight" : 0.45,
                  "maxWeight" : 40.0,
                  "lengthUnit" : "IN",
                  "widthUnit" : "IN",
                  "heightUnit" : "IN",
                  "weightUnit" : "LB",
                  "maxWeightUnit" : "LB"
                }
              },
              "values" : {
                "resourceLocation" : null,
                "resource" : {
                  "costValue" : 0.0,
                  "retailValue" : 0.0,
                  "costValueCurrency" : "USD",
                  "retailValueCurrency" : "USD"
                }
              }
            }
          } ]
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "resourceLocation", "resource" ]
    },
    "CreateANewContainerResponse" : {
      "title" : "Create a new container response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "warnings" : { },
        "errors" : { },
        "resourceLocation" : "https://api.shipwire.com/api/v3.1/containers?offset=0&limit=20",
        "resource" : {
          "offset" : 0,
          "total" : 1,
          "previous" : null,
          "next" : null,
          "items" : [ {
            "resourceLocation" : "https://api.shipwire.com/api/v3.1/containers/302281",
            "resource" : {
              "id" : 302281,
              "externalId" : 1002,
              "name" : "25.00 X 5.00 X 5.00 box",
              "type" : "box",
              "isActive" : 1,
              "warehouseId" : 3071,
              "warehouseExternalId" : null,
              "basis" : 5045.0,
              "serviceSpecificCarrierCode" : "FDX FT",
              "dimensions" : {
                "resourceLocation" : null,
                "resource" : {
                  "length" : 20.0,
                  "width" : 5.0,
                  "height" : 5.0,
                  "weight" : 0.46,
                  "maxWeight" : 40.0,
                  "lengthUnit" : "IN",
                  "widthUnit" : "IN",
                  "heightUnit" : "IN",
                  "weightUnit" : "LB",
                  "maxWeightUnit" : "LB"
                }
              },
              "values" : {
                "resourceLocation" : null,
                "resource" : {
                  "costValue" : 10.0,
                  "retailValue" : 50.0,
                  "costValueCurrency" : "USD",
                  "retailValueCurrency" : "USD"
                }
              }
            }
          } ]
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "warnings" : {
          "description" : "",
          "type" : "object"
        },
        "errors" : {
          "description" : "",
          "type" : "object"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "warnings", "errors", "resourceLocation", "resource" ]
    },
    "UpdateAContainerRequest" : {
      "title" : "Update a container request",
      "type" : "object",
      "properties" : {
        "externalId" : {
          "description" : "",
          "type" : "string"
        },
        "name" : {
          "description" : "",
          "type" : "string"
        },
        "type" : {
          "description" : "",
          "type" : "string"
        },
        "isActive" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "warehouseId" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "basis" : {
          "description" : "",
          "type" : "string"
        },
        "serviceSpecificCarrierCode" : {
          "description" : "",
          "type" : "string"
        },
        "dimensions" : {
          "description" : "",
          "type" : "object"
        },
        "values" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "externalId", "name", "type", "isActive", "warehouseId", "basis", "serviceSpecificCarrierCode", "dimensions", "values" ]
    },
    "UpdateAContainerResponse" : {
      "title" : "Update a container response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "warnings" : { },
        "errors" : { },
        "resourceLocation" : "https://api.shipwire.com/api/v3.1/containers?offset=0&limit=20",
        "resource" : {
          "offset" : 0,
          "total" : 1,
          "previous" : null,
          "next" : null,
          "items" : [ {
            "resourceLocation" : "https://api.shipwire.com/api/v3.1/containers/302281",
            "resource" : {
              "id" : 302281,
              "externalId" : 1002,
              "name" : "25.00 X 5.00 X 5.00 box updated",
              "type" : "box",
              "isActive" : 1,
              "warehouseId" : 3071,
              "warehouseExternalId" : null,
              "basis" : 5045.0,
              "serviceSpecificCarrierCode" : "FDX FT",
              "dimensions" : {
                "resourceLocation" : null,
                "resource" : {
                  "length" : 20.0,
                  "width" : 5.0,
                  "height" : 5.0,
                  "weight" : 0.46,
                  "maxWeight" : 40.0,
                  "lengthUnit" : "IN",
                  "widthUnit" : "IN",
                  "heightUnit" : "IN",
                  "weightUnit" : "LB",
                  "maxWeightUnit" : "LB"
                }
              },
              "values" : {
                "resourceLocation" : null,
                "resource" : {
                  "costValue" : 10.0,
                  "retailValue" : 50.0,
                  "costValueCurrency" : "USD",
                  "retailValueCurrency" : "USD"
                }
              }
            }
          } ]
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "warnings" : {
          "description" : "",
          "type" : "object"
        },
        "errors" : {
          "description" : "",
          "type" : "object"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "warnings", "errors", "resourceLocation", "resource" ]
    },
    "getAContainerResponse" : {
      "title" : "?Get a container response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : "https://api.shipwire.com/api/v3.1/containers/302281",
        "resource" : {
          "id" : 302281,
          "externalId" : 1002,
          "name" : "25.00 X 5.00 X 5.00 box update",
          "type" : "box",
          "isActive" : 1,
          "warehouseId" : 3071,
          "warehouseExternalId" : null,
          "basis" : 5045.0,
          "serviceSpecificCarrierCode" : "FDX FT",
          "dimensions" : {
            "resourceLocation" : null,
            "resource" : {
              "length" : 20.0,
              "width" : 5.0,
              "height" : 5.0,
              "weight" : 0.46,
              "maxWeight" : 40.0,
              "lengthUnit" : "IN",
              "widthUnit" : "IN",
              "heightUnit" : "IN",
              "weightUnit" : "LB",
              "maxWeightUnit" : "LB"
            }
          },
          "values" : {
            "resourceLocation" : null,
            "resource" : {
              "costValue" : 10.0,
              "retailValue" : 50.0,
              "costValueCurrency" : "USD",
              "retailValueCurrency" : "USD"
            }
          }
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "resourceLocation", "resource" ]
    },
    "CreateTrackingForAnOrderRequest" : {
      "title" : "Create tracking for an order request",
      "type" : "object",
      "properties" : {
        "tracking" : {
          "description" : "",
          "type" : "string"
        },
        "carrier" : {
          "description" : "",
          "type" : "string"
        },
        "carrierCode" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "tracking", "carrier", "carrierCode" ]
    },
    "GetShippingOrderShippingLabelResponse" : {
      "title" : "Get shipping order Shipping Label response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : "https://api.shipwire.com/api/v3/orders/12345/shippingLabel",
        "resource" : {
          "orderId" : 12345,
          "externalId" : null,
          "warehouseId" : 84141,
          "warehouseExternalId" : "external-retailer11",
          "vendorId" : 20321,
          "vendorExternalId" : null,
          "documentLocation" : "https://api.shipwire.com/api/v3/orders/12345/shippingLabel"
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "resourceLocation", "resource" ]
    },
    "ClearTheHoldResponse" : {
      "title" : "Clear the hold response",
      "example" : {
        "status" : 200,
        "message" : "Manual hold cleared (if exists)",
        "resourceLocation" : null
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "status", "message", "resourceLocation" ]
    },
    "MarkTheOrderProcessedResponse" : {
      "title" : "Mark the order processed response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : null
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "status", "message", "resourceLocation" ]
    },
    "MarkTheOrderSubmittedResponse" : {
      "title" : "Mark the order submitted response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : null
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "status", "message", "resourceLocation" ]
    },
    "MarkTheOrderCompletedResponse" : {
      "title" : "Mark the order completed response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : null
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "status", "message", "resourceLocation" ]
    },
    "RetireProductsRequest" : {
      "title" : "Retire products request",
      "type" : "object",
      "properties" : {
        "ids" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "required" : [ "ids" ]
    },
    "RetireProductsResponse" : {
      "title" : "Retire products response",
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "moreInfo" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "status", "message", "moreInfo", "resourceLocation" ]
    },
    "HoldAPurchaseOrderResponse" : {
      "title" : "Hold a Purchase order response",
      "example" : {
        "status" : 200,
        "message" : "Manual hold placed",
        "resourceLocation" : null
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "status", "message", "resourceLocation" ]
    },
    "ClearAnyManualHoldsOnThisPurchaseOrderResponse" : {
      "title" : "Clear any manual holds on this purchase order response",
      "example" : {
        "status" : 200,
        "message" : "Manual hold cleared (if exists)",
        "resourceLocation" : null
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "status", "message", "resourceLocation" ]
    },
    "GetItemsDetailResponse" : {
      "title" : "Get items detail response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : "https://api.shipwire.com/api/v3/purchaseOrders/704891/items?offset=0&limit=20",
        "resource" : {
          "offset" : 0,
          "total" : 1,
          "previous" : null,
          "next" : null,
          "items" : [ {
            "resourceLocation" : null,
            "resource" : {
              "retailerLineNo" : null,
              "sku" : "BP1iz5h",
              "retailerSku" : null,
              "supplierSku" : null,
              "upc" : null,
              "description" : null,
              "quantity" : 1,
              "unitOfMeasure" : null,
              "retailValue" : 123.57,
              "wholesaleValue" : 92.67,
              "costValue" : 30.88,
              "discountAmount" : 0,
              "taxAmount" : 0,
              "extendedAttributes" : {
                "resourceLocation" : null,
                "resource" : {
                  "offset" : 0,
                  "total" : 1,
                  "previous" : null,
                  "next" : null,
                  "items" : [ {
                    "resourceLocation" : null,
                    "resource" : {
                      "name" : "Product Origin",
                      "value" : "US",
                      "type" : "string"
                    }
                  } ]
                }
              },
              "lineId" : 998361,
              "productId" : 6379661,
              "productExternalId" : null,
              "purchaseOrderId" : 704891,
              "purchaseOrderExternalId" : null,
              "status" : "Pending"
            }
          } ]
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "resourceLocation", "resource" ]
    },
    "ApproveThePurchaseOrderResponse" : {
      "title" : "Approve the Purchase Order response",
      "example" : {
        "status" : 200,
        "message" : "Purchase order approved",
        "resourceLocation" : null
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "status", "message", "resourceLocation" ]
    },
    "CancelAReceivingOrderResponse" : {
      "title" : "Cancel a receiving order response",
      "example" : {
        "status" : 200,
        "resourceLocation" : null,
        "message" : "Receiving was cancelled"
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "status", "resourceLocation", "message" ]
    },
    "CancelAReceivingLabelResponse" : {
      "title" : "Cancel a receiving label response",
      "example" : {
        "status" : 200,
        "resourceLocation" : null,
        "message" : "Labels cancelled"
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "status", "resourceLocation", "message" ]
    },
    "MarkTheReceivingCompletedResponse" : {
      "title" : "Mark the receiving completed response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : null
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "status", "message", "resourceLocation" ]
    },
    "CreateAnReturnOrderRequest" : {
      "title" : "Create an return order request",
      "example" : {
        "externalId" : "eId123",
        "originalOrder" : {
          "id" : 673
        },
        "items" : [ {
          "sku" : "Laura-s_Pen",
          "quantity" : 1
        } ],
        "options" : {
          "generatePrepaidLabel" : 1,
          "emailCustomer" : 1,
          "warehouseId" : 11,
          "warehouseExternalId" : 12,
          "warehouseRegion" : "LAX"
        }
      },
      "type" : "object",
      "properties" : {
        "externalId" : {
          "description" : "",
          "type" : "string"
        },
        "originalOrder" : {
          "description" : "",
          "type" : "object"
        },
        "items" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "options" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "externalId", "originalOrder", "items", "options" ]
    },
    "CancelReturnOrderResponse" : {
      "title" : "Cancel a receiving order response",
      "example" : {
        "status" : 200,
        "resourceLocation" : null,
        "message" : "Return Order cancelled"
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "status", "resourceLocation", "message" ]
    },
    "MarkReturnCompletedResponse" : {
      "title" : "Mark return completed response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : null
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "status", "message", "resourceLocation" ]
    },
    "GetVendorsResponse" : {
      "title" : "Get vendors response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : "https://api.shipwire.com/api/v3.1/vendors?offset=0&limit=20",
        "resource" : {
          "offset" : 0,
          "total" : 2,
          "previous" : null,
          "next" : null,
          "items" : [ {
            "resourceLocation" : "https://api.shipwire.com/api/v3.1/vendors/2861",
            "resource" : {
              "id" : 2861,
              "name" : "Widget Mega Factory",
              "status" : "active",
              "description" : "",
              "externalId" : 1000,
              "address" : {
                "resourceLocation" : null,
                "resource" : {
                  "name" : "Colonel Sanders",
                  "email" : "customercare@widgets.com",
                  "phone" : "555-555-5555",
                  "fax" : "555-555-5555",
                  "address1" : "123 Indio way",
                  "address2" : "",
                  "address3" : "",
                  "city" : "Sunnyvale",
                  "state" : "CA",
                  "postalCode" : 94085,
                  "country" : "US"
                }
              },
              "extendedAttributes" : {
                "resourceLocation" : "https://api.shipwire.com/api/v3.1/vendors/2861/extendedAttributes?offset=0&limit=20",
                "resource" : {
                  "offset" : 0,
                  "total" : 2,
                  "previous" : null,
                  "next" : null,
                  "items" : [ {
                    "resourceLocation" : null,
                    "resource" : {
                      "name" : "alternateEmail",
                      "value" : "customercare2@widgets.com",
                      "type" : "string"
                    }
                  }, {
                    "resourceLocation" : null,
                    "resource" : {
                      "name" : "category",
                      "value" : "Mega Widgets",
                      "type" : "string"
                    }
                  } ]
                }
              }
            }
          }, {
            "resourceLocation" : "https://api.shipwire.com/api/v3.1/vendors/2851",
            "resource" : {
              "id" : 2851,
              "name" : "Cool Widgets Dot Com",
              "status" : "inactive",
              "description" : "",
              "externalId" : 1001,
              "address" : {
                "resourceLocation" : null,
                "resource" : {
                  "name" : "Bob Ross",
                  "email" : "",
                  "phone" : "555-555-5555",
                  "fax" : "",
                  "address1" : "321 Indio way",
                  "address2" : "",
                  "address3" : "",
                  "city" : "Mountain View",
                  "state" : "CA",
                  "postalCode" : 94035,
                  "country" : "US"
                }
              },
              "extendedAttributes" : {
                "resourceLocation" : "https://api.shipwire.com/api/v3.1/vendors/2851/extendedAttributes?offset=0&limit=20",
                "resource" : {
                  "offset" : 0,
                  "total" : 1,
                  "previous" : null,
                  "next" : null,
                  "items" : [ {
                    "resourceLocation" : null,
                    "resource" : {
                      "name" : "alternatePhoneNumber",
                      "value" : "800 (555) 123-4567",
                      "type" : "string"
                    }
                  } ]
                }
              }
            }
          } ]
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "resourceLocation", "resource" ]
    },
    "CreateANewVendorRequest" : {
      "title" : "Create a new vendor request",
      "type" : "object",
      "properties" : {
        "name" : {
          "description" : "",
          "type" : "string"
        },
        "status" : {
          "description" : "",
          "type" : "string"
        },
        "description" : {
          "description" : "",
          "type" : "string"
        },
        "externalId" : {
          "description" : "",
          "type" : "string"
        },
        "address" : {
          "description" : "",
          "type" : "object"
        },
        "extendedAttributes" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      },
      "required" : [ "name", "status", "description", "externalId", "address", "extendedAttributes" ]
    },
    "CreateANewVendorResponse" : {
      "title" : "Create a new vendor response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "warnings" : { },
        "errors" : { },
        "resourceLocation" : "https://api.developer.corp.shipwire.com/api/v3.1/vendors?offset=0&limit=1",
        "resource" : {
          "offset" : 0,
          "total" : 1,
          "previous" : null,
          "next" : null,
          "items" : [ {
            "resourceLocation" : "https://api.developer.corp.shipwire.com/api/v3.1/vendors/2911",
            "resource" : {
              "id" : 2911,
              "name" : "Honest Widget Company",
              "status" : "active",
              "description" : "An honest widget company",
              "externalId" : 1002,
              "address" : {
                "resourceLocation" : null,
                "resource" : {
                  "name" : "Honest Abe",
                  "email" : "customersupport@widgets.com",
                  "phone" : "555-555-5555",
                  "fax" : "555-555-5556",
                  "address1" : "789 Indio way",
                  "address2" : "",
                  "address3" : "",
                  "city" : "Sunnyvale",
                  "state" : "CA",
                  "postalCode" : 94085,
                  "country" : "US"
                }
              },
              "extendedAttributes" : {
                "resourceLocation" : "https://api.developer.corp.shipwire.com/api/v3.1/vendors/2911/extendedAttributes?offset=0&limit=20",
                "resource" : {
                  "offset" : 0,
                  "total" : 1,
                  "previous" : null,
                  "next" : null,
                  "items" : [ {
                    "resourceLocation" : null,
                    "resource" : {
                      "name" : "alternateEmail",
                      "value" : "customersupport2@widgets.com",
                      "type" : "string"
                    }
                  } ]
                }
              }
            }
          } ]
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "warnings" : {
          "description" : "",
          "type" : "object"
        },
        "errors" : {
          "description" : "",
          "type" : "object"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "warnings", "errors", "resourceLocation", "resource" ]
    },
    "UpdateAVendorRequest" : {
      "title" : "Update a vendor request",
      "type" : "object",
      "properties" : {
        "name" : {
          "description" : "",
          "type" : "string"
        },
        "status" : {
          "description" : "",
          "type" : "string"
        },
        "description" : {
          "description" : "",
          "type" : "string"
        },
        "externalId" : {
          "description" : "",
          "type" : "string"
        },
        "address" : {
          "description" : "",
          "type" : "object"
        },
        "extendedAttributes" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      },
      "required" : [ "name", "status", "description", "externalId", "address", "extendedAttributes" ]
    },
    "UpdateAVendorResponse" : {
      "title" : "Update a vendor response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "warnings" : { },
        "errors" : { },
        "resourceLocation" : "https://api.shipwire.com/api/v3.1/vendors?offset=0&limit=20",
        "resource" : {
          "offset" : 0,
          "total" : 1,
          "previous" : null,
          "next" : null,
          "items" : [ {
            "resourceLocation" : "https://api.shipwire.com/api/v3.1/vendors/2861",
            "resource" : {
              "id" : 2861,
              "name" : "Updated Vendor Name",
              "status" : "active",
              "description" : "This is the updated description",
              "externalId" : 1002,
              "address" : {
                "resourceLocation" : null,
                "resource" : {
                  "name" : "Updated Contact Name",
                  "email" : "updated@widgets.com",
                  "phone" : "555-555-5555",
                  "fax" : "555-555-5555",
                  "address1" : "123 Indio way",
                  "address2" : "",
                  "address3" : "",
                  "city" : "Sunnyvale",
                  "state" : "CA",
                  "postalCode" : 94085,
                  "country" : "US"
                }
              },
              "extendedAttributes" : {
                "resourceLocation" : "https://api.shipwire.com/api/v3.1/vendors/2861/extendedAttributes?offset=0&limit=20",
                "resource" : {
                  "offset" : 0,
                  "total" : 1,
                  "previous" : null,
                  "next" : null,
                  "items" : [ {
                    "resourceLocation" : null,
                    "resource" : {
                      "name" : "alternateEmail",
                      "value" : "customercare2@widgets.com",
                      "type" : "string"
                    }
                  } ]
                }
              }
            }
          } ]
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "warnings" : {
          "description" : "",
          "type" : "object"
        },
        "errors" : {
          "description" : "",
          "type" : "object"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "warnings", "errors", "resourceLocation", "resource" ]
    },
    "GetAVendorResponse" : {
      "title" : "Get a vendor response",
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "resourceLocation", "resource" ]
    },
    "RetireAVendorResponse" : {
      "title" : "Retire a vendor response",
      "example" : {
        "status" : 200,
        "message" : "Deleted.",
        "resourceLocation" : null
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "status", "message", "resourceLocation" ]
    },
    "RetireAVendor404Response" : {
      "title" : "Retire a vendor 404 response",
      "example" : {
        "status" : 404,
        "message" : "Vendor not found",
        "resourceLocation" : null
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "status", "message", "resourceLocation" ]
    },
    "GetAVendorsExtendedAttributesResponse" : {
      "title" : "Get a vendors extended attributes response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : "https://api.developer.corp.shipwire.com/api/v3.1/vendors/2901/extendedAttributes?offset=0&limit=20",
        "resource" : {
          "offset" : 0,
          "total" : 1,
          "previous" : null,
          "next" : null,
          "items" : [ {
            "resourceLocation" : null,
            "resource" : {
              "name" : "alternateEmail",
              "value" : "customersupport@widgets.com",
              "type" : "string"
            }
          } ]
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "resourceLocation", "resource" ]
    },
    "CreateANewWarehouseRequest" : {
      "title" : "Create a new warehouse request",
      "type" : "object",
      "properties" : {
        "externalId" : {
          "description" : "",
          "type" : "string"
        },
        "name" : {
          "description" : "",
          "type" : "string"
        },
        "code" : {
          "description" : "",
          "type" : "string"
        },
        "vendorId" : {
          "description" : "",
          "type" : "string"
        },
        "vendorExternalId" : {
          "description" : "",
          "type" : "string"
        },
        "isActive" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "address" : {
          "description" : "",
          "type" : "object"
        },
        "latitude" : {
          "description" : "",
          "type" : "number",
          "format" : "double"
        },
        "longitude" : {
          "description" : "",
          "type" : "number",
          "format" : "double"
        },
        "isRoutable" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "isRoutingOnly" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "generatesLabels" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "labelFormat" : {
          "description" : "",
          "type" : "string"
        },
        "returnWarehouseId" : {
          "description" : "",
          "type" : "string"
        },
        "returnWarehouseExternalId" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "externalId", "name", "code", "vendorId", "vendorExternalId", "isActive", "address", "latitude", "longitude", "isRoutable", "isRoutingOnly", "generatesLabels", "labelFormat", "returnWarehouseId", "returnWarehouseExternalId" ]
    },
    "UpdateAWarehouseRequest" : {
      "title" : "Update a warehouse request",
      "type" : "object",
      "properties" : {
        "externalId" : {
          "description" : "",
          "type" : "string"
        },
        "name" : {
          "description" : "",
          "type" : "string"
        },
        "code" : {
          "description" : "",
          "type" : "string"
        },
        "vendorId" : {
          "description" : "",
          "type" : "string"
        },
        "vendorExternalId" : {
          "description" : "",
          "type" : "string"
        },
        "isActive" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "address" : {
          "description" : "",
          "type" : "object"
        },
        "latitude" : {
          "description" : "",
          "type" : "number",
          "format" : "double"
        },
        "longitude" : {
          "description" : "",
          "type" : "number",
          "format" : "double"
        },
        "isRoutable" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "isRoutingOnly" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "generatesLabels" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "labelFormat" : {
          "description" : "",
          "type" : "string"
        },
        "returnWarehouseId" : {
          "description" : "",
          "type" : "string"
        },
        "returnWarehouseExternalId" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "externalId", "name", "code", "vendorId", "vendorExternalId", "isActive", "address", "latitude", "longitude", "isRoutable", "isRoutingOnly", "generatesLabels", "labelFormat", "returnWarehouseId", "returnWarehouseExternalId" ]
    },
    "RetireAWarehouseResponse" : {
      "title" : "Retire a warehouse response",
      "example" : {
        "status" : 200,
        "message" : "Deleted.",
        "resourceLocation" : null
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "status", "message", "resourceLocation" ]
    },
    "RetireAWarehouse404Response" : {
      "title" : "Retire a warehouse 404 response",
      "example" : {
        "status" : 404,
        "message" : "Warehouse not found",
        "resourceLocation" : null
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "status", "message", "resourceLocation" ]
    },
    "ListAllWebhooksResponse" : {
      "title" : "List all Webhooks response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : "https://api.shipwire.com/api/v3/webhooks?offset=0&limit=20",
        "resource" : {
          "offset" : 0,
          "total" : 1,
          "previous" : null,
          "next" : null,
          "items" : [ {
            "resourceLocation" : "https://api.shipwire.com/api/v3/webhooks/882",
            "resource" : {
              "id" : 882,
              "topic" : "v1.stock.transition",
              "url" : "https://stephensearles.com"
            }
          } ]
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "resourceLocation", "resource" ]
    },
    "CreateASubscriptionRequest" : {
      "title" : "Create a subscription request",
      "example" : {
        "topic" : "orders",
        "url" : "https://yourdomain.com/get/webhooks/here"
      },
      "type" : "object",
      "properties" : {
        "topic" : {
          "description" : "",
          "type" : "string"
        },
        "url" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "topic", "url" ]
    },
    "CreateASubscriptionResponse" : {
      "title" : "Create a subscription response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : "https://api.shipwire.com/api/v3/webhooks?offset=0&limit=1",
        "resource" : {
          "offset" : 0,
          "total" : 1,
          "previous" : null,
          "next" : null,
          "items" : [ {
            "resourceLocation" : "https://api.shipwire.com/api/v3/webhooks/921",
            "resource" : {
              "id" : 921,
              "topic" : "stock.transition",
              "url" : "https://stephensearles.com"
            }
          } ]
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "resourceLocation", "resource" ]
    },
    "RetrieveAWebhookResponse" : {
      "title" : "Retrieve a webhook response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : "https://api.shipwire.com/api/v3/webhooks/882",
        "resource" : {
          "id" : 882,
          "topic" : "v1.stock.transition",
          "url" : "https://stephensearles.com"
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "resourceLocation", "resource" ]
    },
    "UpdateASubscriptionRequest" : {
      "title" : "Update a subscription request",
      "example" : {
        "topic" : "orders.created",
        "url" : "https://yourdomain.com/get/webhooks/here"
      },
      "type" : "object",
      "properties" : {
        "topic" : {
          "description" : "",
          "type" : "string"
        },
        "url" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "topic", "url" ]
    },
    "UpdateASubscriptionResponse" : {
      "title" : "Update a subscription response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : "https://api.shipwire.com/api/v3/webhooks/882",
        "resource" : {
          "id" : 882,
          "topic" : "v1.stock.transition",
          "url" : "https://stephensearles.com/"
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "resourceLocation", "resource" ]
    },
    "ListAllSecretsResponse" : {
      "title" : "List all secrets response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : "https://api.shipwire.com/secret?offset=0&limit=20",
        "resource" : {
          "offset" : 0,
          "total" : 1,
          "previous" : null,
          "next" : null,
          "items" : [ {
            "resourceLocation" : "https://api.shipwire.com/secret/111",
            "resource" : {
              "id" : 111,
              "secret" : "9d573f...6015c",
              "expiration" : null
            }
          } ]
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "resourceLocation", "resource" ]
    },
    "CreateASecretResponse" : {
      "title" : "Create a secret response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : "https://api.shipwire.com/secret/111",
        "resource" : {
          "id" : 111,
          "secret" : "9d573f...6015c",
          "expiration" : null
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "resourceLocation", "resource" ]
    },
    "RetrieveASecretResponse" : {
      "title" : "Retrieve a secret response",
      "example" : {
        "status" : 200,
        "message" : "Successful",
        "resourceLocation" : "https://api.shipwire.com/secret/111",
        "resource" : {
          "id" : 111,
          "secret" : "9d573f...6015c",
          "expiration" : null
        }
      },
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "",
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "description" : "",
          "type" : "string"
        },
        "resourceLocation" : {
          "description" : "",
          "type" : "string"
        },
        "resource" : {
          "description" : "",
          "type" : "object"
        }
      },
      "required" : [ "status", "message", "resourceLocation", "resource" ]
    }
  }
}